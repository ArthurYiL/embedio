{
  "api/Unosquare.Net.html": {
    "href": "api/Unosquare.Net.html",
    "title": "Namespace Unosquare.Net | Unosquare EmbedIO",
    "keywords": "Namespace Unosquare.Net Classes CookieCollection Represents Cookie collection. EndPointManager Represents the EndPoint Manager. HttpListener The EmbedIO implementation of the standard HTTP Listener class. Based on MONO HttpListener class. HttpListenerContext Provides access to the request and response objects used by the HttpListener class. This class cannot be inherited. HttpListenerException Represents an HTTP Listener's exception. MessageEventArgs Represents the event data for the OnMessage event. WebSocket Implements the WebSocket interface. WebSocketContext Provides the properties used to access the information in a WebSocket handshake request received by the HttpListener . WebSocketException The exception that is thrown when a WebSocket gets a fatal error. WebSocketReceiveResult Represents a WS Receive result. Enums CloseStatusCode Indicates the status code for the WebSocket connection close. Opcode Indicates the WebSocket frame type. WebSocketState Indicates the state of a WebSocket connection. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.WebSocketState.html": {
    "href": "api/Unosquare.Net.WebSocketState.html",
    "title": "Enum WebSocketState | Unosquare EmbedIO",
    "keywords": "Enum WebSocketState Indicates the state of a WebSocket connection. Namespace : Unosquare.Net Syntax public enum WebSocketState : ushort Remarks The values of this enumeration are defined in The WebSocket API . Fields Name Description Closed Equivalent to numeric value 3. Indicates that the connection has been closed or couldn't be established. Closing Equivalent to numeric value 2. Indicates that the connection is going through the closing handshake, or the WebSocket.Close method has been invoked. Connecting Equivalent to numeric value 0. Indicates that the connection hasn't yet been established. Open Equivalent to numeric value 1. Indicates that the connection has been established, and the communication is possible. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.WebSocketReceiveResult.html": {
    "href": "api/Unosquare.Net.WebSocketReceiveResult.html",
    "title": "Class WebSocketReceiveResult | Unosquare EmbedIO",
    "keywords": "Class WebSocketReceiveResult Represents a WS Receive result. Inheritance Object WebSocketReceiveResult Implements IWebSocketReceiveResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public class WebSocketReceiveResult : IWebSocketReceiveResult Properties Count Gets the count. Declaration public int Count { get; } Property Value Type Description Int32 The count. EndOfMessage Gets a value indicating whether [end of message]. Declaration public bool EndOfMessage { get; } Property Value Type Description Boolean true if [end of message]; otherwise, false . MessageType Gets the type of the message. Declaration public int MessageType { get; } Property Value Type Description Int32 The type of the message. Implements IWebSocketReceiveResult Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.WebSocketException.html": {
    "href": "api/Unosquare.Net.WebSocketException.html",
    "title": "Class WebSocketException | Unosquare EmbedIO",
    "keywords": "Class WebSocketException The exception that is thrown when a WebSocket gets a fatal error. Inheritance Object Exception WebSocketException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public class WebSocketException : Exception, ISerializable, _Exception Properties Code Gets the status code indicating the cause of the exception. Declaration public CloseStatusCode Code { get; } Property Value Type Description CloseStatusCode One of the CloseStatusCode enum values, represents the status code indicating the cause of the exception. Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.HttpListenerException.html": {
    "href": "api/Unosquare.Net.HttpListenerException.html",
    "title": "Class HttpListenerException | Unosquare EmbedIO",
    "keywords": "Class HttpListenerException Represents an HTTP Listener's exception. Inheritance Object Exception HttpListenerException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public class HttpListenerException : Exception, ISerializable, _Exception Properties ErrorCode Gets the error code. Declaration public int ErrorCode { get; } Property Value Type Description Int32 Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.HttpListenerContext.html": {
    "href": "api/Unosquare.Net.HttpListenerContext.html",
    "title": "Class HttpListenerContext | Unosquare EmbedIO",
    "keywords": "Class HttpListenerContext Provides access to the request and response objects used by the HttpListener class. This class cannot be inherited. Inheritance Object HttpListenerContext Implements IHttpContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public sealed class HttpListenerContext : IHttpContext Properties Request Gets the HTTP Request. Declaration public IHttpRequest Request { get; } Property Value Type Description IHttpRequest The request. Response Gets the HTTP Response. Declaration public IHttpResponse Response { get; } Property Value Type Description IHttpResponse The response. User Gets the user. Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal The user. WebServer Gets or sets the web server. Declaration public IWebServer WebServer { get; set; } Property Value Type Description IWebServer The web server. Methods AcceptWebSocketAsync(Int32) Accepts the web socket asynchronous. Declaration public Task<IWebSocketContext> AcceptWebSocketAsync(int receiveBufferSize) Parameters Type Name Description Int32 receiveBufferSize Size of the receive buffer. Returns Type Description Task < IWebSocketContext > A IWebSocketContext that represents the WebSocket handshake request. Implements IHttpContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.HttpListener.html": {
    "href": "api/Unosquare.Net.HttpListener.html",
    "title": "Class HttpListener | Unosquare EmbedIO",
    "keywords": "Class HttpListener The EmbedIO implementation of the standard HTTP Listener class. Based on MONO HttpListener class. Inheritance Object HttpListener Implements IHttpListener IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public sealed class HttpListener : IHttpListener, IDisposable Constructors HttpListener(X509Certificate) Initializes a new instance of the HttpListener class. Declaration public HttpListener(X509Certificate certificate = null) Parameters Type Name Description X509Certificate certificate The certificate. Properties IgnoreWriteExceptions Gets or sets a value indicating whether the listener should ignore write exceptions. Declaration public bool IgnoreWriteExceptions { get; set; } Property Value Type Description Boolean true if [ignore write exceptions]; otherwise, false . IsListening Gets a value indicating whether this instance is listening. Declaration public bool IsListening { get; } Property Value Type Description Boolean true if this instance is listening; otherwise, false . Name Gets or sets the name. Declaration public string Name { get; } Property Value Type Description String The name. Prefixes Gets the prefixes. Declaration public List<string> Prefixes { get; } Property Value Type Description List < String > The prefixes. Methods AddPrefix(String) Adds the prefix. Declaration public void AddPrefix(string urlPrefix) Parameters Type Name Description String urlPrefix The URL prefix. Dispose() Declaration public void Dispose() GetContextAsync(CancellationToken) Gets the HTTP context asynchronous. Declaration public Task<IHttpContext> GetContextAsync(CancellationToken ct) Parameters Type Name Description CancellationToken ct The cancellation token. Returns Type Description Task < IHttpContext > A task that represents the time delay for the HTTP Context. Start() Starts this listener. Declaration public void Start() Stop() Stops this listener. Declaration public void Stop() Implements IHttpListener System.IDisposable See Also IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.EndPointManager.html": {
    "href": "api/Unosquare.Net.EndPointManager.html",
    "title": "Class EndPointManager | Unosquare EmbedIO",
    "keywords": "Class EndPointManager Represents the EndPoint Manager. Inheritance Object EndPointManager Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public static class EndPointManager Properties UseIpv6 Gets or sets a value indicating whether [use IPv6]. Declaration public static bool UseIpv6 { get; set; } Property Value Type Description Boolean true if [use IPv6]; otherwise, false . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.CookieCollection.html": {
    "href": "api/Unosquare.Net.CookieCollection.html",
    "title": "Class CookieCollection | Unosquare EmbedIO",
    "keywords": "Class CookieCollection Represents Cookie collection. Inheritance Object List < Cookie > CookieCollection Implements IList < Cookie > ICollection < Cookie > IList IReadOnlyList < Cookie > IReadOnlyCollection < Cookie > IEnumerable < Cookie > ICookieCollection ICollection IEnumerable Inherited Members System.Collections.Generic.List<Cookie>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Cookie>.System.Collections.IList.set_Item(System.Int32, System.Object) List<Cookie>.IList.Add(Object) List<Cookie>.AddRange(IEnumerable<Cookie>) List<Cookie>.AsReadOnly() List<Cookie>.BinarySearch(Int32, Int32, Cookie, IComparer<Cookie>) List<Cookie>.BinarySearch(Cookie) List<Cookie>.BinarySearch(Cookie, IComparer<Cookie>) List<Cookie>.Clear() List<Cookie>.Contains(Cookie) List<Cookie>.IList.Contains(Object) List<Cookie>.ConvertAll<TOutput>(Converter<Cookie, TOutput>) List<Cookie>.CopyTo(Cookie[]) List<Cookie>.ICollection.CopyTo(Array, Int32) List<Cookie>.CopyTo(Int32, Cookie[], Int32, Int32) List<Cookie>.CopyTo(Cookie[], Int32) List<Cookie>.Exists(Predicate<Cookie>) List<Cookie>.Find(Predicate<Cookie>) List<Cookie>.FindAll(Predicate<Cookie>) List<Cookie>.FindIndex(Predicate<Cookie>) List<Cookie>.FindIndex(Int32, Predicate<Cookie>) List<Cookie>.FindIndex(Int32, Int32, Predicate<Cookie>) List<Cookie>.FindLast(Predicate<Cookie>) List<Cookie>.FindLastIndex(Predicate<Cookie>) List<Cookie>.FindLastIndex(Int32, Predicate<Cookie>) List<Cookie>.FindLastIndex(Int32, Int32, Predicate<Cookie>) List<Cookie>.ForEach(Action<Cookie>) List<Cookie>.GetEnumerator() List<Cookie>.IEnumerable<Cookie>.GetEnumerator() List<Cookie>.IEnumerable.GetEnumerator() List<Cookie>.GetRange(Int32, Int32) List<Cookie>.IndexOf(Cookie) List<Cookie>.IList.IndexOf(Object) List<Cookie>.IndexOf(Cookie, Int32) List<Cookie>.IndexOf(Cookie, Int32, Int32) List<Cookie>.Insert(Int32, Cookie) List<Cookie>.IList.Insert(Int32, Object) List<Cookie>.InsertRange(Int32, IEnumerable<Cookie>) List<Cookie>.LastIndexOf(Cookie) List<Cookie>.LastIndexOf(Cookie, Int32) List<Cookie>.LastIndexOf(Cookie, Int32, Int32) List<Cookie>.Remove(Cookie) List<Cookie>.IList.Remove(Object) List<Cookie>.RemoveAll(Predicate<Cookie>) List<Cookie>.RemoveAt(Int32) List<Cookie>.RemoveRange(Int32, Int32) List<Cookie>.Reverse() List<Cookie>.Reverse(Int32, Int32) List<Cookie>.Sort() List<Cookie>.Sort(IComparer<Cookie>) List<Cookie>.Sort(Int32, Int32, IComparer<Cookie>) List<Cookie>.Sort(Comparison<Cookie>) List<Cookie>.ToArray() List<Cookie>.TrimExcess() List<Cookie>.TrueForAll(Predicate<Cookie>) List<Cookie>.Capacity List<Cookie>.Count List<Cookie>.IList.IsFixedSize List<Cookie>.ICollection<Cookie>.IsReadOnly List<Cookie>.IList.IsReadOnly List<Cookie>.ICollection.IsSynchronized List<Cookie>.ICollection.SyncRoot List<Cookie>.Item[Int32] List<Cookie>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public class CookieCollection : List<Cookie>, IList<Cookie>, ICollection<Cookie>, IList, IReadOnlyList<Cookie>, IReadOnlyCollection<Cookie>, IEnumerable<Cookie>, ICookieCollection, ICollection, IEnumerable Properties IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description Boolean Item[String] Gets the with the specified name. Declaration public Cookie this[string name] { get; } Parameters Type Name Description String name The name. Property Value Type Description Cookie The . SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description Object Methods Add(Cookie) Adds the specified cookie. Declaration public void Add(Cookie cookie) Parameters Type Name Description Cookie cookie The cookie. CopyTo(Array, Int32) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array Int32 index Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.IList System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> ICookieCollection System.Collections.ICollection System.Collections.IEnumerable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.CloseStatusCode.html": {
    "href": "api/Unosquare.Net.CloseStatusCode.html",
    "title": "Enum CloseStatusCode | Unosquare EmbedIO",
    "keywords": "Enum CloseStatusCode Indicates the status code for the WebSocket connection close. Namespace : Unosquare.Net Syntax public enum CloseStatusCode : ushort Remarks The values of this enumeration are defined in Section 7.4 of RFC 6455. \"Reserved value\" must not be set as a status code in a connection close frame by an endpoint. It's designated for use in applications expecting a status code to indicate that the connection was closed due to the system grounds. Fields Name Description Abnormal Equivalent to close status 1006. Indicates that the connection was closed abnormally. A Reserved value. Away Equivalent to close status 1001. Indicates that an endpoint is going away. InvalidData Equivalent to close status 1007. Indicates that an endpoint is terminating the connection because it has received a message that contains data that isn't consistent with the type of the message. MandatoryExtension Equivalent to close status 1010. Indicates that a client is terminating the connection because it has expected the server to negotiate one or more extension, but the server didn't return them in the handshake response. Normal Equivalent to close status 1000. Indicates normal close. NoStatus Equivalent to close status 1005. Indicates that no status code was actually present. A Reserved value. PolicyViolation Equivalent to close status 1008. Indicates that an endpoint is terminating the connection because it has received a message that violates its policy. ProtocolError Equivalent to close status 1002. Indicates that an endpoint is terminating the connection due to a protocol error. ServerError Equivalent to close status 1011. Indicates that a server is terminating the connection because it has encountered an unexpected condition that prevented it from fulfilling the request. TlsHandshakeFailure Equivalent to close status 1015. Indicates that the connection was closed due to a failure to perform a TLS handshake. A Reserved value. TooBig Equivalent to close status 1009. Indicates that an endpoint is terminating the connection because it has received a message that is too big to process. Undefined Equivalent to close status 1004. Still undefined. A Reserved value. UnsupportedData Equivalent to close status 1003. Indicates that an endpoint is terminating the connection because it has received a type of data that it cannot accept. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.html": {
    "href": "api/Unosquare.Labs.EmbedIO.html",
    "title": "Namespace Unosquare.Labs.EmbedIO | Unosquare EmbedIO",
    "keywords": "Namespace Unosquare.Labs.EmbedIO Classes CookieCollection Represents a wrapper for System.Net.CookieCollection . EasyRoutes Extension methods to add easily routes to a IWebServer . Extensions Extension methods to help your coding!. HttpContext Represents a wrapper around a regular HttpListenerContext. HttpListenerFactory Represents a Factory to create a HTTP Listener. HttpRequest Represents a wrapper for HttpListenerContext.Request. HttpResponse Represents a wrapper for HttpListenerContext.Response. Map Represents a binding of path and verb to a given method call (delegate). ModuleMap Represents a list which binds Paths and their corresponding HTTP Verbs to Method calls. SessionInfo Represents the contents of an HTTP Session. WebModuleBase Base class to define custom web modules. Inherit from this class and use the AddHandler Method to register your method calls. WebServer Represents our tiny web server used to handle requests. This is the default implementation of IWebServer and it's ready to select the IHttpListener implementation via the proper constructor. By default, the WebServer will use the Regex RoutingStrategy for all registered modules ( IWebModule ) and EmbedIO Listener ( HttpListenerMode ). WebServerOptions Options for WebServer creation. WebSocket Represents a wrapper around a regular WebSocketContext. WebSocketContext Represents a wrapper around a regular WebSocketContext. WebSocketReceiveResult Represents a wrapper around a regular WebSocketContext. Interfaces ICookieCollection Interface for Cookie Collection. IHttpBase Interface to create a HTTP Request/Response. IHttpContext Interface to create a HTTP Context. IHttpListener Interface to create a HTTP Listener. IHttpRequest Interface to create a HTTP Request. IHttpResponse Interface to create a HTTP Response. ISessionWebModule Interface to create session modules. IWebModule Interface to create web modules. IWebServer Interface to create a WebServer class. The basic behaviour for a WebServer is register/unregister modules and run asynchronous to receive incoming HTTP Requests. IWebSocket Interface to create a WebSocket. IWebSocketContext Interface to create a WebSocket Context. IWebSocketReceiveResult Interface for WebSocket Receive Result object. Enums HttpListenerMode Enums all the HTTP listener available. Delegates WebHandler Represents a Web Handler. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.WebSocketReceiveResult.html": {
    "href": "api/Unosquare.Labs.EmbedIO.WebSocketReceiveResult.html",
    "title": "Class WebSocketReceiveResult | Unosquare EmbedIO",
    "keywords": "Class WebSocketReceiveResult Represents a wrapper around a regular WebSocketContext. Inheritance Object WebSocketReceiveResult Implements IWebSocketReceiveResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class WebSocketReceiveResult : IWebSocketReceiveResult Constructors WebSocketReceiveResult(Net.WebSockets.WebSocketReceiveResult) Initializes a new instance of the WebSocketReceiveResult class. Declaration public WebSocketReceiveResult(Net.WebSockets.WebSocketReceiveResult results) Parameters Type Name Description Net.WebSockets.WebSocketReceiveResult results The results. Properties Count Gets the count. Declaration public int Count { get; } Property Value Type Description Int32 The count. EndOfMessage Gets a value indicating whether [end of message]. Declaration public bool EndOfMessage { get; } Property Value Type Description Boolean true if [end of message]; otherwise, false . MessageType Gets the type of the message. Declaration public int MessageType { get; } Property Value Type Description Int32 The type of the message. Implements IWebSocketReceiveResult Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.WebModuleBase.html": {
    "href": "api/Unosquare.Labs.EmbedIO.WebModuleBase.html",
    "title": "Class WebModuleBase | Unosquare EmbedIO",
    "keywords": "Class WebModuleBase Base class to define custom web modules. Inherit from this class and use the AddHandler Method to register your method calls. Inheritance Object WebModuleBase AuthModule CorsModule FallbackModule FileModuleBase LocalSessionModule WebApiModule WebSocketsModule Implements IWebModule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public abstract class WebModuleBase : IWebModule Constructors WebModuleBase() Initializes a new instance of the WebModuleBase class. Declaration protected WebModuleBase() Properties CancellationToken Gets or sets the cancellation token. Declaration public CancellationToken CancellationToken { get; protected set; } Property Value Type Description CancellationToken The cancellation token. Handlers Gets the registered handlers. Declaration public ModuleMap Handlers { get; protected set; } Property Value Type Description ModuleMap The handlers. IsWatchdogEnabled Gets or sets a value indicating whether this instance is watchdog enabled. Declaration public bool IsWatchdogEnabled { get; set; } Property Value Type Description Boolean true if this instance is watchdog enabled; otherwise, false . Name Gets the friendly name of the module. Declaration public abstract string Name { get; } Property Value Type Description String The name. Server Gets the associated Web Server object. This property is automatically set when the module is registered. Declaration public IWebServer Server { get; set; } Property Value Type Description IWebServer The server. WatchdogInterval Gets or sets the watchdog interval. Declaration public TimeSpan WatchdogInterval { get; set; } Property Value Type Description TimeSpan The watchdog interval. Methods AddHandler(String, HttpVerbs, WebHandler) Adds a handler that gets called when a path and verb are matched. Declaration public void AddHandler(string path, HttpVerbs verb, WebHandler handler) Parameters Type Name Description String path The path. HttpVerbs verb The verb. WebHandler handler The handler. Exceptions Type Condition ArgumentNullException path or handler. RunWatchdog() Runs the watchdog. Declaration public virtual void RunWatchdog() Start(CancellationToken) Starts the Web Module. Declaration public void Start(CancellationToken ct) Parameters Type Name Description CancellationToken ct The cancellation token. Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Tests.TestHttpClient.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Tests.TestHttpClient.html",
    "title": "Class TestHttpClient | Unosquare EmbedIO",
    "keywords": "Class TestHttpClient Represents a HTTP Client for unit testing. Inheritance Object TestHttpClient Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Tests Syntax public class TestHttpClient Constructors TestHttpClient(IWebServer, Encoding) Initializes a new instance of the TestHttpClient class. Declaration public TestHttpClient(IWebServer server, Encoding encoding = null) Parameters Type Name Description IWebServer server The server. Encoding encoding The encoding. Properties Encoding Gets or sets the encoding. Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding The encoding. WebServer Gets or sets the web server. Declaration public IWebServer WebServer { get; set; } Property Value Type Description IWebServer The web server. Methods GetAsync(String) Gets the asynchronous. Declaration public Task<string> GetAsync(string url = \"\") Parameters Type Name Description String url The URL. Returns Type Description Task < String > A task representing the GET call. SendAsync(TestHttpRequest) Sends the HTTP request asynchronous. Declaration public Task<TestHttpResponse> SendAsync(TestHttpRequest request) Parameters Type Name Description TestHttpRequest request The request. Returns Type Description Task < TestHttpResponse > A task representing the HTTP response. Exceptions Type Condition InvalidOperationException The IWebServer implementation should be TestWebServer. See Also IHttpContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.WebSocketsServer.html",
    "title": "Class WebSocketsServer | Unosquare EmbedIO",
    "keywords": "Class WebSocketsServer A base class that defines how to handle WebSockets connections. It keeps a list of connected WebSockets and has the basic logic to handle connections and data transmission. Inheritance Object WebSocketsServer Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public abstract class WebSocketsServer : IDisposable Constructors WebSocketsServer() Initializes a new instance of the WebSocketsServer class. With dead connection watchdog and no message size checks. Declaration protected WebSocketsServer() WebSocketsServer(Boolean, Int32) Initializes a new instance of the WebSocketsServer class. Declaration protected WebSocketsServer(bool enableConnectionWatchdog, int maxMessageSize = 0) Parameters Type Name Description Boolean enableConnectionWatchdog if set to true [enable connection watchdog]. Int32 maxMessageSize Maximum size of the message in bytes. Enter 0 or negative number to prevent checks. Properties CancellationToken Gets or sets the cancellation token. Declaration public CancellationToken CancellationToken { get; set; } Property Value Type Description CancellationToken The cancellation token. Encoding Gets the Encoding used to use the Send method to send a string. The default is UTF8 per the WebSocket specification. Declaration protected Encoding Encoding { get; set; } Property Value Type Description Encoding The Encoding to be used. ServerName Gets the name of the server. Declaration public abstract string ServerName { get; } Property Value Type Description String The name of the server. WebSockets Gets the Currently-Connected WebSockets. Declaration public ReadOnlyCollection<IWebSocketContext> WebSockets { get; } Property Value Type Description ReadOnlyCollection < IWebSocketContext > The web sockets. Methods AcceptWebSocket(IHttpContext, CancellationToken) Accepts the WebSocket connection. This is a blocking call so it must be called within an independent thread. Declaration public Task AcceptWebSocket(IHttpContext context, CancellationToken ct) Parameters Type Name Description IHttpContext context The context. CancellationToken ct The cancellation token. Returns Type Description Task A task that represents the asynchronous of websocket connection operation. Broadcast(Byte[]) Broadcasts the specified payload to all connected WebSockets clients. Declaration protected virtual void Broadcast(byte[] payload) Parameters Type Name Description Byte [] payload The payload. Broadcast(String) Broadcasts the specified payload to all connected WebSockets clients. Declaration protected virtual void Broadcast(string payload) Parameters Type Name Description String payload The payload. Close(IWebSocketContext) Closes the specified web socket, removes it and disposes it. Declaration protected virtual void Close(IWebSocketContext webSocket) Parameters Type Name Description IWebSocketContext webSocket The web socket. Dispose() Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposeAll) Parameters Type Name Description Boolean disposeAll true to release both managed and unmanaged resources; false to release only unmanaged resources. OnClientConnected(IWebSocketContext, Net.IPEndPoint, Net.IPEndPoint) Called when this WebSockets Server accepts a new WebSockets client. Declaration protected abstract void OnClientConnected(IWebSocketContext context, Net.IPEndPoint localEndPoint, Net.IPEndPoint remoteEndPoint) Parameters Type Name Description IWebSocketContext context The context. Net.IPEndPoint localEndPoint The local endpoint. Net.IPEndPoint remoteEndPoint The remote endpoint. OnClientDisconnected(IWebSocketContext) Called when the server has removed a WebSockets connected client for any reason. Declaration protected abstract void OnClientDisconnected(IWebSocketContext context) Parameters Type Name Description IWebSocketContext context The context. OnFrameReceived(IWebSocketContext, Byte[], IWebSocketReceiveResult) Called when this WebSockets Server receives a message frame regardless if the frame represents the EndOfMessage. Declaration protected abstract void OnFrameReceived(IWebSocketContext context, byte[] buffer, IWebSocketReceiveResult result) Parameters Type Name Description IWebSocketContext context The context. Byte [] buffer The buffer. IWebSocketReceiveResult result The result. OnMessageReceived(IWebSocketContext, Byte[], IWebSocketReceiveResult) Called when this WebSockets Server receives a full message (EndOfMessage) form a WebSockets client. Declaration protected abstract void OnMessageReceived(IWebSocketContext context, byte[] buffer, IWebSocketReceiveResult result) Parameters Type Name Description IWebSocketContext context The context. Byte [] buffer The buffer. IWebSocketReceiveResult result The result. Send(IWebSocketContext, Byte[]) Sends a binary payload. Declaration protected virtual void Send(IWebSocketContext webSocket, byte[] payload) Parameters Type Name Description IWebSocketContext webSocket The web socket. Byte [] payload The payload. Send(IWebSocketContext, String) Sends a UTF-8 payload. Declaration protected virtual void Send(IWebSocketContext webSocket, string payload) Parameters Type Name Description IWebSocketContext webSocket The web socket. String payload The payload. Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.WebSocketsModule.html",
    "title": "Class WebSocketsModule | Unosquare EmbedIO",
    "keywords": "Class WebSocketsModule A WebSockets module conforming to RFC 6455. Inheritance Object WebModuleBase WebSocketsModule Implements IWebModule Inherited Members WebModuleBase.Handlers WebModuleBase.Server WebModuleBase.IsWatchdogEnabled WebModuleBase.WatchdogInterval WebModuleBase.CancellationToken WebModuleBase.AddHandler(String, HttpVerbs, WebHandler) WebModuleBase.Start(CancellationToken) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public class WebSocketsModule : WebModuleBase, IWebModule Constructors WebSocketsModule() Initializes a new instance of the WebSocketsModule class. Declaration public WebSocketsModule() Properties Name Gets the friendly name of the module. Declaration public override string Name { get; } Property Value Type Description String The name. Overrides WebModuleBase.Name Methods RegisterWebSocketsServer(Type) Registers the web sockets server given a WebSocketsServer Type. Declaration public void RegisterWebSocketsServer(Type socketType) Parameters Type Name Description Type socketType Type of the socket. Exceptions Type Condition ArgumentNullException socketType. ArgumentException Argument 'socketType' needs a WebSocketHandlerAttribute - socketType. RegisterWebSocketsServer<T>() Registers the web sockets server given a WebSocketsServer Type. Declaration public void RegisterWebSocketsServer<T>() where T : WebSocketsServer, new() Type Parameters Name Description T The type of WebSocket server. Exceptions Type Condition ArgumentException Argument 'path' cannot be null;path. RegisterWebSocketsServer<T>(String) Registers the web sockets server given a WebSocketsServer Type. Declaration public void RegisterWebSocketsServer<T>(string path) where T : WebSocketsServer, new() Parameters Type Name Description String path The path. For example: '/echo'. Type Parameters Name Description T The type of WebSocket server. Exceptions Type Condition ArgumentException Argument 'path' cannot be null;path. RegisterWebSocketsServer<T>(String, T) Registers the web sockets server. Declaration public void RegisterWebSocketsServer<T>(string path, T server) where T : WebSocketsServer Parameters Type Name Description String path The path. For example: '/echo'. T server The server. Type Parameters Name Description T The type of WebSocket server. Exceptions Type Condition ArgumentNullException path or server. RunWatchdog() Runs the watchdog. Declaration public override void RunWatchdog() Overrides WebModuleBase.RunWatchdog() Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.WebApiHandlerAttribute.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.WebApiHandlerAttribute.html",
    "title": "Class WebApiHandlerAttribute | Unosquare EmbedIO",
    "keywords": "Class WebApiHandlerAttribute Decorate methods within controllers with this attribute in order to make them callable from the Web API Module Method Must match the WebServerModule. Inheritance Object Attribute WebApiHandlerAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax [AttributeUsage(AttributeTargets.Method)] public class WebApiHandlerAttribute : Attribute, _Attribute Constructors WebApiHandlerAttribute(HttpVerbs, String) Initializes a new instance of the WebApiHandlerAttribute class. Declaration public WebApiHandlerAttribute(HttpVerbs verb, string path) Parameters Type Name Description HttpVerbs verb The verb. String path The path. Exceptions Type Condition ArgumentException The argument 'path' must be specified. WebApiHandlerAttribute(HttpVerbs, String[]) Initializes a new instance of the WebApiHandlerAttribute class. Declaration public WebApiHandlerAttribute(HttpVerbs verb, string[] paths) Parameters Type Name Description HttpVerbs verb The verb. String [] paths The paths. Exceptions Type Condition ArgumentException The argument 'paths' must be specified. Properties Paths Gets or sets the paths. Declaration public string[] Paths { get; protected set; } Property Value Type Description String [] The paths. Verb Gets or sets the verb. Declaration public HttpVerbs Verb { get; protected set; } Property Value Type Description HttpVerbs The verb. Implements System.Runtime.InteropServices._Attribute Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.WebApiController.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.WebApiController.html",
    "title": "Class WebApiController | Unosquare EmbedIO",
    "keywords": "Class WebApiController Inherit from this class and define your own Web API methods You must RegisterController in the Web API Module to make it active. Inheritance Object WebApiController Implements IHttpContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public abstract class WebApiController : IHttpContext Constructors WebApiController(IHttpContext) Initializes a new instance of the WebApiController class. Declaration protected WebApiController(IHttpContext context) Parameters Type Name Description IHttpContext context The context. Properties Request Gets the HTTP Request. Declaration public IHttpRequest Request { get; } Property Value Type Description IHttpRequest The request. Response Gets the HTTP Response. Declaration public IHttpResponse Response { get; } Property Value Type Description IHttpResponse The response. User Gets the user. Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal The user. WebServer Gets or sets the web server. Declaration public IWebServer WebServer { get; set; } Property Value Type Description IWebServer The web server. Methods AcceptWebSocketAsync(Int32) Accepts the web socket asynchronous. Declaration public Task<IWebSocketContext> AcceptWebSocketAsync(int receiveBufferSize) Parameters Type Name Description Int32 receiveBufferSize Size of the receive buffer. Returns Type Description Task < IWebSocketContext > A IWebSocketContext that represents the WebSocket handshake request. SetDefaultHeaders() Sets the default headers to the Web API response. By default will set: Expires - Mon, 26 Jul 1997 05:00:00 GMT LastModified - (Current Date) CacheControl - no-store, no-cache, must-revalidate Pragma - no-cache Previous values are defined to avoid caching from client. Declaration public virtual void SetDefaultHeaders() Implements IHttpContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.LocalSessionModule.html",
    "title": "Class LocalSessionModule | Unosquare EmbedIO",
    "keywords": "Class LocalSessionModule A simple module to handle in-memory sessions. Do not use for distributed applications. Inheritance Object WebModuleBase LocalSessionModule Implements ISessionWebModule IWebModule Inherited Members WebModuleBase.Handlers WebModuleBase.Server WebModuleBase.IsWatchdogEnabled WebModuleBase.WatchdogInterval WebModuleBase.CancellationToken WebModuleBase.AddHandler(String, HttpVerbs, WebHandler) WebModuleBase.Start(CancellationToken) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public class LocalSessionModule : WebModuleBase, ISessionWebModule, IWebModule Constructors LocalSessionModule() Initializes a new instance of the LocalSessionModule class. Declaration public LocalSessionModule() Properties CookiePath Gets or sets the cookie path. If left empty, a cookie will be created for each path. The default value is \"/\" If a route is specified, then session cookies will be created only for the given path. Examples of this are: \"/\" \"/app1/\". Declaration public string CookiePath { get; set; } Property Value Type Description String The cookie path. Expiration Gets or sets the expiration. By default, expiration is 30 minutes. Declaration public TimeSpan Expiration { get; set; } Property Value Type Description TimeSpan The expiration. Item[String] Gets the SessionInfo with the specified cookie value. Returns null when the session is not found. Declaration public SessionInfo this[string cookieValue] { get; } Parameters Type Name Description String cookieValue The cookie value. Property Value Type Description SessionInfo The SessionInfo . Name Gets the friendly name of the module. Declaration public override string Name { get; } Property Value Type Description String The name. Overrides WebModuleBase.Name Sessions The dictionary holding the sessions Direct access is guaranteed to be thread-safe. Declaration public IReadOnlyDictionary<string, SessionInfo> Sessions { get; } Property Value Type Description IReadOnlyDictionary < String , SessionInfo > The sessions. Methods DeleteSession(IHttpContext) Delete the session object for the given context If no session exists for the context, then null is returned. Declaration public void DeleteSession(IHttpContext context) Parameters Type Name Description IHttpContext context The context. DeleteSession(SessionInfo) Delete a session for the given session info No exceptions are thrown if the session is not found. Declaration public void DeleteSession(SessionInfo session) Parameters Type Name Description SessionInfo session The session info. GetSession(IHttpContext) Gets a session object for the given server context. If no session exists for the context, then null is returned. Declaration public SessionInfo GetSession(IHttpContext context) Parameters Type Name Description IHttpContext context The context. Returns Type Description SessionInfo A session info for the given server context. GetSession(IWebSocketContext) Gets a session object for the given WebSocket context. If no session exists for the context, then null is returned. Declaration public SessionInfo GetSession(IWebSocketContext context) Parameters Type Name Description IWebSocketContext context The context. Returns Type Description SessionInfo A session object for the given WebSocket context. RunWatchdog() Runs the watchdog. Declaration public override void RunWatchdog() Overrides WebModuleBase.RunWatchdog() Implements ISessionWebModule IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.FileModuleBase.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.FileModuleBase.html",
    "title": "Class FileModuleBase | Unosquare EmbedIO",
    "keywords": "Class FileModuleBase Represents a files module base. Inheritance Object WebModuleBase FileModuleBase ResourceFilesModule StaticFilesModule Implements IWebModule Inherited Members WebModuleBase.Name WebModuleBase.Handlers WebModuleBase.Server WebModuleBase.IsWatchdogEnabled WebModuleBase.WatchdogInterval WebModuleBase.CancellationToken WebModuleBase.AddHandler(String, HttpVerbs, WebHandler) WebModuleBase.Start(CancellationToken) WebModuleBase.RunWatchdog() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public abstract class FileModuleBase : WebModuleBase, IWebModule Properties DefaultHeaders The default headers. Declaration public Dictionary<string, string> DefaultHeaders { get; } Property Value Type Description Dictionary < String , String > MimeTypes Gets the collection holding the MIME types. Declaration public Lazy<ReadOnlyDictionary<string, string>> MimeTypes { get; } Property Value Type Description Lazy < ReadOnlyDictionary < String , String >> The MIME types. UseGzip Gets or sets a value indicating whether [use gzip]. Declaration public bool UseGzip { get; set; } Property Value Type Description Boolean true if [use gzip]; otherwise, false . Methods SetDefaultCacheHeaders(IHttpResponse) Sets the default cache headers. Declaration protected void SetDefaultCacheHeaders(IHttpResponse response) Parameters Type Name Description IHttpResponse response The response. SetGeneralHeaders(IHttpResponse, String, String) Sets the general headers. Declaration protected void SetGeneralHeaders(IHttpResponse response, string utcFileDateString, string fileExtension) Parameters Type Name Description IHttpResponse response The response. String utcFileDateString The UTC file date string. String fileExtension The file extension. WriteFileAsync(Boolean, String, Int64, IHttpContext, Stream, CancellationToken) Writes the file asynchronous. Declaration protected Task WriteFileAsync(bool usingPartial, string partialHeader, long fileSize, IHttpContext context, Stream buffer, CancellationToken ct) Parameters Type Name Description Boolean usingPartial if set to true [using partial]. String partialHeader The partial header. Int64 fileSize Size of the file. IHttpContext context The context. Stream buffer The buffer. CancellationToken ct The cancellation token. Returns Type Description Task A task representing the write action. Implements IWebModule See Also WebModuleBase Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.AuthModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.AuthModule.html",
    "title": "Class AuthModule | Unosquare EmbedIO",
    "keywords": "Class AuthModule Simple authorization module that requests http auth from client will return 401 + WWW-Authenticate header if request isn't authorized. Inheritance Object WebModuleBase AuthModule Implements IWebModule Inherited Members WebModuleBase.Handlers WebModuleBase.Server WebModuleBase.IsWatchdogEnabled WebModuleBase.WatchdogInterval WebModuleBase.CancellationToken WebModuleBase.AddHandler(String, HttpVerbs, WebHandler) WebModuleBase.Start(CancellationToken) WebModuleBase.RunWatchdog() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public class AuthModule : WebModuleBase, IWebModule Constructors AuthModule() Initializes a new instance of the AuthModule class. Declaration public AuthModule() AuthModule(String, String) Initializes a new instance of the AuthModule class. Declaration public AuthModule(string username, string password) Parameters Type Name Description String username The username. String password The password. Properties Name Gets the friendly name of the module. Declaration public override string Name { get; } Property Value Type Description String The name. Overrides WebModuleBase.Name Methods AddAccount(String, String) Add new account. Declaration public void AddAccount(string username, string password) Parameters Type Name Description String username account username. String password account password. IsAuthorized(IHttpRequest) Validates request and returns true if that account data registered in this module and request has auth data. Declaration public bool IsAuthorized(IHttpRequest request) Parameters Type Name Description IHttpRequest request The HTTP Request. Returns Type Description Boolean true if request authorized, otherwise false . Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.HttpContext.html": {
    "href": "api/Unosquare.Labs.EmbedIO.HttpContext.html",
    "title": "Class HttpContext | Unosquare EmbedIO",
    "keywords": "Class HttpContext Represents a wrapper around a regular HttpListenerContext. Inheritance Object HttpContext Implements IHttpContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class HttpContext : IHttpContext Constructors HttpContext(HttpListenerContext) Initializes a new instance of the HttpContext class. Declaration public HttpContext(HttpListenerContext context) Parameters Type Name Description HttpListenerContext context The context. Properties Request Gets the HTTP Request. Declaration public IHttpRequest Request { get; } Property Value Type Description IHttpRequest The request. Response Gets the HTTP Response. Declaration public IHttpResponse Response { get; } Property Value Type Description IHttpResponse The response. User Gets the user. Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal The user. WebServer Gets or sets the web server. Declaration public IWebServer WebServer { get; set; } Property Value Type Description IWebServer The web server. Methods AcceptWebSocketAsync(Int32) Accepts the web socket asynchronous. Declaration public Task<IWebSocketContext> AcceptWebSocketAsync(int receiveBufferSize) Parameters Type Name Description Int32 receiveBufferSize Size of the receive buffer. Returns Type Description Task < IWebSocketContext > A IWebSocketContext that represents the WebSocket handshake request. Implements IHttpContext See Also IHttpContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.EasyRoutes.html": {
    "href": "api/Unosquare.Labs.EmbedIO.EasyRoutes.html",
    "title": "Class EasyRoutes | Unosquare EmbedIO",
    "keywords": "Class EasyRoutes Extension methods to add easily routes to a IWebServer . Inheritance Object EasyRoutes Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public static class EasyRoutes Methods OnAny(IWebServer, WebHandler) Called when any unhandled request. Any verb and any path. Declaration public static IWebServer OnAny(this IWebServer webserver, WebHandler action) Parameters Type Name Description IWebServer webserver The webserver. WebHandler action The action. Returns Type Description IWebServer The webserver instance. Exceptions Type Condition ArgumentNullException webserver. OnDelete(IWebServer, WebHandler) Called when any DELETE unhandled request (any path). Declaration public static IWebServer OnDelete(this IWebServer webserver, WebHandler action) Parameters Type Name Description IWebServer webserver The webserver. WebHandler action The action. Returns Type Description IWebServer The webserver instance. Exceptions Type Condition ArgumentNullException webserver. OnGet(IWebServer, WebHandler) Called when any GET unhandled request (any path). Declaration public static IWebServer OnGet(this IWebServer webserver, WebHandler action) Parameters Type Name Description IWebServer webserver The webserver. WebHandler action The action. Returns Type Description IWebServer The webserver instance. Exceptions Type Condition ArgumentNullException webserver. OnHead(IWebServer, WebHandler) Called when any HEAD unhandled request (any path). Declaration public static IWebServer OnHead(this IWebServer webserver, WebHandler action) Parameters Type Name Description IWebServer webserver The webserver. WebHandler action The action. Returns Type Description IWebServer The webserver instance. Exceptions Type Condition ArgumentNullException webserver. OnOptions(IWebServer, WebHandler) Called when any OPTIONS unhandled request (any path). Declaration public static IWebServer OnOptions(this IWebServer webserver, WebHandler action) Parameters Type Name Description IWebServer webserver The webserver. WebHandler action The action. Returns Type Description IWebServer The webserver instance. Exceptions Type Condition ArgumentNullException webserver. OnPatch(IWebServer, WebHandler) Called when any PATCH unhandled request (any path). Declaration public static IWebServer OnPatch(this IWebServer webserver, WebHandler action) Parameters Type Name Description IWebServer webserver The webserver. WebHandler action The action. Returns Type Description IWebServer The webserver instance. Exceptions Type Condition ArgumentNullException webserver. OnPost(IWebServer, WebHandler) Called when any POST unhandled request (any path). Declaration public static IWebServer OnPost(this IWebServer webserver, WebHandler action) Parameters Type Name Description IWebServer webserver The webserver. WebHandler action The action. Returns Type Description IWebServer The webserver instance. Exceptions Type Condition ArgumentNullException webserver. OnPut(IWebServer, WebHandler) Called when any PUT unhandled request (any path). Declaration public static IWebServer OnPut(this IWebServer webserver, WebHandler action) Parameters Type Name Description IWebServer webserver The webserver. WebHandler action The action. Returns Type Description IWebServer The webserver instance. Exceptions Type Condition ArgumentNullException webserver. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Constants.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Constants.html",
    "title": "Namespace Unosquare.Labs.EmbedIO.Constants | Unosquare EmbedIO",
    "keywords": "Namespace Unosquare.Labs.EmbedIO.Constants Classes Headers HTTP Header Constants. MimeTypes Represents a MimeType collection. Enums CompressionMethod Specifies the compression method used to compress a message on the WebSocket connection. HttpVerbs Enumerates the different HTTP Verbs. RoutingStrategy Defines the routing strategy for URL matching This is especially useful for REST service implementations in the WebApi module. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Constants.RoutingStrategy.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Constants.RoutingStrategy.html",
    "title": "Enum RoutingStrategy | Unosquare EmbedIO",
    "keywords": "Enum RoutingStrategy Defines the routing strategy for URL matching This is especially useful for REST service implementations in the WebApi module. Namespace : Unosquare.Labs.EmbedIO.Constants Syntax public enum RoutingStrategy Fields Name Description Regex The Regex strategy, default one Wildcard The wildcard strategy Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Constants.Headers.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Constants.Headers.html",
    "title": "Class Headers | Unosquare EmbedIO",
    "keywords": "Class Headers HTTP Header Constants. Inheritance Object Headers Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Constants Syntax public static class Headers Fields AcceptEncoding Accept-Encoding HTTP Header. Declaration public const string AcceptEncoding = \"Accept-Encoding\" Field Value Type Description String AcceptRanges Accept-Ranges HTTP Header. Declaration public const string AcceptRanges = \"Accept-Ranges\" Field Value Type Description String AccessControlAllowHeaders Access-Control-Allow-Headers HTTP Header. Declaration public const string AccessControlAllowHeaders = \"Access-Control-Allow-Headers\" Field Value Type Description String AccessControlAllowMethods Access-Control-Allow-Methods HTTP Header. Declaration public const string AccessControlAllowMethods = \"Access-Control-Allow-Methods\" Field Value Type Description String AccessControlAllowOrigin Access-Control-Allow-Origin HTTP Header. Declaration public const string AccessControlAllowOrigin = \"Access-Control-Allow-Origin\" Field Value Type Description String AccessControlRequestHeaders Access-Control-Request-Headers HTTP Header. Declaration public const string AccessControlRequestHeaders = \"Access-Control-Request-Headers\" Field Value Type Description String AccessControlRequestMethod Access-Control-Request-Headers HTTP Method. Declaration public const string AccessControlRequestMethod = \"Access-Control-Request-Method\" Field Value Type Description String CacheControl Cache-Control HTTP Header. Declaration public const string CacheControl = \"Cache-Control\" Field Value Type Description String CompressionGzip The header compression gzip. Declaration public const string CompressionGzip = \"gzip\" Field Value Type Description String ContentEncoding Content-Encoding HTTP Header. Declaration public const string ContentEncoding = \"Content-Encoding\" Field Value Type Description String ContentRanges Content-Range HTTP Header. Declaration public const string ContentRanges = \"Content-Range\" Field Value Type Description String Cookie The cookie header. Declaration public const string Cookie = \"Cookie\" Field Value Type Description String ETag ETag HTTP Header. Declaration public const string ETag = \"ETag\" Field Value Type Description String Expires Expires HTTP Header. Declaration public const string Expires = \"Expires\" Field Value Type Description String IfModifiedSince If-Modified-Since HTTP Header. Declaration public const string IfModifiedSince = \"If-Modified-Since\" Field Value Type Description String IfNotMatch If-None-Match HTTP Header. Declaration public const string IfNotMatch = \"If-None-Match\" Field Value Type Description String LastModified Last-Modified HTTP Header. Declaration public const string LastModified = \"Last-Modified\" Field Value Type Description String Origin Origin HTTP Header. Declaration public const string Origin = \"Origin\" Field Value Type Description String Pragma Pragma HTTP Header. Declaration public const string Pragma = \"Pragma\" Field Value Type Description String Range Range HTTP Header. Declaration public const string Range = \"Range\" Field Value Type Description String WebSocketAccept The web socket accept. Declaration public const string WebSocketAccept = \"Sec-WebSocket-Accept\" Field Value Type Description String WebSocketExtensions The web socket extensions. Declaration public const string WebSocketExtensions = \"Sec-WebSocket-Extensions\" Field Value Type Description String WebSocketKey The web socket key. Declaration public const string WebSocketKey = \"Sec-WebSocket-Key\" Field Value Type Description String WebSocketProtocol The web socket protocol. Declaration public const string WebSocketProtocol = \"Sec-WebSocket-Protocol\" Field Value Type Description String WebSocketVersion The web socket version. Declaration public const string WebSocketVersion = \"Sec-WebSocket-Version\" Field Value Type Description String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.WebSocketContext.html": {
    "href": "api/Unosquare.Net.WebSocketContext.html",
    "title": "Class WebSocketContext | Unosquare EmbedIO",
    "keywords": "Class WebSocketContext Provides the properties used to access the information in a WebSocket handshake request received by the HttpListener . Inheritance Object WebSocketContext Implements IWebSocketContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public class WebSocketContext : IWebSocketContext Properties CookieCollection Gets the cookie collection. Declaration public ICookieCollection CookieCollection { get; } Property Value Type Description ICookieCollection The cookie collection. Headers Gets the HTTP headers included in the request. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. IsLocal Gets a value indicating whether the client connected from the local computer. Declaration public bool IsLocal { get; } Property Value Type Description Boolean true if the client connected from the local computer; otherwise, false . IsSecureConnection Gets a value indicating whether the WebSocket connection is secured. Declaration public bool IsSecureConnection { get; } Property Value Type Description Boolean true if the connection is secured; otherwise, false . IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public bool IsWebSocketRequest { get; } Property Value Type Description Boolean true if the request is a WebSocket handshake request; otherwise, false . Origin Gets the value of the Origin header included in the request. Declaration public string Origin { get; } Property Value Type Description String A String that represents the value of the Origin header. RequestUri Gets the URI requested by the client. Declaration public Uri RequestUri { get; } Property Value Type Description Uri A that represents the requested URI. SecWebSocketKey Gets the value of the Sec-WebSocket-Key header included in the request. Declaration public string SecWebSocketKey { get; } Property Value Type Description String A String that represents the value of the Sec-WebSocket-Key header. Remarks This property provides a part of the information used by the server to prove that it received a valid WebSocket handshake request. SecWebSocketVersion Gets the value of the Sec-WebSocket-Version header included in the request. Declaration public string SecWebSocketVersion { get; } Property Value Type Description String A String that represents the value of the Sec-WebSocket-Version header. Remarks This property represents the WebSocket protocol version. WebSocket Gets or sets the web socket. Declaration public IWebSocket WebSocket { get; } Property Value Type Description IWebSocket The web socket. Methods ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Implements IWebSocketContext See Also IWebSocketContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.WebSocket.html": {
    "href": "api/Unosquare.Net.WebSocket.html",
    "title": "Class WebSocket | Unosquare EmbedIO",
    "keywords": "Class WebSocket Implements the WebSocket interface. Inheritance Object WebSocket Implements IWebSocket IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public class WebSocket : IWebSocket, IDisposable Remarks The WebSocket class provides a set of methods and properties for two-way communication using the WebSocket protocol ( RFC 6455 ). Constructors WebSocket(String) Initializes a new instance of the WebSocket class with the specified WebSocket URL. Declaration public WebSocket(string url) Parameters Type Name Description String url A String that represents the WebSocket URL to connect. Exceptions Type Condition ArgumentNullException url. ArgumentException An empty string. - url or url or protocols. ArgumentNullException url is null . ArgumentException url is invalid. -or- Properties Compression Gets or sets the compression method used to compress a message on the WebSocket connection. Declaration public CompressionMethod Compression { get; set; } Property Value Type Description CompressionMethod One of the CompressionMethod enum values, specifies the compression method used to compress a message. The default value is None . Cookies Gets the HTTP cookies included in the WebSocket handshake request and response. Declaration public IEnumerable<Cookie> Cookies { get; } Property Value Type Description IEnumerable < Cookie > An System.Collections.Generic.IEnumerable{WebSocketSharp.Net.Cookie} instance that provides an enumerator which supports the iteration over the collection of the cookies. EmitOnPing Gets or sets a value indicating whether the WebSocket emits a OnMessage event when receives a ping. Declaration public bool EmitOnPing { get; set; } Property Value Type Description Boolean true if the WebSocket emits a OnMessage event when receives a ping; otherwise, false . The default value is false . EnableRedirection Gets or sets a value indicating whether the WebSocket redirects the handshake request to the new URL located in the handshake response. Declaration public bool EnableRedirection { get; set; } Property Value Type Description Boolean true if the WebSocket redirects the handshake request to the new URL; otherwise, false . The default value is false . Extensions Gets the WebSocket extensions selected by the server. Declaration public string Extensions { get; } Property Value Type Description String A String that represents the extensions if any. The default value is Empty . IsAlive Gets a value indicating whether the WebSocket connection is alive. Declaration public bool IsAlive { get; } Property Value Type Description Boolean true if the connection is alive; otherwise, false . IsSecure Gets a value indicating whether the WebSocket connection is secure. Declaration public bool IsSecure { get; } Property Value Type Description Boolean true if the connection is secure; otherwise, false . Origin Gets or sets the value of the HTTP Origin header to send with the WebSocket handshake request to the server. Declaration public string Origin { get; set; } Property Value Type Description String A String that represents the value of the Origin header to send. The default value is null . The Origin header has the following syntax: <scheme>://<host>[:<port>] . Remarks The WebSocket sends the Origin header if this property has any. State Gets the state. Declaration public WebSocketState State { get; } Property Value Type Description WebSocketState The state. Url Gets the WebSocket URL used to connect, or accepted. Declaration public Uri Url { get; } Property Value Type Description Uri A that represents the URL used to connect, or accepted. WaitTime Gets or sets the wait time for the response to the Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description TimeSpan A TimeSpan that represents the wait time. The default value is the same as 5 seconds, or 1 second if the WebSocket is used in a server. Methods CloseAsync(CancellationToken) Closes the asynchronous. Declaration public Task CloseAsync(CancellationToken ct) Parameters Type Name Description CancellationToken ct The cancellation token. Returns Type Description Task The task object representing the asynchronous operation. CloseAsync(CloseStatusCode, String, CancellationToken) Closes the WebSocket connection asynchronously, and releases all associated resources. Declaration public Task CloseAsync(CloseStatusCode code = CloseStatusCode.Undefined, string reason = null, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description CloseStatusCode code The code. String reason The reason. CancellationToken ct The cancellation token. Returns Type Description Task A task that represents the asynchronous closes websocket connection. ConnectAsync(CancellationToken) Establishes a WebSocket connection asynchronously. Declaration public Task ConnectAsync(CancellationToken ct = default(CancellationToken)) Parameters Type Name Description CancellationToken ct The cancellation token. Returns Type Description Task If CheckIfAvailable statement terminates execution of the method; otherwise, establishes a WebSocket connection. Remarks This method doesn't wait for the connect to be complete. This method isn't available in a server. PingAsync() Sends a ping using the WebSocket connection. Declaration public Task<bool> PingAsync() Returns Type Description Task < Boolean > true if the WebSocket receives a pong to this ping in a time; otherwise, false . PingAsync(String) Sends a ping with the specified message using the WebSocket connection. Declaration public Task<bool> PingAsync(string message) Parameters Type Name Description String message A String that represents the message to send. Returns Type Description Task < Boolean > true if the WebSocket receives a pong to this ping in a time; otherwise, false . SendAsync(Byte[], Boolean, CancellationToken) Sends the asynchronous. Declaration public Task SendAsync(byte[] buffer, bool isText, CancellationToken ct) Parameters Type Name Description Byte [] buffer The buffer. Boolean isText if set to true [is text]. CancellationToken ct The cancellation token. Returns Type Description Task A task that represents the asynchronous of send data using websocket. SendAsync(Byte[], Opcode, CancellationToken) Sends binary data using the WebSocket connection. Declaration public Task SendAsync(byte[] data, Opcode opcode, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. Opcode opcode The opcode. CancellationToken ct The cancellation token. Returns Type Description Task A task that represents the asynchronous of send binary data using websocket. SetCookie(Cookie) Sets an HTTP cookie to send with the WebSocket handshake request to the server. Declaration public void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A that represents a cookie to send. Events OnMessage Occurs when the WebSocket receives a message. Declaration public event EventHandler<MessageEventArgs> OnMessage Event Type Type Description EventHandler < MessageEventArgs > Explicit Interface Implementations IDisposable.Dispose() Declaration void IDisposable.Dispose() Implements IWebSocket System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.Opcode.html": {
    "href": "api/Unosquare.Net.Opcode.html",
    "title": "Enum Opcode | Unosquare EmbedIO",
    "keywords": "Enum Opcode Indicates the WebSocket frame type. Namespace : Unosquare.Net Syntax public enum Opcode : byte Remarks The values of this enumeration are defined in Section 5.2 of RFC 6455. Fields Name Description Binary Equivalent to numeric value 2. Indicates binary frame. Close Equivalent to numeric value 8. Indicates connection close frame. Cont Equivalent to numeric value 0. Indicates continuation frame. Ping Equivalent to numeric value 9. Indicates ping frame. Pong Equivalent to numeric value 10. Indicates pong frame. Text Equivalent to numeric value 1. Indicates text frame. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Net.MessageEventArgs.html": {
    "href": "api/Unosquare.Net.MessageEventArgs.html",
    "title": "Class MessageEventArgs | Unosquare EmbedIO",
    "keywords": "Class MessageEventArgs Represents the event data for the OnMessage event. Inheritance Object EventArgs MessageEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Net Syntax public class MessageEventArgs : EventArgs Remarks That event occurs when the WebSocket receives a message or a ping if the EmitOnPing property is set to true . If you would like to get the message data, you should access the Data or RawData property. Properties Data Gets the message data as a String . Declaration public string Data { get; } Property Value Type Description String A String that represents the message data if its type is text or ping and if decoding it to a string has successfully done; otherwise, null . IsBinary Gets a value indicating whether the message type is binary. Declaration public bool IsBinary { get; } Property Value Type Description Boolean true if the message type is binary; otherwise, false . IsPing Gets a value indicating whether the message type is ping. Declaration public bool IsPing { get; } Property Value Type Description Boolean true if the message type is ping; otherwise, false . IsText Gets a value indicating whether the message type is text. Declaration public bool IsText { get; } Property Value Type Description Boolean true if the message type is text; otherwise, false . RawData Gets the message data as an array of Byte . Declaration public byte[] RawData { get; } Property Value Type Description Byte [] An array of Byte that represents the message data. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.WebSocketContext.html": {
    "href": "api/Unosquare.Labs.EmbedIO.WebSocketContext.html",
    "title": "Class WebSocketContext | Unosquare EmbedIO",
    "keywords": "Class WebSocketContext Represents a wrapper around a regular WebSocketContext. Inheritance Object WebSocketContext Implements IWebSocketContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class WebSocketContext : IWebSocketContext Constructors WebSocketContext(Net.WebSockets.HttpListenerWebSocketContext) Initializes a new instance of the WebSocketContext class. Declaration public WebSocketContext(Net.WebSockets.HttpListenerWebSocketContext webSocketContext) Parameters Type Name Description Net.WebSockets.HttpListenerWebSocketContext webSocketContext The web socket context. Properties CookieCollection Gets the cookie collection. Declaration public ICookieCollection CookieCollection { get; } Property Value Type Description ICookieCollection The cookie collection. RequestUri Gets the request URI. Declaration public Uri RequestUri { get; } Property Value Type Description Uri The request URI. WebSocket Gets or sets the web socket. Declaration public IWebSocket WebSocket { get; } Property Value Type Description IWebSocket The web socket. Implements IWebSocketContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.WebSocket.html": {
    "href": "api/Unosquare.Labs.EmbedIO.WebSocket.html",
    "title": "Class WebSocket | Unosquare EmbedIO",
    "keywords": "Class WebSocket Represents a wrapper around a regular WebSocketContext. Inheritance Object WebSocket Implements IWebSocket IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class WebSocket : IWebSocket, IDisposable Constructors WebSocket(Net.WebSockets.WebSocket) Initializes a new instance of the WebSocket class. Declaration public WebSocket(Net.WebSockets.WebSocket webSocket) Parameters Type Name Description Net.WebSockets.WebSocket webSocket The web socket. Properties State Gets the state. Declaration public WebSocketState State { get; } Property Value Type Description WebSocketState The state. SystemWebSocket Gets the real WebSocket object from System.Net. Declaration public Net.WebSockets.WebSocket SystemWebSocket { get; } Property Value Type Description Net.WebSockets.WebSocket The system web socket. Methods CloseAsync(CancellationToken) Closes the asynchronous. Declaration public Task CloseAsync(CancellationToken ct) Parameters Type Name Description CancellationToken ct The cancellation token. Returns Type Description Task The task object representing the asynchronous operation. SendAsync(Byte[], Boolean, CancellationToken) Sends the asynchronous. Declaration public Task SendAsync(byte[] buffer, bool isText, CancellationToken ct) Parameters Type Name Description Byte [] buffer The buffer. Boolean isText if set to true [is text]. CancellationToken ct The cancellation token. Returns Type Description Task A task that represents the asynchronous of send data using websocket. Explicit Interface Implementations IDisposable.Dispose() Declaration void IDisposable.Dispose() Implements IWebSocket System.IDisposable See Also IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.WebServerOptions.html": {
    "href": "api/Unosquare.Labs.EmbedIO.WebServerOptions.html",
    "title": "Class WebServerOptions | Unosquare EmbedIO",
    "keywords": "Class WebServerOptions Options for WebServer creation. Inheritance Object WebServerOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public sealed class WebServerOptions Constructors WebServerOptions(String) Initializes a new instance of the WebServerOptions class. Declaration public WebServerOptions(string urlPrefix) Parameters Type Name Description String urlPrefix The URL prefix. WebServerOptions(String[]) Initializes a new instance of the WebServerOptions class. Declaration public WebServerOptions(string[] urlPrefixes) Parameters Type Name Description String [] urlPrefixes The urls. Properties AutoLoadCertificate Gets or sets a value indicating whether [automatic load certificate]. Declaration public bool AutoLoadCertificate { get; set; } Property Value Type Description Boolean true if [automatic load certificate]; otherwise, false . AutoRegisterCertificate Gets or sets a value indicating whether [automatic register certificate]. Declaration public bool AutoRegisterCertificate { get; set; } Property Value Type Description Boolean true if [automatic register certificate]; otherwise, false . Certificate Gets or sets the certificate. Declaration public X509Certificate2 Certificate { get; set; } Property Value Type Description X509Certificate2 The certificate. CertificateThumb Gets or sets the certificate thumb. Declaration public string CertificateThumb { get; set; } Property Value Type Description String The certificate thumb. Mode Gets or sets the mode. Declaration public HttpListenerMode Mode { get; set; } Property Value Type Description HttpListenerMode The mode. RoutingStrategy Gets or sets the routing strategy. Declaration public RoutingStrategy RoutingStrategy { get; set; } Property Value Type Description RoutingStrategy The routing strategy. StoreLocation Gets or sets the store location. Declaration public StoreLocation StoreLocation { get; set; } Property Value Type Description StoreLocation The store location. StoreName Gets or sets the name of the store. Declaration public StoreName StoreName { get; set; } Property Value Type Description StoreName The name of the store. UrlPrefixes Gets the URL prefixes. Declaration public string[] UrlPrefixes { get; } Property Value Type Description String [] The URL prefixes. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.WebServer.html": {
    "href": "api/Unosquare.Labs.EmbedIO.WebServer.html",
    "title": "Class WebServer | Unosquare EmbedIO",
    "keywords": "Class WebServer Represents our tiny web server used to handle requests. This is the default implementation of IWebServer and it's ready to select the IHttpListener implementation via the proper constructor. By default, the WebServer will use the Regex RoutingStrategy for all registered modules ( IWebModule ) and EmbedIO Listener ( HttpListenerMode ). Inheritance Object WebServer Implements IWebServer IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class WebServer : IWebServer, IDisposable Constructors WebServer() Initializes a new instance of the WebServer class. Default settings are Regex RoutingStrategy, EmbedIO HttpListenerMode, and binding all network interfaces with HTTP protocol and default port (http://*:80/). Declaration public WebServer() WebServer(Int32, RoutingStrategy) Initializes a new instance of the WebServer class. Default settings are Regex RoutingStrategy, EmbedIO HttpListenerMode, and binding all network interfaces with HTTP protocol with the selected port (http://*:{port}/). Declaration public WebServer(int port, RoutingStrategy strategy = RoutingStrategy.Regex) Parameters Type Name Description Int32 port The port. RoutingStrategy strategy The strategy. WebServer(String, RoutingStrategy) Initializes a new instance of the WebServer class. Default settings are Regex RoutingStrategy and EmbedIO HttpListenerMode. Declaration public WebServer(string urlPrefix, RoutingStrategy strategy = RoutingStrategy.Regex) Parameters Type Name Description String urlPrefix The URL prefix. RoutingStrategy strategy The strategy. Remarks urlPrefix must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. WebServer(String[], RoutingStrategy) Initializes a new instance of the WebServer class. Default settings are Regex RoutingStrategy and EmbedIO HttpListenerMode. Declaration public WebServer(string[] urlPrefixes, RoutingStrategy routingStrategy = RoutingStrategy.Regex) Parameters Type Name Description String [] urlPrefixes The URL prefix. RoutingStrategy routingStrategy The routing strategy. Remarks urlPrefixes must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. Exceptions Type Condition ArgumentException Argument urlPrefix must be specified. WebServer(String[], RoutingStrategy, HttpListenerMode) Initializes a new instance of the WebServer class. Declaration public WebServer(string[] urlPrefixes, RoutingStrategy routingStrategy, HttpListenerMode mode) Parameters Type Name Description String [] urlPrefixes The URL prefix. RoutingStrategy routingStrategy The routing strategy. HttpListenerMode mode The mode. Remarks urlPrefixes must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. Exceptions Type Condition ArgumentException Argument urlPrefix must be specified. WebServer(String[], RoutingStrategy, HttpListenerMode, X509Certificate) Initializes a new instance of the WebServer class. Declaration public WebServer(string[] urlPrefixes, RoutingStrategy routingStrategy, HttpListenerMode mode, X509Certificate certificate) Parameters Type Name Description String [] urlPrefixes The URL prefix. RoutingStrategy routingStrategy The routing strategy. HttpListenerMode mode The mode. X509Certificate certificate The certificate. Remarks urlPrefixes must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. Exceptions Type Condition ArgumentException Argument urlPrefix must be specified. WebServer(String[], RoutingStrategy, IHttpListener) Initializes a new instance of the WebServer class. Declaration public WebServer(string[] urlPrefixes, RoutingStrategy routingStrategy, IHttpListener httpListener) Parameters Type Name Description String [] urlPrefixes The URL prefix. RoutingStrategy routingStrategy The routing strategy. IHttpListener httpListener The HTTP listener. Remarks urlPrefixes must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. Exceptions Type Condition ArgumentException Argument urlPrefix must be specified. WebServer(WebServerOptions) Initializes a new instance of the WebServer class. Declaration public WebServer(WebServerOptions options) Parameters Type Name Description WebServerOptions options The WebServer options. Properties Listener Gets the underlying HTTP listener. Declaration public IHttpListener Listener { get; protected set; } Property Value Type Description IHttpListener The listener. Modules Gets a list of registered modules. Declaration public ReadOnlyCollection<IWebModule> Modules { get; } Property Value Type Description ReadOnlyCollection < IWebModule > The modules. OnMethodNotAllowed Gets or sets the on method not allowed. Declaration public Func<IHttpContext, Task<bool>> OnMethodNotAllowed { get; set; } Property Value Type Description Func < IHttpContext , Task < Boolean >> The on method not allowed. OnNotFound Gets or sets the on not found. Declaration public Func<IHttpContext, Task<bool>> OnNotFound { get; set; } Property Value Type Description Func < IHttpContext , Task < Boolean >> The on not found. RoutingStrategy Gets the URL RoutingStrategy used in this instance. By default it is set to Wildcard, but Regex is the recommended value. Declaration public RoutingStrategy RoutingStrategy { get; protected set; } Property Value Type Description RoutingStrategy The routing strategy. SessionModule Gets registered SessionModule (if any). SessionModule is an implementation of ISessionModule to handle session data. Declaration public ISessionWebModule SessionModule { get; } Property Value Type Description ISessionWebModule The session module. UrlPrefixes Gets the URL Prefix for which the server is serving requests. Declaration public List<string> UrlPrefixes { get; } Property Value Type Description List < String > The URL prefix. Methods Create(String) Static method to create webserver instance using a single URL prefix. Declaration public static WebServer Create(string urlPrefix) Parameters Type Name Description String urlPrefix The URL prefix. Returns Type Description WebServer The webserver instance. Dispose() Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Module<T>() Gets the module registered for the given type. Returns null if no module matches the given type. Declaration public T Module<T>() where T : class, IWebModule Returns Type Description T Module registered for the given type. Type Parameters Name Description T The type of module. RegisterModule(IWebModule) Registers an instance of a web module. Only 1 instance per type is allowed. Declaration public void RegisterModule(IWebModule module) Parameters Type Name Description IWebModule module The module. RunAsync(CancellationToken) Starts the listener and the registered modules. Declaration public Task RunAsync(CancellationToken ct = default(CancellationToken)) Parameters Type Name Description CancellationToken ct The cancellation token; when cancelled, the server cancels all pending requests and stops. Returns Type Description Task Returns the task that the HTTP listener is running inside of, so that it can be waited upon after it's been canceled. Remarks Both the server and client requests are queued separately on the thread pool, so it is safe to call Wait() in a synchronous method. Exceptions Type Condition InvalidOperationException The method was already called. OperationCanceledException Cancellation was requested. UnregisterModule(Type) Unregisters the module identified by its type. Declaration public void UnregisterModule(Type moduleType) Parameters Type Name Description Type moduleType Type of the module. Implements IWebServer System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Tests.TestHttpResponse.html",
    "title": "Class TestHttpResponse | Unosquare EmbedIO",
    "keywords": "Class TestHttpResponse Represents an IHttpResponse implementation for unit testing. Inheritance Object TestHttpResponse Implements IHttpResponse IHttpBase IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Tests Syntax public class TestHttpResponse : IHttpResponse, IHttpBase, IDisposable Properties Body Gets the body. Declaration public byte[] Body { get; } Property Value Type Description Byte [] The body. ContentEncoding Gets or sets the content encoding. Declaration public Encoding ContentEncoding { get; } Property Value Type Description Encoding The content encoding. ContentLength64 Gets or sets the content length64. Declaration public long ContentLength64 { get; set; } Property Value Type Description Int64 The content length64. ContentType Gets or sets the type of the content. Declaration public string ContentType { get; set; } Property Value Type Description String The type of the content. Cookies Gets the cookies. Declaration public ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. Headers Gets the headers. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection The headers. KeepAlive Gets or sets a value indicating whether [keep alive]. Declaration public bool KeepAlive { get; set; } Property Value Type Description Boolean true if [keep alive]; otherwise, false . OutputStream Gets the output stream. Declaration public Stream OutputStream { get; } Property Value Type Description Stream The output stream. ProtocolVersion Gets or sets the protocol version. Declaration public Version ProtocolVersion { get; } Property Value Type Description Version The protocol version. StatusCode Gets or sets the status code. Declaration public int StatusCode { get; set; } Property Value Type Description Int32 The status code. StatusDescription Gets or sets a text description of the HTTP status code. Declaration public string StatusDescription { get; set; } Property Value Type Description String The status description. Methods AddHeader(String, String) Adds the header. Declaration public void AddHeader(string headerName, string value) Parameters Type Name Description String headerName Name of the header. String value The value. Close() Closes this instance and dispose the resources. Declaration public void Close() Dispose() Declaration public void Dispose() GetBodyAsString(Encoding) Gets the body as string. Declaration public string GetBodyAsString(Encoding encoding = null) Parameters Type Name Description Encoding encoding The encoding. Returns Type Description String A string from the body. SetCookie(Cookie) Declaration public void SetCookie(Cookie sessionCookie) Parameters Type Name Description Cookie sessionCookie Implements IHttpResponse IHttpBase System.IDisposable See Also IHttpResponse Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Tests.TestHttpRequest.html",
    "title": "Class TestHttpRequest | Unosquare EmbedIO",
    "keywords": "Class TestHttpRequest Represents an IHttpRequest implementation for unit testing. Inheritance Object TestHttpRequest Implements IHttpRequest IHttpBase Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Tests Syntax public class TestHttpRequest : IHttpRequest, IHttpBase Constructors TestHttpRequest(String, HttpVerbs) Initializes a new instance of the TestHttpRequest class. Declaration public TestHttpRequest(string url, HttpVerbs httpMethod = HttpVerbs.Get) Parameters Type Name Description String url The URL. HttpVerbs httpMethod The HTTP method. TestHttpRequest(HttpVerbs) Initializes a new instance of the TestHttpRequest class. Declaration public TestHttpRequest(HttpVerbs httpMethod = HttpVerbs.Get) Parameters Type Name Description HttpVerbs httpMethod The HTTP method. Properties ContentEncoding Gets the content encoding. Declaration public Encoding ContentEncoding { get; } Property Value Type Description Encoding The content encoding. ContentLength64 Gets the content length64. Declaration public long ContentLength64 { get; } Property Value Type Description Int64 The content length64. ContentType Gets the type of the content. Declaration public string ContentType { get; } Property Value Type Description String The type of the content. Cookies Gets the cookies. Declaration public ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. HasEntityBody Gets a value indicating whether this instance has entity body. Declaration public bool HasEntityBody { get; } Property Value Type Description Boolean true if this instance has entity body; otherwise, false . Headers Gets the headers. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection The headers. HttpMethod Gets the HTTP method. Declaration public string HttpMethod { get; } Property Value Type Description String The HTTP method. InputStream Gets the input stream. Declaration public Stream InputStream { get; } Property Value Type Description Stream The input stream. IsAuthenticated Gets a value indicating whether this instance is authenticated. Declaration public bool IsAuthenticated { get; } Property Value Type Description Boolean true if this instance is authenticated; otherwise, false . IsLocal Gets a value indicating whether this instance is local. Declaration public bool IsLocal { get; } Property Value Type Description Boolean true if this instance is local; otherwise, false . IsWebSocketRequest Gets a value indicating whether this instance is web socket request. Declaration public bool IsWebSocketRequest { get; } Property Value Type Description Boolean true if this instance is web socket request; otherwise, false . KeepAlive Gets a value indicating whether [keep alive]. Declaration public bool KeepAlive { get; } Property Value Type Description Boolean true if [keep alive]; otherwise, false . LocalEndPoint Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint ProtocolVersion Gets or sets the protocol version. Declaration public Version ProtocolVersion { get; } Property Value Type Description Version The protocol version. QueryString Gets the query string. Declaration public NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection The query string. RawUrl Gets the raw URL. Declaration public string RawUrl { get; } Property Value Type Description String The raw URL. RemoteEndPoint Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint RequestTraceIdentifier Gets the request identifier of the incoming HTTP request. Declaration public Guid RequestTraceIdentifier { get; } Property Value Type Description Guid The request trace identifier. Url Gets the URL. Declaration public Uri Url { get; } Property Value Type Description Uri The URL. UrlReferrer Gets the URL referrer. Declaration public Uri UrlReferrer { get; } Property Value Type Description Uri The URL referrer. UserAgent Gets the user agent. Declaration public string UserAgent { get; } Property Value Type Description String The user agent. Implements IHttpRequest IHttpBase See Also IHttpRequest Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.SessionInfo.html": {
    "href": "api/Unosquare.Labs.EmbedIO.SessionInfo.html",
    "title": "Class SessionInfo | Unosquare EmbedIO",
    "keywords": "Class SessionInfo Represents the contents of an HTTP Session. Inheritance Object SessionInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class SessionInfo Constructors SessionInfo(String) Initializes a new instance of the SessionInfo class. Declaration public SessionInfo(string sessionId) Parameters Type Name Description String sessionId The session identifier. Properties Data Current Session Data Repository. Declaration public ConcurrentDictionary<string, object> Data { get; } Property Value Type Description ConcurrentDictionary < String , Object > DateCreated Gets or sets the date created. Declaration public DateTime DateCreated { get; } Property Value Type Description DateTime The date created. Item[String] Retrieve an item or set an item. If the key does not exist, it returns null. This is an indexer providing a shortcut to the underlying Data dictionary. Declaration public object this[string key] { get; set; } Parameters Type Name Description String key The key as an indexer. Property Value Type Description Object An object that represents current session data repository. LastActivity Gets or sets the last activity. Declaration public DateTime LastActivity { get; set; } Property Value Type Description DateTime The last activity. SessionId Current Session Identifier. Declaration public string SessionId { get; } Property Value Type Description String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.html",
    "title": "Namespace Unosquare.Labs.EmbedIO.Modules | Unosquare EmbedIO",
    "keywords": "Namespace Unosquare.Labs.EmbedIO.Modules Classes AuthModule Simple authorization module that requests http auth from client will return 401 + WWW-Authenticate header if request isn't authorized. CorsModule CORS control Module. Cross-origin resource sharing (CORS) is a mechanism that allows restricted resources (e.g. fonts) on a web page to be requested from another domain outside the domain from which the resource originated. FallbackModule Represents a module to fallback any request. FileModuleBase Represents a files module base. LocalSessionModule A simple module to handle in-memory sessions. Do not use for distributed applications. ResourceFilesModule Represents a simple module to server resource files from the .NET assembly. StaticFilesModule Represents a simple module to server static files from the file system. WebApiController Inherit from this class and define your own Web API methods You must RegisterController in the Web API Module to make it active. WebApiHandlerAttribute Decorate methods within controllers with this attribute in order to make them callable from the Web API Module Method Must match the WebServerModule. WebApiModule A very simple module to register class methods as handlers. Public instance methods that match the WebServerModule.ResponseHandler signature, and have the WebApi handler attribute will be used to respond to web server requests. WebSocketHandlerAttribute Decorate methods within controllers with this attribute in order to make them callable from the Web API Module Method Must match the WebServerModule. WebSocketsModule A WebSockets module conforming to RFC 6455. WebSocketsServer A base class that defines how to handle WebSockets connections. It keeps a list of connected WebSockets and has the basic logic to handle connections and data transmission. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.WebSocketHandlerAttribute.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.WebSocketHandlerAttribute.html",
    "title": "Class WebSocketHandlerAttribute | Unosquare EmbedIO",
    "keywords": "Class WebSocketHandlerAttribute Decorate methods within controllers with this attribute in order to make them callable from the Web API Module Method Must match the WebServerModule. Inheritance Object Attribute WebSocketHandlerAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax [AttributeUsage(AttributeTargets.Class)] public sealed class WebSocketHandlerAttribute : Attribute, _Attribute Constructors WebSocketHandlerAttribute(String) Initializes a new instance of the WebSocketHandlerAttribute class. Declaration public WebSocketHandlerAttribute(string path) Parameters Type Name Description String path The path. Exceptions Type Condition ArgumentException The argument 'paths' must be specified. Properties Path Gets or sets the path. Declaration public string Path { get; } Property Value Type Description String The paths. Implements System.Runtime.InteropServices._Attribute Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.WebApiModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.WebApiModule.html",
    "title": "Class WebApiModule | Unosquare EmbedIO",
    "keywords": "Class WebApiModule A very simple module to register class methods as handlers. Public instance methods that match the WebServerModule.ResponseHandler signature, and have the WebApi handler attribute will be used to respond to web server requests. Inheritance Object WebModuleBase WebApiModule Implements IWebModule Inherited Members WebModuleBase.Handlers WebModuleBase.Server WebModuleBase.IsWatchdogEnabled WebModuleBase.WatchdogInterval WebModuleBase.CancellationToken WebModuleBase.AddHandler(String, HttpVerbs, WebHandler) WebModuleBase.Start(CancellationToken) WebModuleBase.RunWatchdog() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public class WebApiModule : WebModuleBase, IWebModule Constructors WebApiModule() Initializes a new instance of the WebApiModule class. Declaration public WebApiModule() Properties ControllersCount Gets the number of controller objects registered in this API. Declaration public int ControllersCount { get; } Property Value Type Description Int32 Name Gets the friendly name of the module. Declaration public override string Name { get; } Property Value Type Description String The name. Overrides WebModuleBase.Name Methods RegisterController(Type) Registers the controller. Declaration public void RegisterController(Type controllerType) Parameters Type Name Description Type controllerType Type of the controller. RegisterController(Type, Func<IHttpContext, Object>) Registers the controller. Declaration public void RegisterController(Type controllerType, Func<IHttpContext, object> controllerFactory) Parameters Type Name Description Type controllerType Type of the controller. Func < IHttpContext , Object > controllerFactory The controller factory method. RegisterController<T>() Registers the controller. Declaration public void RegisterController<T>() where T : WebApiController Type Parameters Name Description T The type of register controller. Exceptions Type Condition ArgumentException Controller types must be unique within the module. RegisterController<T>(Func<IHttpContext, T>) Registers the controller. Declaration public void RegisterController<T>(Func<IHttpContext, T> controllerFactory) where T : WebApiController Parameters Type Name Description Func < IHttpContext , T> controllerFactory The controller factory method. Type Parameters Name Description T The type of register controller. Exceptions Type Condition ArgumentException Controller types must be unique within the module. Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.StaticFilesModule.html",
    "title": "Class StaticFilesModule | Unosquare EmbedIO",
    "keywords": "Class StaticFilesModule Represents a simple module to server static files from the file system. Inheritance Object WebModuleBase FileModuleBase StaticFilesModule Implements IWebModule Inherited Members FileModuleBase.MimeTypes FileModuleBase.DefaultHeaders FileModuleBase.UseGzip FileModuleBase.WriteFileAsync(Boolean, String, Int64, IHttpContext, Stream, CancellationToken) FileModuleBase.SetDefaultCacheHeaders(IHttpResponse) FileModuleBase.SetGeneralHeaders(IHttpResponse, String, String) WebModuleBase.Handlers WebModuleBase.Server WebModuleBase.IsWatchdogEnabled WebModuleBase.WatchdogInterval WebModuleBase.CancellationToken WebModuleBase.AddHandler(String, HttpVerbs, WebHandler) WebModuleBase.Start(CancellationToken) WebModuleBase.RunWatchdog() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public class StaticFilesModule : FileModuleBase, IWebModule Constructors StaticFilesModule(Dictionary<String, String>) Initializes a new instance of the StaticFilesModule class. Declaration public StaticFilesModule(Dictionary<string, string> paths) Parameters Type Name Description Dictionary < String , String > paths The paths. StaticFilesModule(String, Boolean) Initializes a new instance of the StaticFilesModule class. Declaration public StaticFilesModule(string fileSystemPath, bool useDirectoryBrowser) Parameters Type Name Description String fileSystemPath The file system path. Boolean useDirectoryBrowser if set to true [use directory browser]. StaticFilesModule(String, Dictionary<String, String>, Dictionary<String, String>, Boolean) Initializes a new instance of the StaticFilesModule class. Declaration public StaticFilesModule(string fileSystemPath, Dictionary<string, string> headers = null, Dictionary<string, string> additionalPaths = null, bool useDirectoryBrowser = false) Parameters Type Name Description String fileSystemPath The file system path. Dictionary < String , String > headers The headers to set in every request. Dictionary < String , String > additionalPaths The additional paths. Boolean useDirectoryBrowser if set to true [use directory browser]. Exceptions Type Condition ArgumentException Path ' + fileSystemPath + ' does not exist. Fields DefaultDocumentName Default document constant to \"index.html\". Declaration public const string DefaultDocumentName = \"index.html\" Field Value Type Description String Properties DefaultDocument Gets or sets the default document. Defaults to \"index.html\" Example: \"root.xml\". Declaration public string DefaultDocument { get; set; } Property Value Type Description String The default document. DefaultExtension Gets or sets the default extension. Defaults to null Example: \".html\". Declaration public string DefaultExtension { get; set; } Property Value Type Description String The default extension. FileSystemPath Gets the file system path from which files are retrieved. Declaration public string FileSystemPath { get; } Property Value Type Description String The file system path. MaxRamCacheFileSize Gets or sets the maximum size of the ram cache file. The default value is 250kb. Declaration public int MaxRamCacheFileSize { get; set; } Property Value Type Description Int32 The maximum size of the ram cache file. Name Gets the friendly name of the module. Declaration public override string Name { get; } Property Value Type Description String The name. Overrides WebModuleBase.Name UseRamCache Gets or sets a value indicating whether or not to use the RAM Cache feature RAM Cache will only cache files that are MaxRamCacheSize in bytes or less. Declaration public bool UseRamCache { get; set; } Property Value Type Description Boolean true if [use ram cache]; otherwise, false . VirtualPaths Gets the virtual paths. Declaration public ReadOnlyDictionary<string, string> VirtualPaths { get; } Property Value Type Description ReadOnlyDictionary < String , String > The virtual paths. Methods ClearRamCache() Clears the RAM cache. Declaration public void ClearRamCache() RegisterVirtualPath(String, String) Registers the virtual path. Declaration public void RegisterVirtualPath(string virtualPath, string physicalPath) Parameters Type Name Description String virtualPath The virtual path. String physicalPath The physical path. Exceptions Type Condition InvalidOperationException Is thrown when a method call is invalid for the object's current state. UnregisterVirtualPath(String) Unregisters the virtual path. Declaration public void UnregisterVirtualPath(string virtualPath) Parameters Type Name Description String virtualPath The virtual path. Exceptions Type Condition InvalidOperationException Is thrown when a method call is invalid for the object's current state. Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.ResourceFilesModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.ResourceFilesModule.html",
    "title": "Class ResourceFilesModule | Unosquare EmbedIO",
    "keywords": "Class ResourceFilesModule Represents a simple module to server resource files from the .NET assembly. Inheritance Object WebModuleBase FileModuleBase ResourceFilesModule Implements IWebModule Inherited Members FileModuleBase.MimeTypes FileModuleBase.DefaultHeaders FileModuleBase.UseGzip FileModuleBase.WriteFileAsync(Boolean, String, Int64, IHttpContext, Stream, CancellationToken) FileModuleBase.SetDefaultCacheHeaders(IHttpResponse) FileModuleBase.SetGeneralHeaders(IHttpResponse, String, String) WebModuleBase.Handlers WebModuleBase.Server WebModuleBase.IsWatchdogEnabled WebModuleBase.WatchdogInterval WebModuleBase.CancellationToken WebModuleBase.AddHandler(String, HttpVerbs, WebHandler) WebModuleBase.Start(CancellationToken) WebModuleBase.RunWatchdog() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public class ResourceFilesModule : FileModuleBase, IWebModule Constructors ResourceFilesModule(Assembly, String, Dictionary<String, String>) Initializes a new instance of the ResourceFilesModule class. Declaration public ResourceFilesModule(Assembly sourceAssembly, string resourcePath, Dictionary<string, string> headers = null) Parameters Type Name Description Assembly sourceAssembly The source assembly. String resourcePath The resource path. Dictionary < String , String > headers The headers. Exceptions Type Condition ArgumentNullException sourceAssembly. ArgumentException Path ' + fileSystemPath + ' does not exist. Properties Name Gets the friendly name of the module. Declaration public override string Name { get; } Property Value Type Description String The name. Overrides WebModuleBase.Name Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.FallbackModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.FallbackModule.html",
    "title": "Class FallbackModule | Unosquare EmbedIO",
    "keywords": "Class FallbackModule Represents a module to fallback any request. Inheritance Object WebModuleBase FallbackModule Implements IWebModule Inherited Members WebModuleBase.Handlers WebModuleBase.Server WebModuleBase.IsWatchdogEnabled WebModuleBase.WatchdogInterval WebModuleBase.CancellationToken WebModuleBase.AddHandler(String, HttpVerbs, WebHandler) WebModuleBase.Start(CancellationToken) WebModuleBase.RunWatchdog() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public class FallbackModule : WebModuleBase, IWebModule Constructors FallbackModule(Func<IHttpContext, CancellationToken, Boolean>, HttpVerbs) Initializes a new instance of the FallbackModule class. Declaration [Obsolete(\"Use WebHandler constructor\")] public FallbackModule(Func<IHttpContext, CancellationToken, bool> action, HttpVerbs verb = HttpVerbs.Any) Parameters Type Name Description Func < IHttpContext , CancellationToken , Boolean > action The action. HttpVerbs verb The verb. FallbackModule(String, HttpVerbs) Initializes a new instance of the FallbackModule class. Declaration public FallbackModule(string redirectUrl, HttpVerbs verb = HttpVerbs.Any) Parameters Type Name Description String redirectUrl The redirect URL. HttpVerbs verb The verb. Exceptions Type Condition ArgumentNullException redirectUrl. FallbackModule(WebHandler, HttpVerbs) Initializes a new instance of the FallbackModule class. Declaration public FallbackModule(WebHandler action, HttpVerbs verb = HttpVerbs.Any) Parameters Type Name Description WebHandler action The action. HttpVerbs verb The verb. Properties Name Gets the friendly name of the module. Declaration public override string Name { get; } Property Value Type Description String The name. Overrides WebModuleBase.Name RedirectUrl Gets the redirect URL. Declaration public string RedirectUrl { get; } Property Value Type Description String Implements IWebModule See Also WebModuleBase Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Modules.CorsModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Modules.CorsModule.html",
    "title": "Class CorsModule | Unosquare EmbedIO",
    "keywords": "Class CorsModule CORS control Module. Cross-origin resource sharing (CORS) is a mechanism that allows restricted resources (e.g. fonts) on a web page to be requested from another domain outside the domain from which the resource originated. Inheritance Object WebModuleBase CorsModule Implements IWebModule Inherited Members WebModuleBase.Handlers WebModuleBase.Server WebModuleBase.IsWatchdogEnabled WebModuleBase.WatchdogInterval WebModuleBase.CancellationToken WebModuleBase.AddHandler(String, HttpVerbs, WebHandler) WebModuleBase.Start(CancellationToken) WebModuleBase.RunWatchdog() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Modules Syntax public class CorsModule : WebModuleBase, IWebModule Constructors CorsModule(String, String, String) Initializes a new instance of the CorsModule class. Declaration public CorsModule(string origins = \"*\", string headers = \"*\", string methods = \"*\") Parameters Type Name Description String origins The origins. String headers The headers. String methods The methods. Exceptions Type Condition ArgumentNullException origins or headers or methods. Properties Name Gets the friendly name of the module. Declaration public override string Name { get; } Property Value Type Description String The name. Overrides WebModuleBase.Name Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Map.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Map.html",
    "title": "Class Map | Unosquare EmbedIO",
    "keywords": "Class Map Represents a binding of path and verb to a given method call (delegate). Inheritance Object Map Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class Map Properties Path The HTTP resource path. Declaration public string Path { get; set; } Property Value Type Description String ResponseHandler The delegate to call for the given path and verb. Declaration public WebHandler ResponseHandler { get; set; } Property Value Type Description WebHandler Verb The HTTP Verb of this Map. Declaration public HttpVerbs Verb { get; set; } Property Value Type Description HttpVerbs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IWebSocketReceiveResult.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IWebSocketReceiveResult.html",
    "title": "Interface IWebSocketReceiveResult | Unosquare EmbedIO",
    "keywords": "Interface IWebSocketReceiveResult Interface for WebSocket Receive Result object. Namespace : Unosquare.Labs.EmbedIO Syntax public interface IWebSocketReceiveResult Properties Count Gets the count. Declaration int Count { get; } Property Value Type Description Int32 The count. EndOfMessage Gets a value indicating whether [end of message]. Declaration bool EndOfMessage { get; } Property Value Type Description Boolean true if [end of message]; otherwise, false . MessageType Gets the type of the message. Declaration int MessageType { get; } Property Value Type Description Int32 The type of the message. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IWebServer.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IWebServer.html",
    "title": "Interface IWebServer | Unosquare EmbedIO",
    "keywords": "Interface IWebServer Interface to create a WebServer class. The basic behaviour for a WebServer is register/unregister modules and run asynchronous to receive incoming HTTP Requests. Namespace : Unosquare.Labs.EmbedIO Syntax public interface IWebServer Properties Modules Gets a list of registered modules. Declaration ReadOnlyCollection<IWebModule> Modules { get; } Property Value Type Description ReadOnlyCollection < IWebModule > The modules. OnMethodNotAllowed Gets or sets the on method not allowed. Declaration Func<IHttpContext, Task<bool>> OnMethodNotAllowed { get; set; } Property Value Type Description Func < IHttpContext , Task < Boolean >> The on method not allowed. OnNotFound Gets or sets the on not found. Declaration Func<IHttpContext, Task<bool>> OnNotFound { get; set; } Property Value Type Description Func < IHttpContext , Task < Boolean >> The on not found. RoutingStrategy Gets the URL RoutingStrategy used in this instance. By default it is set to Wildcard, but Regex is the recommended value. Declaration RoutingStrategy RoutingStrategy { get; } Property Value Type Description RoutingStrategy The routing strategy. SessionModule Gets registered SessionModule (if any). SessionModule is an implementation of ISessionModule to handle session data. Declaration ISessionWebModule SessionModule { get; } Property Value Type Description ISessionWebModule The session module. Methods Module<T>() Gets the module registered for the given type. Returns null if no module matches the given type. Declaration T Module<T>() where T : class, IWebModule Returns Type Description T Module registered for the given type. Type Parameters Name Description T The type of module. RegisterModule(IWebModule) Registers an instance of a web module. Only 1 instance per type is allowed. Declaration void RegisterModule(IWebModule module) Parameters Type Name Description IWebModule module The module. RunAsync(CancellationToken) Starts the listener and the registered modules. Declaration Task RunAsync(CancellationToken ct = default(CancellationToken)) Parameters Type Name Description CancellationToken ct The cancellation token; when cancelled, the server cancels all pending requests and stops. Returns Type Description Task Returns the task that the HTTP listener is running inside of, so that it can be waited upon after it's been canceled. UnregisterModule(Type) Unregisters the module identified by its type. Declaration void UnregisterModule(Type moduleType) Parameters Type Name Description Type moduleType Type of the module. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IWebModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IWebModule.html",
    "title": "Interface IWebModule | Unosquare EmbedIO",
    "keywords": "Interface IWebModule Interface to create web modules. Namespace : Unosquare.Labs.EmbedIO Syntax public interface IWebModule Properties CancellationToken Gets or sets the cancellation token. Declaration CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken The cancellation token. Handlers Gets the registered handlers. Declaration ModuleMap Handlers { get; } Property Value Type Description ModuleMap The handlers. IsWatchdogEnabled Gets or sets a value indicating whether this instance is watchdog enabled. Declaration bool IsWatchdogEnabled { get; set; } Property Value Type Description Boolean true if this instance is watchdog enabled; otherwise, false . Name Gets the friendly name of the module. Declaration string Name { get; } Property Value Type Description String The name. Server Gets the associated Web Server object. This property is automatically set when the module is registered. Declaration IWebServer Server { get; set; } Property Value Type Description IWebServer The server. WatchdogInterval Gets or sets the watchdog interval. Declaration TimeSpan WatchdogInterval { get; set; } Property Value Type Description TimeSpan The watchdog interval. Methods AddHandler(String, HttpVerbs, WebHandler) Adds a handler that gets called when a path and verb are matched. Declaration void AddHandler(string path, HttpVerbs verb, WebHandler handler) Parameters Type Name Description String path The path. HttpVerbs verb The verb. WebHandler handler The handler. Exceptions Type Condition ArgumentNullException path or handler. RunWatchdog() Runs the watchdog. Declaration void RunWatchdog() Start(CancellationToken) Starts the Web Module. Declaration void Start(CancellationToken ct) Parameters Type Name Description CancellationToken ct The cancellation token. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IHttpRequest.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IHttpRequest.html",
    "title": "Interface IHttpRequest | Unosquare EmbedIO",
    "keywords": "Interface IHttpRequest Interface to create a HTTP Request. Inherited Members IHttpBase.Headers IHttpBase.Cookies IHttpBase.ProtocolVersion Namespace : Unosquare.Labs.EmbedIO Syntax public interface IHttpRequest : IHttpBase Properties ContentEncoding Gets the content encoding. Declaration Encoding ContentEncoding { get; } Property Value Type Description Encoding The content encoding. ContentLength64 Gets the content length64. Declaration long ContentLength64 { get; } Property Value Type Description Int64 The content length64. ContentType Gets the type of the content. Declaration string ContentType { get; } Property Value Type Description String The type of the content. HasEntityBody Gets a value indicating whether this instance has entity body. Declaration bool HasEntityBody { get; } Property Value Type Description Boolean true if this instance has entity body; otherwise, false . HttpMethod Gets the HTTP method. Declaration string HttpMethod { get; } Property Value Type Description String The HTTP method. InputStream Gets the input stream. Declaration Stream InputStream { get; } Property Value Type Description Stream The input stream. IsAuthenticated Gets a value indicating whether this instance is authenticated. Declaration bool IsAuthenticated { get; } Property Value Type Description Boolean true if this instance is authenticated; otherwise, false . IsLocal Gets a value indicating whether this instance is local. Declaration bool IsLocal { get; } Property Value Type Description Boolean true if this instance is local; otherwise, false . IsWebSocketRequest Gets a value indicating whether this instance is web socket request. Declaration bool IsWebSocketRequest { get; } Property Value Type Description Boolean true if this instance is web socket request; otherwise, false . KeepAlive Gets a value indicating whether [keep alive]. Declaration bool KeepAlive { get; } Property Value Type Description Boolean true if [keep alive]; otherwise, false . LocalEndPoint Gets the local end point. Declaration Net.IPEndPoint LocalEndPoint { get; } Property Value Type Description Net.IPEndPoint The local end point. QueryString Gets the query string. Declaration NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection The query string. RawUrl Gets the raw URL. Declaration string RawUrl { get; } Property Value Type Description String The raw URL. RemoteEndPoint Gets the remote end point. Declaration Net.IPEndPoint RemoteEndPoint { get; } Property Value Type Description Net.IPEndPoint The remote end point. RequestTraceIdentifier Gets the request identifier of the incoming HTTP request. Declaration Guid RequestTraceIdentifier { get; } Property Value Type Description Guid The request trace identifier. Url Gets the URL. Declaration Uri Url { get; } Property Value Type Description Uri The URL. UrlReferrer Gets the URL referrer. Declaration Uri UrlReferrer { get; } Property Value Type Description Uri The URL referrer. UserAgent Gets the user agent. Declaration string UserAgent { get; } Property Value Type Description String The user agent. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IHttpListener.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IHttpListener.html",
    "title": "Interface IHttpListener | Unosquare EmbedIO",
    "keywords": "Interface IHttpListener Interface to create a HTTP Listener. Inherited Members IDisposable.Dispose() Namespace : Unosquare.Labs.EmbedIO Syntax public interface IHttpListener : IDisposable Properties IgnoreWriteExceptions Gets or sets a value indicating whether the listener should ignore write exceptions. Declaration bool IgnoreWriteExceptions { get; set; } Property Value Type Description Boolean true if [ignore write exceptions]; otherwise, false . IsListening Gets a value indicating whether this instance is listening. Declaration bool IsListening { get; } Property Value Type Description Boolean true if this instance is listening; otherwise, false . Name Gets or sets the name. Declaration string Name { get; } Property Value Type Description String The name. Prefixes Gets the prefixes. Declaration List<string> Prefixes { get; } Property Value Type Description List < String > The prefixes. Methods AddPrefix(String) Adds the prefix. Declaration void AddPrefix(string urlPrefix) Parameters Type Name Description String urlPrefix The URL prefix. GetContextAsync(CancellationToken) Gets the HTTP context asynchronous. Declaration Task<IHttpContext> GetContextAsync(CancellationToken ct) Parameters Type Name Description CancellationToken ct The cancellation token. Returns Type Description Task < IHttpContext > A task that represents the time delay for the HTTP Context. Start() Starts this listener. Declaration void Start() Stop() Stops this listener. Declaration void Stop() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.ICookieCollection.html": {
    "href": "api/Unosquare.Labs.EmbedIO.ICookieCollection.html",
    "title": "Interface ICookieCollection | Unosquare EmbedIO",
    "keywords": "Interface ICookieCollection Interface for Cookie Collection. Inherited Members ICollection.CopyTo(Array, Int32) ICollection.Count ICollection.SyncRoot ICollection.IsSynchronized IEnumerable.GetEnumerator() Namespace : Unosquare.Labs.EmbedIO Syntax public interface ICookieCollection : ICollection, IEnumerable Properties Item[String] Gets the with the specified name. Declaration Cookie this[string name] { get; } Parameters Type Name Description String name The name. Property Value Type Description Cookie The . Methods Add(Cookie) Adds the specified cookie. Declaration void Add(Cookie cookie) Parameters Type Name Description Cookie cookie The cookie. See Also ICollection Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.HttpRequest.html": {
    "href": "api/Unosquare.Labs.EmbedIO.HttpRequest.html",
    "title": "Class HttpRequest | Unosquare EmbedIO",
    "keywords": "Class HttpRequest Represents a wrapper for HttpListenerContext.Request. Inheritance Object HttpRequest Implements IHttpRequest IHttpBase Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class HttpRequest : IHttpRequest, IHttpBase Constructors HttpRequest(HttpListenerContext) Initializes a new instance of the HttpRequest class. Declaration public HttpRequest(HttpListenerContext context) Parameters Type Name Description HttpListenerContext context The context. Properties ContentEncoding Gets the content encoding. Declaration public Encoding ContentEncoding { get; } Property Value Type Description Encoding The content encoding. ContentLength64 Gets the content length64. Declaration public long ContentLength64 { get; } Property Value Type Description Int64 The content length64. ContentType Gets the type of the content. Declaration public string ContentType { get; } Property Value Type Description String The type of the content. Cookies Gets the cookies. Declaration public ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. HasEntityBody Gets a value indicating whether this instance has entity body. Declaration public bool HasEntityBody { get; } Property Value Type Description Boolean true if this instance has entity body; otherwise, false . Headers Gets the headers. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection The headers. HttpMethod Gets the HTTP method. Declaration public string HttpMethod { get; } Property Value Type Description String The HTTP method. InputStream Gets the input stream. Declaration public Stream InputStream { get; } Property Value Type Description Stream The input stream. IsAuthenticated Gets a value indicating whether this instance is authenticated. Declaration public bool IsAuthenticated { get; } Property Value Type Description Boolean true if this instance is authenticated; otherwise, false . IsLocal Gets a value indicating whether this instance is local. Declaration public bool IsLocal { get; } Property Value Type Description Boolean true if this instance is local; otherwise, false . IsWebSocketRequest Gets a value indicating whether this instance is web socket request. Declaration public bool IsWebSocketRequest { get; } Property Value Type Description Boolean true if this instance is web socket request; otherwise, false . KeepAlive Gets a value indicating whether [keep alive]. Declaration public bool KeepAlive { get; } Property Value Type Description Boolean true if [keep alive]; otherwise, false . LocalEndPoint Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint ProtocolVersion Gets or sets the protocol version. Declaration public Version ProtocolVersion { get; } Property Value Type Description Version The protocol version. QueryString Gets the query string. Declaration public NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection The query string. RawUrl Gets the raw URL. Declaration public string RawUrl { get; } Property Value Type Description String The raw URL. RemoteEndPoint Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint RequestTraceIdentifier Gets the request identifier of the incoming HTTP request. Declaration public Guid RequestTraceIdentifier { get; } Property Value Type Description Guid The request trace identifier. Url Gets the URL. Declaration public Uri Url { get; } Property Value Type Description Uri The URL. UrlReferrer Gets the URL referrer. Declaration public Uri UrlReferrer { get; } Property Value Type Description Uri The URL referrer. UserAgent Gets the user agent. Declaration public string UserAgent { get; } Property Value Type Description String The user agent. Implements IHttpRequest IHttpBase See Also IHttpRequest Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.HttpListenerFactory.html": {
    "href": "api/Unosquare.Labs.EmbedIO.HttpListenerFactory.html",
    "title": "Class HttpListenerFactory | Unosquare EmbedIO",
    "keywords": "Class HttpListenerFactory Represents a Factory to create a HTTP Listener. Inheritance Object HttpListenerFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public static class HttpListenerFactory Methods Create(X509Certificate) Creates this instance with the default mode. The default HTTP Listener is Microsoft for net47 and netstandard2.0 target frameworks, otherwise EmbedIO. Declaration public static IHttpListener Create(X509Certificate certificate = null) Parameters Type Name Description X509Certificate certificate The certificate. Returns Type Description IHttpListener A HTTP Listener. Create(HttpListenerMode, X509Certificate) Creates the specified mode. Declaration public static IHttpListener Create(HttpListenerMode mode, X509Certificate certificate = null) Parameters Type Name Description HttpListenerMode mode The mode. X509Certificate certificate The certificate. Returns Type Description IHttpListener A HTTP Listener. Exceptions Type Condition ArgumentOutOfRangeException mode - null. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Extensions.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Extensions.html",
    "title": "Class Extensions | Unosquare EmbedIO",
    "keywords": "Class Extensions Extension methods to help your coding!. Inheritance Object Extensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public static class Extensions Methods BinaryResponseAsync(IHttpContext, Stream, CancellationToken, Boolean) Binaries the response asynchronous. Declaration public static Task<bool> BinaryResponseAsync(this IHttpContext context, Stream buffer, CancellationToken ct = default(CancellationToken), bool useGzip = true) Parameters Type Name Description IHttpContext context The context. Stream buffer The buffer. CancellationToken ct The ct. Boolean useGzip if set to true [use gzip]. Returns Type Description Task < Boolean > A task for writing the output stream. CompressAsync(Stream, CompressionMethod, CompressionMode, CancellationToken) Compresses the specified buffer stream using the G-Zip compression algorithm. Declaration public static Task<MemoryStream> CompressAsync(this Stream buffer, CompressionMethod method = CompressionMethod.Gzip, CompressionMode mode = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Stream buffer The buffer. CompressionMethod method The method. CompressionMode mode The mode. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < MemoryStream > A task representing the block of bytes of compressed stream. DeleteSession(IHttpContext) Deletes the session object associated to the current context. Declaration public static void DeleteSession(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. DeleteSession(IHttpContext, SessionInfo) Deletes the given session object. Declaration public static void DeleteSession(this IHttpContext context, SessionInfo session) Parameters Type Name Description IHttpContext context The context. SessionInfo session The session info. EnableCors(IWebServer, String, String, String) Enables CORS in the WebServer. Declaration public static IWebServer EnableCors(this IWebServer webserver, string origins = \"*\", string headers = \"*\", string methods = \"*\") Parameters Type Name Description IWebServer webserver The webserver instance. String origins The valid origins, default all. String headers The valid headers, default all. String methods The valid method, default all. Returns Type Description IWebServer An instance of the tiny web server used to handle request. Exceptions Type Condition ArgumentNullException webserver. GetSession(IHttpContext) Gets the session object associated to the current context. Returns null if the LocalSessionWebModule has not been loaded. Declaration public static SessionInfo GetSession(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. Returns Type Description SessionInfo A session object for the given server context. GetSession(IWebServer, IWebSocketContext) Gets the session. Declaration public static SessionInfo GetSession(this IWebServer server, IWebSocketContext context) Parameters Type Name Description IWebServer server The server. IWebSocketContext context The context. Returns Type Description SessionInfo A session info for the given websocket context. GetSession(IWebSocketContext, IWebServer) Gets the session object associated to the current context. Returns null if the LocalSessionWebModule has not been loaded. Declaration public static SessionInfo GetSession(this IWebSocketContext context, IWebServer server) Parameters Type Name Description IWebSocketContext context The context. IWebServer server The server. Returns Type Description SessionInfo A session info for the given websocket context. HasRequestHeader(IHttpContext, String) Determines whether [has request header] [the specified context]. Declaration public static bool HasRequestHeader(this IHttpContext context, string headerName) Parameters Type Name Description IHttpContext context The context. String headerName Name of the header. Returns Type Description Boolean true if request headers is not a null; otherwise, false. HtmlResponseAsync(IHttpContext, String, Net.HttpStatusCode, CancellationToken) Outputs a HTML Response given a HTML content. Declaration public static Task<bool> HtmlResponseAsync(this IHttpContext context, string htmlContent, Net.HttpStatusCode statusCode = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IHttpContext context The context. String htmlContent Content of the HTML. Net.HttpStatusCode statusCode The status code. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. InQueryString(IHttpContext, String) Determines if a key exists within the Request's query string. Declaration public static bool InQueryString(this IHttpContext context, string key) Parameters Type Name Description IHttpContext context The context. String key The key. Returns Type Description Boolean true if a key exists within the Request's query string; otherwise, false . JsonExceptionResponse(IHttpContext, Exception, Net.HttpStatusCode) Outputs async a JSON Response given an exception. Declaration [Obsolete(\"Please use the async method.\")] public static bool JsonExceptionResponse(this IHttpContext context, Exception ex, Net.HttpStatusCode statusCode = null) Parameters Type Name Description IHttpContext context The context. Exception ex The ex. Net.HttpStatusCode statusCode The status code. Returns Type Description Boolean A true value when the exception is written to the HTTP Response. JsonExceptionResponseAsync(IHttpContext, Exception, Net.HttpStatusCode) Outputs a JSON Response given an exception. Declaration public static Task<bool> JsonExceptionResponseAsync(this IHttpContext context, Exception ex, Net.HttpStatusCode statusCode = null) Parameters Type Name Description IHttpContext context The context. Exception ex The ex. Net.HttpStatusCode statusCode The status code. Returns Type Description Task < Boolean > A task for writing the output stream. JsonResponse(IHttpContext, Object) Outputs a Json Response given a data object. Declaration [Obsolete(\"Please use the async method.\")] public static bool JsonResponse(this IHttpContext context, object data) Parameters Type Name Description IHttpContext context The context. Object data The data. Returns Type Description Boolean A true value of type ref=JsonResponseAsync\". JsonResponse(IHttpContext, String) Outputs a Json Response given a Json string. Declaration [Obsolete(\"Please use the async method.\")] public static bool JsonResponse(this IHttpContext context, string json) Parameters Type Name Description IHttpContext context The context. String json The JSON. Returns Type Description Boolean A true value of type ref=JsonResponseAsync\". JsonResponseAsync(IHttpContext, Object, CancellationToken) Outputs async a Json Response given a data object. Declaration public static Task<bool> JsonResponseAsync(this IHttpContext context, object data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IHttpContext context The context. Object data The data. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A true value of type ref=JsonResponseAsync\". JsonResponseAsync(IHttpContext, String, CancellationToken) Outputs async a JSON Response given a JSON string. Declaration public static Task<bool> JsonResponseAsync(this IHttpContext context, string json, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IHttpContext context The context. String json The JSON. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. LoadApiControllers(IWebServer, Assembly) Load all the WebApi Controllers in an assembly. Declaration public static IWebServer LoadApiControllers(this IWebServer webserver, Assembly assembly = null) Parameters Type Name Description IWebServer webserver The webserver instance. Assembly assembly The assembly to load WebApi Controllers from. Leave null to load from the currently executing assembly. Returns Type Description IWebServer An instance of webserver. Exceptions Type Condition ArgumentNullException webserver. LoadApiControllers(WebApiModule, Assembly) Load all the WebApi Controllers in an assembly. Declaration public static WebApiModule LoadApiControllers(this WebApiModule apiModule, Assembly assembly = null) Parameters Type Name Description WebApiModule apiModule The Web API Module instance. Assembly assembly The assembly to load WebApi Controllers from. Leave null to load from the currently executing assembly. Returns Type Description WebApiModule The webserver instance. Exceptions Type Condition ArgumentNullException webserver. LoadWebSockets(IWebServer, Assembly) Load all the WebSockets in an assembly. Declaration public static IWebServer LoadWebSockets(this IWebServer webserver, Assembly assembly = null) Parameters Type Name Description IWebServer webserver The webserver instance. Assembly assembly The assembly to load WebSocketsServer types from. Leave null to load from the currently executing assembly. Returns Type Description IWebServer An instance of webserver. Exceptions Type Condition ArgumentNullException webserver. NoCache(IHttpContext) Sends headers to disable caching on the client side. Declaration public static void NoCache(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. ParseJson<T>(IHttpContext) Parses the JSON as a given type from the request body. Please note the underlying input stream is not rewindable. Declaration public static T ParseJson<T>(this IHttpContext context) where T : class Parameters Type Name Description IHttpContext context The context. Returns Type Description T Parses the JSON as a given type from the request body. Type Parameters Name Description T The type of specified object type. QueryString(IHttpContext, String) Gets the value for the specified query string key. If the value does not exist it returns null. Declaration public static string QueryString(this IHttpContext context, string key) Parameters Type Name Description IHttpContext context The context. String key The key. Returns Type Description String A string that represents the value for the specified query string key. Redirect(IHttpContext, String, Boolean) Sets a response static code of 302 and adds a Location header to the response in order to direct the client to a different URL. Declaration public static bool Redirect(this IHttpContext context, string location, bool useAbsoluteUrl = true) Parameters Type Name Description IHttpContext context The context. String location The location. Boolean useAbsoluteUrl if set to true [use absolute URL]. Returns Type Description Boolean true if the headers were set, otherwise false . RequestBody(IHttpContext) Retrieves the request body as a string. Note that once this method returns, the underlying input stream cannot be read again as it is not rewindable for obvious reasons. This functionality is by design. Declaration public static string RequestBody(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. Returns Type Description String The rest of the stream as a string, from the current position to the end. If the current position is at the end of the stream, returns an empty string. RequestFormDataDictionary(String) Returns a dictionary of KVPs from Request data. Declaration public static Dictionary<string, object> RequestFormDataDictionary(this string requestBody) Parameters Type Name Description String requestBody The request body. Returns Type Description Dictionary < String , Object > A collection that represents KVPs from request data. RequestFormDataDictionary(IHttpContext) Returns dictionary from Request POST data Please note the underlying input stream is not rewindable. Declaration public static Dictionary<string, object> RequestFormDataDictionary(this IHttpContext context) Parameters Type Name Description IHttpContext context The context to request body as string. Returns Type Description Dictionary < String , Object > A collection that represents KVPs from request data. RequestHeader(IHttpContext, String) Retrieves the specified request the header. Declaration public static string RequestHeader(this IHttpContext context, string headerName) Parameters Type Name Description IHttpContext context The context. String headerName Name of the header. Returns Type Description String Specified request the header when is true ; otherwise, empty string. RequestPath(IHttpContext) Gets the request path for the specified context. Declaration public static string RequestPath(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. Returns Type Description String Path for the specified context. RequestPathCaseSensitive(IHttpContext) Gets the request path for the specified context case sensitive. Declaration public static string RequestPathCaseSensitive(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. Returns Type Description String Path for the specified context. RequestRegexUrlParams(String, String, Func<Boolean>) Requests the regex URL parameters. Declaration public static Dictionary<string, object> RequestRegexUrlParams(this string requestPath, string basePath, Func<bool> validateFunc = null) Parameters Type Name Description String requestPath The request path. String basePath The base path. Func < Boolean > validateFunc The validate function. Returns Type Description Dictionary < String , Object > The params from the request. RequestRegexUrlParams(IHttpContext, String) Requests the regex URL parameters. Declaration public static Dictionary<string, object> RequestRegexUrlParams(this IHttpContext context, string basePath) Parameters Type Name Description IHttpContext context The context. String basePath The base path. Returns Type Description Dictionary < String , Object > The params from the request. RequestRegexUrlParams(IWebSocketContext, String) Requests the regex URL parameters. Declaration public static Dictionary<string, object> RequestRegexUrlParams(this IWebSocketContext context, string urlPattern) Parameters Type Name Description IWebSocketContext context The context. String urlPattern The url pattern. Returns Type Description Dictionary < String , Object > The params from the request. RequestVerb(IHttpContext) Retrieves the Request HTTP Verb (also called Method) of this context. Declaration public static HttpVerbs RequestVerb(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. Returns Type Description HttpVerbs HTTP verb result of the conversion of this context. RequestWilcardPath(IHttpContext, IEnumerable<String>) Gets the request path for the specified context using a wildcard paths to match. Declaration public static string RequestWilcardPath(this IHttpContext context, IEnumerable<string> wildcardPaths) Parameters Type Name Description IHttpContext context The context. IEnumerable < String > wildcardPaths The wildcard paths. Returns Type Description String Path for the specified context. RequestWildcardUrlParams(String, String) Requests the wildcard URL parameters. Declaration public static string[] RequestWildcardUrlParams(this string requestPath, string basePath) Parameters Type Name Description String requestPath The request path. String basePath The base path. Returns Type Description String [] The params from the request. RequestWildcardUrlParams(IHttpContext, String) Requests the wildcard URL parameters. Declaration public static string[] RequestWildcardUrlParams(this IHttpContext context, string basePath) Parameters Type Name Description IHttpContext context The context. String basePath The base path. Returns Type Description String [] The params from the request. StringResponseAsync(IHttpContext, String, String, CancellationToken, Encoding) Outputs async a string response given a string. Declaration public static Task<bool> StringResponseAsync(this IHttpContext context, string content, string contentType = \"application/json\", CancellationToken cancellationToken = default(CancellationToken), Encoding encoding = null) Parameters Type Name Description IHttpContext context The context. String content The content. String contentType Type of the content. CancellationToken cancellationToken The cancellation token. Encoding encoding The encoding. Returns Type Description Task < Boolean > A task for writing the output stream. WithLocalSession(IWebServer) Add StaticFilesModule to WebServer. Declaration public static IWebServer WithLocalSession(this IWebServer webserver) Parameters Type Name Description IWebServer webserver The webserver instance. Returns Type Description IWebServer An instance of a web module. Exceptions Type Condition ArgumentNullException webserver. WithStaticFolderAt(IWebServer, String, String, Boolean) Add the StaticFilesModule to the specified WebServer. Declaration public static IWebServer WithStaticFolderAt(this IWebServer webserver, string rootPath, string defaultDocument = \"index.html\", bool useDirectoryBrowser = false) Parameters Type Name Description IWebServer webserver The webserver instance. String rootPath The static folder path. String defaultDocument The default document name. Boolean useDirectoryBrowser if set to true [use directory browser]. Returns Type Description IWebServer An instance of webserver. Exceptions Type Condition ArgumentNullException webserver. WithVirtualPaths(IWebServer, Dictionary<String, String>, String) Add the StaticFilesModule with multiple paths. Declaration public static IWebServer WithVirtualPaths(this IWebServer webserver, Dictionary<string, string> virtualPaths, string defaultDocument = \"index.html\") Parameters Type Name Description IWebServer webserver The webserver. Dictionary < String , String > virtualPaths The virtual paths. String defaultDocument The default document. Returns Type Description IWebServer An instance of a web module. Exceptions Type Condition ArgumentNullException webserver. WithWebApi(IWebServer, Assembly) Add WebApiModule to WebServer. Declaration public static IWebServer WithWebApi(this IWebServer webserver, Assembly assembly = null) Parameters Type Name Description IWebServer webserver The webserver instance. Assembly assembly The assembly to load WebApi Controllers from. Leave null to avoid autoloading. Returns Type Description IWebServer An instance of webserver. Exceptions Type Condition ArgumentNullException webserver. WithWebApiController<T>(IWebServer) Add WebApi Controller to WebServer. Declaration public static IWebServer WithWebApiController<T>(this IWebServer webserver) where T : WebApiController Parameters Type Name Description IWebServer webserver The webserver instance. Returns Type Description IWebServer An instance of webserver. Type Parameters Name Description T The type of Web API Controller. Exceptions Type Condition ArgumentNullException webserver. WithWebSocket(IWebServer, Assembly) Add WebSocketsModule to WebServer. Declaration public static IWebServer WithWebSocket(this IWebServer webserver, Assembly assembly = null) Parameters Type Name Description IWebServer webserver The webserver instance. Assembly assembly The assembly to load Web Sockets from. Leave null to avoid autoloading. Returns Type Description IWebServer An instance of webserver. Exceptions Type Condition ArgumentNullException webserver. WriteToOutputStream(IHttpResponse, Stream, Int64, CancellationToken) Writes to output stream. Declaration public static Task WriteToOutputStream(this IHttpResponse response, Stream buffer, long lowerByteIndex = 0L, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description IHttpResponse response The response. Stream buffer The buffer. Int64 lowerByteIndex Index of the lower byte. CancellationToken ct The ct. Returns Type Description Task A task representing the write operation to the stream. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.CookieCollection.html": {
    "href": "api/Unosquare.Labs.EmbedIO.CookieCollection.html",
    "title": "Class CookieCollection | Unosquare EmbedIO",
    "keywords": "Class CookieCollection Represents a wrapper for System.Net.CookieCollection . Inheritance Object CookieCollection Implements ICookieCollection ICollection IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class CookieCollection : ICookieCollection, ICollection, IEnumerable Constructors CookieCollection(Net.CookieCollection) Initializes a new instance of the CookieCollection class. Declaration public CookieCollection(Net.CookieCollection cookieCollection) Parameters Type Name Description Net.CookieCollection cookieCollection The cookie collection. Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description Boolean Item[String] Gets the with the specified name. Declaration public Cookie this[string name] { get; } Parameters Type Name Description String name The name. Property Value Type Description Cookie The . SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description Object Methods Add(Cookie) Adds the specified cookie. Declaration public void Add(Cookie cookie) Parameters Type Name Description Cookie cookie The cookie. CopyTo(Array, Int32) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array Int32 index GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator Implements ICookieCollection System.Collections.ICollection System.Collections.IEnumerable See Also ICookieCollection Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Constants.MimeTypes.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Constants.MimeTypes.html",
    "title": "Class MimeTypes | Unosquare EmbedIO",
    "keywords": "Class MimeTypes Represents a MimeType collection. Inheritance Object MimeTypes Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Constants Syntax public static class MimeTypes Fields DefaultMimeTypes A big list of default MIME types. Declaration public static readonly Lazy<Dictionary<string, string>> DefaultMimeTypes Field Value Type Description Lazy < Dictionary < String , String >> Remarks Originally started from: http://stackoverflow.com/questions/1029740/get-mime-type-from-filename-extension . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Constants.HttpVerbs.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Constants.HttpVerbs.html",
    "title": "Enum HttpVerbs | Unosquare EmbedIO",
    "keywords": "Enum HttpVerbs Enumerates the different HTTP Verbs. Namespace : Unosquare.Labs.EmbedIO.Constants Syntax public enum HttpVerbs Fields Name Description Any Wildcard Method Delete DELETE Method Get GET Method Head HEAD method Options OPTIONS method Patch PATCH method Post POST method Put PUT method Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Constants.CompressionMethod.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Constants.CompressionMethod.html",
    "title": "Enum CompressionMethod | Unosquare EmbedIO",
    "keywords": "Enum CompressionMethod Specifies the compression method used to compress a message on the WebSocket connection. Namespace : Unosquare.Labs.EmbedIO.Constants Syntax public enum CompressionMethod : byte Remarks The compression methods that can be used are defined in Compression Extensions for WebSocket . Fields Name Description Deflate Specifies DEFLATE. Gzip Specifies GZIP. None Specifies non compression. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.WebHandler.html": {
    "href": "api/Unosquare.Labs.EmbedIO.WebHandler.html",
    "title": "Delegate WebHandler | Unosquare EmbedIO",
    "keywords": "Delegate WebHandler Represents a Web Handler. Namespace : Unosquare.Labs.EmbedIO Syntax public delegate Task<bool> WebHandler(IHttpContext context, CancellationToken ct); Parameters Type Name Description IHttpContext context The context. CancellationToken ct The cancellation token. Returns Type Description Task < Boolean > A task representing the success of the web handler. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Tests.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Tests.html",
    "title": "Namespace Unosquare.Labs.EmbedIO.Tests | Unosquare EmbedIO",
    "keywords": "Namespace Unosquare.Labs.EmbedIO.Tests Classes TestHttpClient Represents a HTTP Client for unit testing. TestHttpContext Represents a Test Http Context. TestHttpRequest Represents an IHttpRequest implementation for unit testing. TestHttpResponse Represents an IHttpResponse implementation for unit testing. TestWebServer Represents our tiny web server used to handle requests for testing. Use this IWebServer implementation to run your unit tests. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Tests.TestWebServer.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Tests.TestWebServer.html",
    "title": "Class TestWebServer | Unosquare EmbedIO",
    "keywords": "Class TestWebServer Represents our tiny web server used to handle requests for testing. Use this IWebServer implementation to run your unit tests. Inheritance Object TestWebServer Implements IWebServer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Tests Syntax public class TestWebServer : IWebServer Constructors TestWebServer(RoutingStrategy) Initializes a new instance of the TestWebServer class. Declaration public TestWebServer(RoutingStrategy routingStrategy = RoutingStrategy.Wildcard) Parameters Type Name Description RoutingStrategy routingStrategy The routing strategy. Properties HttpContexts Gets the HTTP contexts. Declaration public ConcurrentQueue<IHttpContext> HttpContexts { get; } Property Value Type Description ConcurrentQueue < IHttpContext > The HTTP contexts. Modules Gets a list of registered modules. Declaration public ReadOnlyCollection<IWebModule> Modules { get; } Property Value Type Description ReadOnlyCollection < IWebModule > The modules. OnMethodNotAllowed Gets or sets the on method not allowed. Declaration public Func<IHttpContext, Task<bool>> OnMethodNotAllowed { get; set; } Property Value Type Description Func < IHttpContext , Task < Boolean >> The on method not allowed. OnNotFound Gets or sets the on not found. Declaration public Func<IHttpContext, Task<bool>> OnNotFound { get; set; } Property Value Type Description Func < IHttpContext , Task < Boolean >> The on not found. RoutingStrategy Gets the URL RoutingStrategy used in this instance. By default it is set to Wildcard, but Regex is the recommended value. Declaration public RoutingStrategy RoutingStrategy { get; } Property Value Type Description RoutingStrategy The routing strategy. SessionModule Gets registered SessionModule (if any). SessionModule is an implementation of ISessionModule to handle session data. Declaration public ISessionWebModule SessionModule { get; } Property Value Type Description ISessionWebModule The session module. Methods GetClient() Gets the test HTTP Client. Declaration public TestHttpClient GetClient() Returns Type Description TestHttpClient A new instance of the TestHttpClient. Module<T>() Gets the module registered for the given type. Returns null if no module matches the given type. Declaration public T Module<T>() where T : class, IWebModule Returns Type Description T Module registered for the given type. Type Parameters Name Description T The type of module. RegisterModule(IWebModule) Registers an instance of a web module. Only 1 instance per type is allowed. Declaration public void RegisterModule(IWebModule module) Parameters Type Name Description IWebModule module The module. RunAsync(CancellationToken) Starts the listener and the registered modules. Declaration public Task RunAsync(CancellationToken ct = default(CancellationToken)) Parameters Type Name Description CancellationToken ct The cancellation token; when cancelled, the server cancels all pending requests and stops. Returns Type Description Task Returns the task that the HTTP listener is running inside of, so that it can be waited upon after it's been canceled. UnregisterModule(Type) Unregisters the module identified by its type. Declaration public void UnregisterModule(Type moduleType) Parameters Type Name Description Type moduleType Type of the module. Implements IWebServer Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.Tests.TestHttpContext.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Tests.TestHttpContext.html",
    "title": "Class TestHttpContext | Unosquare EmbedIO",
    "keywords": "Class TestHttpContext Represents a Test Http Context. Inheritance Object TestHttpContext Implements IHttpContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.Tests Syntax public class TestHttpContext : IHttpContext Constructors TestHttpContext(IHttpRequest, IWebServer) Initializes a new instance of the TestHttpContext class. Declaration public TestHttpContext(IHttpRequest request, IWebServer webserver) Parameters Type Name Description IHttpRequest request The request. IWebServer webserver The webserver. Properties Request Gets the HTTP Request. Declaration public IHttpRequest Request { get; } Property Value Type Description IHttpRequest The request. Response Gets the HTTP Response. Declaration public IHttpResponse Response { get; } Property Value Type Description IHttpResponse The response. User Gets the user. Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal The user. WebServer Gets or sets the web server. Declaration public IWebServer WebServer { get; set; } Property Value Type Description IWebServer The web server. Methods AcceptWebSocketAsync(Int32) Accepts the web socket asynchronous. Declaration public Task<IWebSocketContext> AcceptWebSocketAsync(int receiveBufferSize) Parameters Type Name Description Int32 receiveBufferSize Size of the receive buffer. Returns Type Description Task < IWebSocketContext > A IWebSocketContext that represents the WebSocket handshake request. Implements IHttpContext See Also IHttpContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.ModuleMap.html": {
    "href": "api/Unosquare.Labs.EmbedIO.ModuleMap.html",
    "title": "Class ModuleMap | Unosquare EmbedIO",
    "keywords": "Class ModuleMap Represents a list which binds Paths and their corresponding HTTP Verbs to Method calls. Inheritance Object List < Map > ModuleMap Implements IList < Map > ICollection < Map > IList ICollection IReadOnlyList < Map > IReadOnlyCollection < Map > IEnumerable < Map > IEnumerable Inherited Members System.Collections.Generic.List<Unosquare.Labs.EmbedIO.Map>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Unosquare.Labs.EmbedIO.Map>.System.Collections.IList.set_Item(System.Int32, System.Object) List<Map>.Add(Map) List<Map>.IList.Add(Object) List<Map>.AddRange(IEnumerable<Map>) List<Map>.AsReadOnly() List<Map>.BinarySearch(Int32, Int32, Map, IComparer<Map>) List<Map>.BinarySearch(Map) List<Map>.BinarySearch(Map, IComparer<Map>) List<Map>.Clear() List<Map>.Contains(Map) List<Map>.IList.Contains(Object) List<Map>.ConvertAll<TOutput>(Converter<Map, TOutput>) List<Map>.CopyTo(Map[]) List<Map>.ICollection.CopyTo(Array, Int32) List<Map>.CopyTo(Int32, Map[], Int32, Int32) List<Map>.CopyTo(Map[], Int32) List<Map>.Exists(Predicate<Map>) List<Map>.Find(Predicate<Map>) List<Map>.FindAll(Predicate<Map>) List<Map>.FindIndex(Predicate<Map>) List<Map>.FindIndex(Int32, Predicate<Map>) List<Map>.FindIndex(Int32, Int32, Predicate<Map>) List<Map>.FindLast(Predicate<Map>) List<Map>.FindLastIndex(Predicate<Map>) List<Map>.FindLastIndex(Int32, Predicate<Map>) List<Map>.FindLastIndex(Int32, Int32, Predicate<Map>) List<Map>.ForEach(Action<Map>) List<Map>.GetEnumerator() List<Map>.IEnumerable<Map>.GetEnumerator() List<Map>.IEnumerable.GetEnumerator() List<Map>.GetRange(Int32, Int32) List<Map>.IndexOf(Map) List<Map>.IList.IndexOf(Object) List<Map>.IndexOf(Map, Int32) List<Map>.IndexOf(Map, Int32, Int32) List<Map>.Insert(Int32, Map) List<Map>.IList.Insert(Int32, Object) List<Map>.InsertRange(Int32, IEnumerable<Map>) List<Map>.LastIndexOf(Map) List<Map>.LastIndexOf(Map, Int32) List<Map>.LastIndexOf(Map, Int32, Int32) List<Map>.Remove(Map) List<Map>.IList.Remove(Object) List<Map>.RemoveAll(Predicate<Map>) List<Map>.RemoveAt(Int32) List<Map>.RemoveRange(Int32, Int32) List<Map>.Reverse() List<Map>.Reverse(Int32, Int32) List<Map>.Sort() List<Map>.Sort(IComparer<Map>) List<Map>.Sort(Int32, Int32, IComparer<Map>) List<Map>.Sort(Comparison<Map>) List<Map>.ToArray() List<Map>.TrimExcess() List<Map>.TrueForAll(Predicate<Map>) List<Map>.Capacity List<Map>.Count List<Map>.IList.IsFixedSize List<Map>.ICollection<Map>.IsReadOnly List<Map>.IList.IsReadOnly List<Map>.ICollection.IsSynchronized List<Map>.ICollection.SyncRoot List<Map>.Item[Int32] List<Map>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class ModuleMap : List<Map>, IList<Map>, ICollection<Map>, IList, ICollection, IReadOnlyList<Map>, IReadOnlyCollection<Map>, IEnumerable<Map>, IEnumerable Fields AnyPath Defines the path used to bind to all paths. Declaration public const string AnyPath = \"*\" Field Value Type Description String Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.IList System.Collections.ICollection System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IWebSocketContext.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IWebSocketContext.html",
    "title": "Interface IWebSocketContext | Unosquare EmbedIO",
    "keywords": "Interface IWebSocketContext Interface to create a WebSocket Context. Namespace : Unosquare.Labs.EmbedIO Syntax public interface IWebSocketContext Properties CookieCollection Gets the cookie collection. Declaration ICookieCollection CookieCollection { get; } Property Value Type Description ICookieCollection The cookie collection. RequestUri Gets the request URI. Declaration Uri RequestUri { get; } Property Value Type Description Uri The request URI. WebSocket Gets or sets the web socket. Declaration IWebSocket WebSocket { get; } Property Value Type Description IWebSocket The web socket. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IWebSocket.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IWebSocket.html",
    "title": "Interface IWebSocket | Unosquare EmbedIO",
    "keywords": "Interface IWebSocket Interface to create a WebSocket. Inherited Members IDisposable.Dispose() Namespace : Unosquare.Labs.EmbedIO Syntax public interface IWebSocket : IDisposable Properties State Gets the state. Declaration WebSocketState State { get; } Property Value Type Description WebSocketState The state. Methods CloseAsync(CancellationToken) Closes the asynchronous. Declaration Task CloseAsync(CancellationToken ct = default(CancellationToken)) Parameters Type Name Description CancellationToken ct The cancellation token. Returns Type Description Task The task object representing the asynchronous operation. SendAsync(Byte[], Boolean, CancellationToken) Sends the asynchronous. Declaration Task SendAsync(byte[] buffer, bool isText, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description Byte [] buffer The buffer. Boolean isText if set to true [is text]. CancellationToken ct The cancellation token. Returns Type Description Task A task that represents the asynchronous of send data using websocket. See Also IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.ISessionWebModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.ISessionWebModule.html",
    "title": "Interface ISessionWebModule | Unosquare EmbedIO",
    "keywords": "Interface ISessionWebModule Interface to create session modules. Inherited Members IWebModule.Name IWebModule.Handlers IWebModule.Server IWebModule.IsWatchdogEnabled IWebModule.WatchdogInterval IWebModule.CancellationToken IWebModule.AddHandler(String, HttpVerbs, WebHandler) IWebModule.Start(CancellationToken) IWebModule.RunWatchdog() Namespace : Unosquare.Labs.EmbedIO Syntax public interface ISessionWebModule : IWebModule Properties Expiration Gets or sets the expiration time for the sessions. Declaration TimeSpan Expiration { get; set; } Property Value Type Description TimeSpan The expiration. Sessions The dictionary holding the sessions Direct access is guaranteed to be thread-safe. Declaration IReadOnlyDictionary<string, SessionInfo> Sessions { get; } Property Value Type Description IReadOnlyDictionary < String , SessionInfo > The sessions. Methods DeleteSession(IHttpContext) Delete the session object for the given context If no session exists for the context, then null is returned. Declaration void DeleteSession(IHttpContext context) Parameters Type Name Description IHttpContext context The context. DeleteSession(SessionInfo) Delete a session for the given session info No exceptions are thrown if the session is not found. Declaration void DeleteSession(SessionInfo session) Parameters Type Name Description SessionInfo session The session info. GetSession(IHttpContext) Gets a session object for the given server context. If no session exists for the context, then null is returned. Declaration SessionInfo GetSession(IHttpContext context) Parameters Type Name Description IHttpContext context The context. Returns Type Description SessionInfo A session info for the given server context. GetSession(IWebSocketContext) Gets a session object for the given WebSocket context. If no session exists for the context, then null is returned. Declaration SessionInfo GetSession(IWebSocketContext context) Parameters Type Name Description IWebSocketContext context The context. Returns Type Description SessionInfo A session object for the given WebSocket context. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IHttpResponse.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IHttpResponse.html",
    "title": "Interface IHttpResponse | Unosquare EmbedIO",
    "keywords": "Interface IHttpResponse Interface to create a HTTP Response. Inherited Members IHttpBase.Headers IHttpBase.Cookies IHttpBase.ProtocolVersion Namespace : Unosquare.Labs.EmbedIO Syntax public interface IHttpResponse : IHttpBase Properties ContentEncoding Gets or sets the content encoding. Declaration Encoding ContentEncoding { get; } Property Value Type Description Encoding The content encoding. ContentLength64 Gets or sets the content length64. Declaration long ContentLength64 { get; set; } Property Value Type Description Int64 The content length64. ContentType Gets or sets the type of the content. Declaration string ContentType { get; set; } Property Value Type Description String The type of the content. KeepAlive Gets or sets a value indicating whether [keep alive]. Declaration bool KeepAlive { get; set; } Property Value Type Description Boolean true if [keep alive]; otherwise, false . OutputStream Gets the output stream. Declaration Stream OutputStream { get; } Property Value Type Description Stream The output stream. StatusCode Gets or sets the status code. Declaration int StatusCode { get; set; } Property Value Type Description Int32 The status code. StatusDescription Gets or sets a text description of the HTTP status code. Declaration string StatusDescription { get; set; } Property Value Type Description String The status description. Methods AddHeader(String, String) Adds the header. Declaration void AddHeader(string headerName, string value) Parameters Type Name Description String headerName Name of the header. String value The value. Close() Closes this instance and dispose the resources. Declaration void Close() SetCookie(Net.Cookie) Sets the cookie. Declaration void SetCookie(Net.Cookie sessionCookie) Parameters Type Name Description Net.Cookie sessionCookie The session cookie. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IHttpContext.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IHttpContext.html",
    "title": "Interface IHttpContext | Unosquare EmbedIO",
    "keywords": "Interface IHttpContext Interface to create a HTTP Context. Namespace : Unosquare.Labs.EmbedIO Syntax public interface IHttpContext Properties Request Gets the HTTP Request. Declaration IHttpRequest Request { get; } Property Value Type Description IHttpRequest The request. Response Gets the HTTP Response. Declaration IHttpResponse Response { get; } Property Value Type Description IHttpResponse The response. User Gets the user. Declaration IPrincipal User { get; } Property Value Type Description IPrincipal The user. WebServer Gets or sets the web server. Declaration IWebServer WebServer { get; set; } Property Value Type Description IWebServer The web server. Methods AcceptWebSocketAsync(Int32) Accepts the web socket asynchronous. Declaration Task<IWebSocketContext> AcceptWebSocketAsync(int receiveBufferSize) Parameters Type Name Description Int32 receiveBufferSize Size of the receive buffer. Returns Type Description Task < IWebSocketContext > A IWebSocketContext that represents the WebSocket handshake request. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.IHttpBase.html": {
    "href": "api/Unosquare.Labs.EmbedIO.IHttpBase.html",
    "title": "Interface IHttpBase | Unosquare EmbedIO",
    "keywords": "Interface IHttpBase Interface to create a HTTP Request/Response. Namespace : Unosquare.Labs.EmbedIO Syntax public interface IHttpBase Properties Cookies Gets the cookies. Declaration ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. Headers Gets the headers. Declaration NameValueCollection Headers { get; } Property Value Type Description NameValueCollection The headers. ProtocolVersion Gets or sets the protocol version. Declaration Version ProtocolVersion { get; } Property Value Type Description Version The protocol version. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.HttpResponse.html": {
    "href": "api/Unosquare.Labs.EmbedIO.HttpResponse.html",
    "title": "Class HttpResponse | Unosquare EmbedIO",
    "keywords": "Class HttpResponse Represents a wrapper for HttpListenerContext.Response. Inheritance Object HttpResponse Implements IHttpResponse IHttpBase Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO Syntax public class HttpResponse : IHttpResponse, IHttpBase Constructors HttpResponse(HttpListenerContext) Initializes a new instance of the HttpResponse class. Declaration public HttpResponse(HttpListenerContext context) Parameters Type Name Description HttpListenerContext context The context. Properties ContentEncoding Gets or sets the content encoding. Declaration public Encoding ContentEncoding { get; set; } Property Value Type Description Encoding The content encoding. ContentLength64 Gets or sets the content length64. Declaration public long ContentLength64 { get; set; } Property Value Type Description Int64 The content length64. ContentType Gets or sets the type of the content. Declaration public string ContentType { get; set; } Property Value Type Description String The type of the content. Cookies Gets the cookies. Declaration public ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. Headers Gets the headers. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection The headers. KeepAlive Gets or sets a value indicating whether [keep alive]. Declaration public bool KeepAlive { get; set; } Property Value Type Description Boolean true if [keep alive]; otherwise, false . OutputStream Gets the output stream. Declaration public Stream OutputStream { get; } Property Value Type Description Stream The output stream. ProtocolVersion Gets or sets the protocol version. Declaration public Version ProtocolVersion { get; set; } Property Value Type Description Version The protocol version. StatusCode Gets or sets the status code. Declaration public int StatusCode { get; set; } Property Value Type Description Int32 The status code. StatusDescription Gets or sets a text description of the HTTP status code. Declaration public string StatusDescription { get; set; } Property Value Type Description String The status description. Methods AddHeader(String, String) Adds the header. Declaration public void AddHeader(string headerName, string value) Parameters Type Name Description String headerName Name of the header. String value The value. Close() Closes this instance and dispose the resources. Declaration public void Close() SetCookie(Cookie) Declaration public void SetCookie(Cookie sessionCookie) Parameters Type Name Description Cookie sessionCookie Implements IHttpResponse IHttpBase See Also IHttpResponse Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.EmbedIO.HttpListenerMode.html": {
    "href": "api/Unosquare.Labs.EmbedIO.HttpListenerMode.html",
    "title": "Enum HttpListenerMode | Unosquare EmbedIO",
    "keywords": "Enum HttpListenerMode Enums all the HTTP listener available. Namespace : Unosquare.Labs.EmbedIO Syntax public enum HttpListenerMode Fields Name Description EmbedIO The EmbedIO mode Microsoft The Microsoft mode Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "wiki/_Sidebar.html": {
    "href": "wiki/_Sidebar.html",
    "title": "| Unosquare EmbedIO",
    "keywords": "Home Cookbook Self-signed Certified"
  },
  "wiki/Self-signed-certified-(Windows).html": {
    "href": "wiki/Self-signed-certified-(Windows).html",
    "title": "Running EmbedIO | Unosquare EmbedIO",
    "keywords": "Running EmbedIO First, create the self-signed certified Powershell (as Admin): $date_now = Get-Date $extended_date = $date_now.AddYears(3) $cert = New-SelfSignedCertificate -certstorelocation cert:\\localmachine\\my -dnsname unosquare.io -notafter $extended_date Add the certified to the desire port (as Admin): netsh http add sslcert ipport=0.0.0.0:7876 certhash=767b9a3ad23a0cfc597df8be23d58984503c7ad8 appid={adaa04bb-8b63-4073-a12f-d6f8c0b4383f}"
  },
  "wiki/Cookbook.html": {
    "href": "wiki/Cookbook.html",
    "title": "How to receive a Multi-part request | Unosquare EmbedIO",
    "keywords": "How to receive a Multi-part request You can receive multi-part request if you include this static method (from http://stackoverflow.com/questions/7460088/reading-file-input-from-a-multipart-form-data-post ): private static async Task ParseFiles(Stream data, string contentType, Action<string, Stream> fileProcessor) { var streamContent = new StreamContent(data); streamContent.Headers.ContentType = MediaTypeHeaderValue.Parse(contentType); var provider = await streamContent.ReadAsMultipartAsync(); foreach (var httpContent in provider.Contents) { var fileName = httpContent.Headers.ContentDisposition.FileName; if (string.IsNullOrWhiteSpace(fileName)) { continue; } using (var fileContents = await httpContent.ReadAsStreamAsync()) { fileProcessor(fileName.Replace(\"\\\"\", \"\"), fileContents); } } } You need to include WebApi Client Nuget . Also you can check the HttpMultipartParser Nuget and connect the Request input directly to the HttpMultipartParser, very helpful and small. How to turn off logging EmbedIO uses SWAN 's Terminal to display all messages. You can disable them or change the verbosity by modifying the Terminal settings. Terminal.Settings.DisplayLoggingMessageType = LogMessageType.None;"
  },
  "README.html": {
    "href": "README.html",
    "title": "Overview | Unosquare EmbedIO",
    "keywords": "⭐ Please star this project if you find it useful! This README is for EmbedIO v2.x. Click here if you are using EmbedIO v1.x. Overview EmbedIO 2.0 - What's new Some usage scenarios Installation Examples Basic Example Fluent Example REST API Example WebSockets Example Support for SSL Related Projects and Nugets Special Thanks Overview A tiny, cross-platform, module based, MIT-licensed web server for .NET Framework and .NET Core. Written entirely in C#, using our helpful library SWAN Network operations use the async/await pattern: Responses are handled asynchronously Multiple implementations support: EmbedIO can use Microsoft HttpListener or internal Http Listener based on Mono / websocket-sharp projects Cross-platform: tested on multiple OS and runtimes. From Windows .NET Framework to Linux MONO. Extensible: Write your own modules -- For example, video streaming, UPnP, etc. Check out EmbedIO Extras for additional modules Small memory footprint Create REST APIs quickly with the out-of-the-box Web API module Serve static or embedded files with 1 line of code (also out-of-the-box) Handle sessions with the built-in LocalSessionWebModule WebSockets support CORS support. Origin, Header and Method validation with OPTIONS preflight Supports HTTP 206 Partial Content Support Xamarin Forms And many more options in the same package Some notes regarding WebSocket and runtimes support: Runtime HTTP implementation WebSocket support Notes NET452 Unosquare and Microsoft Yes Support Win7+ OS, Linux and macOS. NET472 Unosquare and Microsoft Yes Support Win8+ OS. NETSTANDARD13 Unosquare Yes Support Windows, Linux and macOS using native System.Net library NETSTANDARD20 Unosquare and Microsoft Yes Support Windows, Linux and macOS using native System.Net library UAP Unosquare No Support Windows Universal Platform until version 2.1.1. EmbedIO 2.0 - What's new Breaking changes WebApiController is renewed. Reduce the methods overhead removing the WebServer and Context arguments. See examples below. RoutingStrategy.Regex is the default routing scheme. Additional changes IHttpListener is runtime/platform independent, you can choose Unosquare HttpListener implementation with NET472 or NETSTANDARD20. This separation of implementations brings new access to interfaces from common Http objects like IHttpRequest , IHttpContext and more. IWebServer is a new interface to create custom web server implementation, like a Test Web Server where all the operations are in-memory to speed up unit testing. Similar to TestServer from OWIN General improvements in how the Unosquare HttpListner is working and code clean-up. Note - We encourage to upgrade to the newest EmbedIO version. Branch version 1.X will no longer be maintained, and issues will be tested against 2.X and resolved just there. Some usage scenarios: Write a cross-platform GUI entirely using React/AngularJS/Vue.js or any Javascript framework Write a game using Babylon.js and make EmbedIO your serve your code and assets Create GUIs for Windows services or Linux daemons Works well with LiteLib - add SQLite support in minutes! Write client applications with real-time communication between them using WebSockets Write internal web server for Xamarin Forms applications Installation: You can start using EmbedIO by just downloading the nuget. Package Manager PM> Install-Package EmbedIO .NET CLI > dotnet add package EmbedIO Examples Basic Example Please note the comments are the important part here. More info is available in the samples. namespace Unosquare { using System; using Unosquare.Labs.EmbedIO; using Unosquare.Labs.EmbedIO.Modules; class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> static void Main(string[] args) { var url = \"http://localhost:9696/\"; if (args.Length > 0) url = args[0]; // Our web server is disposable. using (var server = new WebServer(url)) { // First, we will configure our web server by adding Modules. // Please note that order DOES matter. // ================================================================================================ // If we want to enable sessions, we simply register the LocalSessionModule // Beware that this is an in-memory session storage mechanism so, avoid storing very large objects. // You can use the server.GetSession() method to get the SessionInfo object and manupulate it. // You could potentially implement a distributed session module using something like Redis server.WithLocalSession(); // Here we setup serving of static files server.RegisterModule(new StaticFilesModule(\"c:/web\")); // The static files module will cache small files in ram until it detects they have been modified. server.Module<StaticFilesModule>().UseRamCache = true; // Once we've registered our modules and configured them, we call the RunAsync() method. server.RunAsync(); // Fire up the browser to show the content if we are debugging! #if DEBUG var browser = new System.Diagnostics.Process() { StartInfo = new System.Diagnostics.ProcessStartInfo(url) { UseShellExecute = true } }; browser.Start(); #endif // Wait for any key to be pressed before disposing of our web server. // In a service, we'd manage the lifecycle of our web server using // something like a BackgroundWorker or a ManualResetEvent. Console.ReadKey(true); } } } } Fluent Example Many extension methods are available. This allows you to create a web server instance in a fluent style by dotting in configuration options. namespace Unosquare { using System; using Unosquare.Labs.EmbedIO; internal class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> private static void Main(string[] args) { var url = \"http://localhost:9696/\"; if (args.Length > 0) url = args[0]; // Create Webserver and attach LocalSession and Static // files module and CORS enabled var server = WebServer .Create(url) .EnableCors() .WithLocalSession() .WithStaticFolderAt(\"c:/web\"); var cts = new CancellationTokenSource(); var task = server.RunAsync(cts.Token); Console.ReadKey(true); cts.Cancel(); // Wait before dispose server task.Wait(); server.Dispose(); } } } REST API Example The WebApi module supports two routing strategies: Wildcard and Regex. By default, the WebApi module will use the Regex Routing Strategy trying to match and resolve the values from a route template, in a similar fashion to Microsoft's Web API. A method with the following route /api/people/{id} is going to match any request URL with three segments: the first two api and people and the last one is going to be parsed or converted to the type in the id argument of the handling method signature. Please read on if this was confusing as it is much simpler than it sounds. Additionally, you can put multiple values to match, for example /api/people/{mainSkill}/{age} , and receive the parsed values from the URL straight into the arguments of your handler method. During server setup: var server = new WebServer(\"http://localhost:9696/\", RoutingStrategy.Regex); server.RegisterModule(new WebApiModule()); server.Module<WebApiModule>().RegisterController<PeopleController>(); And our controller class (using default Regex Strategy) looks like: public class PeopleController : WebApiController { public PeopleController(IHttpContext context) : base(context) { } [WebApiHandler(HttpVerbs.Get, \"/api/people/{id}\")] public bool GetPeople(int id) { try { if (People.Any(p => p.Key == id)) { return this.JsonResponse(People.FirstOrDefault(p => p.Key == id)); } } catch (Exception ex) { return this.JsonExceptionResponse(ex); } } // You can override the default headers and add custom headers to each API Response. public override void SetDefaultHeaders() => this.NoCache(); } The previous default strategy (Wildcard) matches routes using the asterisk * character in the route. For example: The route /api/people/* will match any request with a URL starting with the two first URL segments api and people and ending with anything. The route /api/people/hello will be matched. You can also use wildcards in the middle of the route. The route /api/people/*/details will match requests starting with the two first URL segments api and people , and end with a details segment. The route /api/people/hello/details will be matched. During server setup: var server = new WebServer(\"http://localhost:9696/\", RoutingStrategy.Regex); server.RegisterModule(new WebApiModule()); server.Module<WebApiModule>().RegisterController<PeopleController>(); public class PeopleController : WebApiController { public PeopleController(IHttpContext context) : base(context) { } [WebApiHandler(HttpVerbs.Get, \"/api/people/*\")] public bool GetPeople() { try { var lastSegment = this.Request.Url.Segments.Last(); if (lastSegment.EndsWith(\"/\")) return this.JsonResponse(People); int key = 0; if (int.TryParse(lastSegment, out key) && People.Any(p => p.Key == key)) { return this.JsonResponse(People.FirstOrDefault(p => p.Key == key)); } throw new KeyNotFoundException(\"Key Not Found: \" + lastSegment); } catch (Exception ex) { return this.JsonExceptionResponse(ex); } } } The SetDefaultHeaders method will add a no-cache policy to all Web API responses. If you plan to handle a differente policy or even custom headers to each different Web API method we recommend you override this method as you need. WebSockets Example During server setup: server.RegisterModule(new WebSocketsModule()); server.Module<WebSocketsModule>().RegisterWebSocketsServer<WebSocketsChatServer>(\"/chat\"); And our web sockets server class looks like: /// <summary> /// Defines a very simple chat server /// </summary> public class WebSocketsChatServer : WebSocketsServer { public WebSocketsChatServer() : base(true) { // placeholder } public override string ServerName => \"Chat Server\" protected override void OnMessageReceived(IWebSocketContext context, byte[] rxBuffer, IWebSocketReceiveResult rxResult) { var session = this.WebServer.GetSession(context); foreach (var ws in this.WebSockets) { if (ws != context) this.Send(ws, rxBuffer.ToText()); } } protected override void OnClientConnected( IWebSocketContext context, System.Net.IPEndPoint localEndPoint, System.Net.IPEndPoint remoteEndPoint) { this.Send(context, \"Welcome to the chat room!\"); foreach (var ws in this.WebSockets) { if (ws != context) this.Send(ws, \"Someone joined the chat room.\"); } } protected override void OnFrameReceived(IWebSocketContext context, byte[] rxBuffer, IWebSocketReceiveResult rxResult) { // placeholder } protected override void OnClientDisconnected(IWebSocketContext context) { this.Broadcast(\"Someone left the chat room.\"); } } Support for SSL Both HTTP listeners (Microsoft and Unosquare) can open a web server using SSL. This support is for Windows only (for now) and you need to manually register your certificate or use the WebServerOptions class to initialize a new WebServer instance. This section will provide some examples of how to use SSL but first a brief explanation of how SSL works on Windows. For Windows Vista or better, Microsoft provides Network Shell ( netsh ). This command line tool allows to map an IP-port to a certificate, so incoming HTTP request can upgrade the connection to a secure stream using the provided certificate. EmbedIO can read or register certificates to a default store (My/LocalMachine) and use them against a netsh sslcert for binding the first https prefix registered. For Windows XP and Mono, you can use manually the httpcfg for registering the binding. Using a PFX file and AutoRegister option The more practical case to use EmbedIO with SSL is the AutoRegister option. You need to create a WebServerOptions instance with the path to a PFX file and the AutoRegister flag on. This options will try to get or register the certificate to the default certificate store. Then it will use the certificate thumbprint to register with netsh the FIRST https prefix registered on the options. Using AutoLoad option If you already have a certificate on the default certificate store and the binding is also registered in netsh , you can use Autoload flag and optionally provide a certificate thumbprint. If the certificate thumbprint is not provided, EmbedIO will read the data from netsh . After getting successfully the certificate from the store, the raw data is passed to the WebServer. Related Projects and Nugets Name Author Description Butterfly.EmbedIO Fireshark Studios, LLC Implementation of Butterfly.Core.Channel and Butterfly.Core.WebApi using the EmbedIO server embedio-cli Unosquare A dotnet global tool that enables start any web folder or EmbedIO assembly (WebAPI or WebSocket) from command line. EmbedIO.BearerToken Unosquare Allow to authenticate with a Bearer Token. It uses a Token endpoint (at /token path) and with a defined validation delegate create a JsonWebToken. The module can check all incoming requests or a paths EmbedIO.LiteLibWebApi Unosquare Allow to expose a sqlite database as REST api using EmbedIO WebApi and LiteLib libraries EmbedIO.OWIN Unosquare EmbedIO can use the OWIN platform in two different approach: You can use EmbedIO as OWIN server and use all OWIN framework with EmbedIO modules. Microsoft.AspNetCore.Server.EmbedIO Dju EmbedIO web server support for ASP.NET Core, as a drop-in replacement for Kestrel Special Thanks To YourKit for supports open source projects with its full-featured .NET Profiler , an amazing tool to profile CPU and Memory!"
  },
  "CODE_OF_CONDUCT.html": {
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct | Unosquare EmbedIO",
    "keywords": "Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at geovanni.perez@gmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4"
  },
  "wiki/Home.html": {
    "href": "wiki/Home.html",
    "title": "Samples and Gists | Unosquare EmbedIO",
    "keywords": "A tiny, cross-platform, module based, MIT-licensed web server. Check EmbedIO web site Samples and Gists itodorovic's Windows Forms minimal threading example"
  }
}