{
  "api/EmbedIO.Routing.RouteResolutionResult.html": {
    "href": "api/EmbedIO.Routing.RouteResolutionResult.html",
    "title": "Enum RouteResolutionResult | Unosquare EmbedIO",
    "keywords": "Enum RouteResolutionResult Represents the outcome of resolving a context and a path against a route. Namespace : EmbedIO.Routing Syntax public enum RouteResolutionResult Fields Name Description NoHandlerSelected The route did match, but no registered handler was suitable for the context. NoHandlerSuccessful The route matched and one or more suitable handlers were found, but none of them returned true . RouteNotMatched The route didn't match. Success The route has been resolved. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RouteMatcher.html": {
    "href": "api/EmbedIO.Routing.RouteMatcher.html",
    "title": "Class RouteMatcher | Unosquare EmbedIO",
    "keywords": "Class RouteMatcher Matches URL paths against a route. Inheritance Object RouteMatcher Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Routing Syntax public sealed class RouteMatcher Properties ParameterNames Gets the names of the route's parameters. Declaration public IReadOnlyList<string> ParameterNames { get; } Property Value Type Description IReadOnlyList < String > Route Gets the route this instance matches URL paths against. Declaration public string Route { get; } Property Value Type Description String Methods ClearCache() Clears RouteMatcher 's internal instance cache. Declaration public static void ClearCache() See Also Parse(String) TryParse(String, out RouteMatcher) Match(String) Matches the specified URL path against Route and extracts values for the route's parameters. Declaration public RouteMatch Match(string path) Parameters Type Name Description String path The URL path to match. Returns Type Description RouteMatch If the match is successful, a RouteMatch object; otherwise, null . Parse(String) Constructs an instance of RouteMatcher by parsing the specified route. If the same route was previously parsed and the ClearCache() method has not been called since, this method obtains an instance from a static cache. Declaration public static RouteMatcher Parse(string route) Parameters Type Name Description String route The route to parse. Returns Type Description RouteMatcher A newly-constructed instance of RouteMatcher that will match URL paths against route . See Also TryParse(String, out RouteMatcher) ClearCache() TryParse(String, out RouteMatcher) Attempts to obtain an instance of RouteMatcher by parsing the specified route. If the same route was previously parsed and the ClearCache() method has not been called since, this method obtains an instance from a static cache. Declaration public static bool TryParse(string route, out RouteMatcher result) Parameters Type Name Description String route The route to parse. RouteMatcher result When this method returns true , a newly-constructed instance of RouteMatcher that will match URL paths against route ; otherwise, null . This parameter is passed uninitialized. Returns Type Description Boolean true if parsing was successful; otherwise, false . See Also Parse(String) ClearCache() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RouteMatch.html": {
    "href": "api/EmbedIO.Routing.RouteMatch.html",
    "title": "Class RouteMatch | Unosquare EmbedIO",
    "keywords": "Class RouteMatch Represents a route resolved by a RouteResolverBase<TContext, TData> . This class may be used both as a dictionary of route parameter names and values, and a list of the values. Because of its double nature, this class cannot be enumerated directly. However, you may use the Pairs property to iterate over name / value pairs, and the Values property to iterate over values. When enumerated in a non-generic fashion via the interface, this class iterates over name / value pairs. Inheritance Object RouteMatch Implements IReadOnlyDictionary < String , String > Namespace : EmbedIO.Routing Syntax public sealed class RouteMatch : IReadOnlyList<string>, IReadOnlyDictionary<string, string> Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public string this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description String Item[String] Declaration public string this[string key] { get; } Parameters Type Name Description String key Property Value Type Description String Keys Declaration public IEnumerable<string> Keys { get; } Property Value Type Description IEnumerable < String > Names Gets a list of the names of the route's parameters. Declaration public IReadOnlyList<string> Names { get; } Property Value Type Description IReadOnlyList < String > Pairs Gets an interface that can be used to iterate over name / value pairs. Declaration public IEnumerable<KeyValuePair<string, string>> Pairs { get; } Property Value Type Description IEnumerable < KeyValuePair < String , String >> Path Gets the URL path that was successfully matched against the route. Declaration public string Path { get; } Property Value Type Description String Values Declaration public IEnumerable<string> Values { get; } Property Value Type Description IEnumerable < String > Methods ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean IndexOf(String) Returns the index of the parameter with the specified name. Declaration public int IndexOf(string name) Parameters Type Name Description String name The parameter name. Returns Type Description Int32 The index of the parameter, or -1 if none of the route parameters have the specified name. TryGetValue(String, out String) Declaration public bool TryGetValue(string key, out string value) Parameters Type Name Description String key String value Returns Type Description Boolean Implements IReadOnlyDictionary<, > Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.IHttpMessage.html": {
    "href": "api/EmbedIO.IHttpMessage.html",
    "title": "Interface IHttpMessage | Unosquare EmbedIO",
    "keywords": "Interface IHttpMessage Represents a HTTP request or response. Namespace : EmbedIO Syntax public interface IHttpMessage Properties Cookies Gets the cookies. Declaration ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. ProtocolVersion Gets or sets the protocol version. Declaration Version ProtocolVersion { get; } Property Value Type Description Version The protocol version. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.IHttpListener.html": {
    "href": "api/EmbedIO.IHttpListener.html",
    "title": "Interface IHttpListener | Unosquare EmbedIO",
    "keywords": "Interface IHttpListener Interface to create a HTTP Listener. Namespace : EmbedIO Syntax public interface IHttpListener : IDisposable Properties IgnoreWriteExceptions Gets or sets a value indicating whether the listener should ignore write exceptions. Declaration bool IgnoreWriteExceptions { get; set; } Property Value Type Description Boolean true if [ignore write exceptions]; otherwise, false . IsListening Gets a value indicating whether this instance is listening. Declaration bool IsListening { get; } Property Value Type Description Boolean true if this instance is listening; otherwise, false . Name Gets or sets the name. Declaration string Name { get; } Property Value Type Description String The name. Prefixes Gets the prefixes. Declaration List<string> Prefixes { get; } Property Value Type Description List < String > The prefixes. Methods AddPrefix(String) Adds the prefix. Declaration void AddPrefix(string urlPrefix) Parameters Type Name Description String urlPrefix The URL prefix. GetContextAsync(CancellationToken) Gets the HTTP context asynchronous. Declaration Task<IHttpContextImpl> GetContextAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IHttpContextImpl > A task that represents the time delay for the HTTP Context. Start() Starts this listener. Declaration void Start() Stop() Stops this listener. Declaration void Stop() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.ICookieCollection.html": {
    "href": "api/EmbedIO.ICookieCollection.html",
    "title": "Interface ICookieCollection | Unosquare EmbedIO",
    "keywords": "Interface ICookieCollection Interface for Cookie Collection. Namespace : EmbedIO Syntax public interface ICookieCollection : IEnumerable<Cookie>, ICollection Properties Item[String] Gets the with the specified name. Declaration Cookie this[string name] { get; } Parameters Type Name Description String name The name. Property Value Type Description Cookie The . Methods Add(Cookie) Adds the specified cookie. Declaration void Add(Cookie cookie) Parameters Type Name Description Cookie cookie The cookie. Contains(Cookie) Determines whether this ICookieCollection contains the specified . Declaration bool Contains(Cookie cookie) Parameters Type Name Description Cookie cookie The cookie to find in the ICookieCollection . Returns Type Description Boolean true if this ICookieCollection contains the specified cookie ; otherwise, false . CopyTo(Cookie[], Int32) Copies the elements of this ICookieCollection to a array starting at the specified index of the target array. Declaration void CopyTo(Cookie[] array, int index) Parameters Type Name Description Cookie [] array The target array to which the ICookieCollection will be copied. Int32 index The zero-based index in the target array where copying begins. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.HttpVerbs.html": {
    "href": "api/EmbedIO.HttpVerbs.html",
    "title": "Enum HttpVerbs | Unosquare EmbedIO",
    "keywords": "Enum HttpVerbs Enumerates the different HTTP Verbs. Namespace : EmbedIO Syntax public enum HttpVerbs Fields Name Description Any Wildcard Method Delete DELETE Method Get GET Method Head HEAD method Options OPTIONS method Patch PATCH method Post POST method Put PUT method Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.HttpRequestExtensions.html": {
    "href": "api/EmbedIO.HttpRequestExtensions.html",
    "title": "Class HttpRequestExtensions | Unosquare EmbedIO",
    "keywords": "Class HttpRequestExtensions Provides extension methods for types implementing IHttpRequest . Inheritance Object HttpRequestExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class HttpRequestExtensions Methods SafeGetRemoteEndpointStr(IHttpRequest) Returns a string representing the remote IP address and port of an IHttpRequest interface. This method can be called even on a null interface, or one that has no remote end point, or no remote address; it will always return a non- null , non-empty string. Declaration public static string SafeGetRemoteEndpointStr(this IHttpRequest this) Parameters Type Name Description IHttpRequest this The IHttpRequest on which this method is called. Returns Type Description String If this is null , or its RemoteEndPoint is null , the string \"<null> ; otherwise, the remote end point's Address (or the string \"<???>\" if it is null ) followed by a colon and the Port number. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.HttpListenerMode.html": {
    "href": "api/EmbedIO.HttpListenerMode.html",
    "title": "Enum HttpListenerMode | Unosquare EmbedIO",
    "keywords": "Enum HttpListenerMode Enums all the HTTP listener available. Namespace : EmbedIO Syntax public enum HttpListenerMode Fields Name Description EmbedIO The EmbedIO mode Microsoft The Microsoft mode Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.HttpHeaderNames.html": {
    "href": "api/EmbedIO.HttpHeaderNames.html",
    "title": "Class HttpHeaderNames | Unosquare EmbedIO",
    "keywords": "Class HttpHeaderNames Exposes known HTTP header names. Inheritance Object HttpHeaderNames Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class HttpHeaderNames Remarks The constants in this class have been extracted from a list of known HTTP header names. The presence of a header name in this class is not a guarantee that EmbedIO supports, or even recognizes, it. Refer to the documentation for each module for information about supported headers. Fields Accept The Accept HTTP header. Declaration public const string Accept = \"Accept\" Field Value Type Description String AcceptCharset The Accept-Charset HTTP header. Declaration public const string AcceptCharset = \"Accept-Charset\" Field Value Type Description String AcceptEncoding The Accept-Encoding HTTP header. Declaration public const string AcceptEncoding = \"Accept-Encoding\" Field Value Type Description String AcceptLanguage The Accept-Language HTTP header. Declaration public const string AcceptLanguage = \"Accept-Language\" Field Value Type Description String AcceptPatch The Accept-Patch HTTP header. Declaration public const string AcceptPatch = \"Accept-Patch\" Field Value Type Description String AcceptRanges The Accept-Ranges HTTP header. Declaration public const string AcceptRanges = \"Accept-Ranges\" Field Value Type Description String AccessControlAllowCredentials The Access-Control-Allow-Credentials HTTP header. Declaration public const string AccessControlAllowCredentials = \"Access-Control-Allow-Credentials\" Field Value Type Description String AccessControlAllowHeaders The Access-Control-Allow-Headers HTTP header. Declaration public const string AccessControlAllowHeaders = \"Access-Control-Allow-Headers\" Field Value Type Description String AccessControlAllowMethods The Access-Control-Allow-Methods HTTP header. Declaration public const string AccessControlAllowMethods = \"Access-Control-Allow-Methods\" Field Value Type Description String AccessControlAllowOrigin The Access-Control-Allow-Origin HTTP header. Declaration public const string AccessControlAllowOrigin = \"Access-Control-Allow-Origin\" Field Value Type Description String AccessControlExposeHeaders The Access-Control-Expose-Headers HTTP header. Declaration public const string AccessControlExposeHeaders = \"Access-Control-Expose-Headers\" Field Value Type Description String AccessControlMaxAge The Access-Control-Max-Age HTTP header. Declaration public const string AccessControlMaxAge = \"Access-Control-Max-Age\" Field Value Type Description String AccessControlRequestHeaders The Access-Control-Request-Headers HTTP header. Declaration public const string AccessControlRequestHeaders = \"Access-Control-Request-Headers\" Field Value Type Description String AccessControlRequestMethod The Access-Control-Request-Method HTTP header. Declaration public const string AccessControlRequestMethod = \"Access-Control-Request-Method\" Field Value Type Description String Age The Age HTTP header. Declaration public const string Age = \"Age\" Field Value Type Description String Allow The Allow HTTP header. Declaration public const string Allow = \"Allow\" Field Value Type Description String AltSvc The Alt-Svc HTTP header. Declaration public const string AltSvc = \"Alt-Svc\" Field Value Type Description String Authorization The Authorization HTTP header. Declaration public const string Authorization = \"Authorization\" Field Value Type Description String CacheControl The Cache-Control HTTP header. Declaration public const string CacheControl = \"Cache-Control\" Field Value Type Description String Connection The Connection HTTP header. Declaration public const string Connection = \"Connection\" Field Value Type Description String ContentDisposition The Content-Disposition HTTP header. Declaration public const string ContentDisposition = \"Content-Disposition\" Field Value Type Description String ContentEncoding The Content-Encoding HTTP header. Declaration public const string ContentEncoding = \"Content-Encoding\" Field Value Type Description String ContentLanguage The Content-Language HTTP header. Declaration public const string ContentLanguage = \"Content-Language\" Field Value Type Description String ContentLength The Content-Length HTTP header. Declaration public const string ContentLength = \"Content-Length\" Field Value Type Description String ContentLocation The Content-Location HTTP header. Declaration public const string ContentLocation = \"Content-Location\" Field Value Type Description String ContentMD5 The Content-MD5 HTTP header. Declaration public const string ContentMD5 = \"Content-MD5\" Field Value Type Description String ContentRange The Content-Range HTTP header. Declaration public const string ContentRange = \"Content-Range\" Field Value Type Description String ContentSecurityPolicy The Content-Security-Policy HTTP header. Declaration public const string ContentSecurityPolicy = \"Content-Security-Policy\" Field Value Type Description String ContentType The Content-Type HTTP header. Declaration public const string ContentType = \"Content-Type\" Field Value Type Description String Cookie The Cookie HTTP header. Declaration public const string Cookie = \"Cookie\" Field Value Type Description String Cookie2 The Cookie2 HTTP header. Declaration public const string Cookie2 = \"Cookie2\" Field Value Type Description String Date The Date HTTP header. Declaration public const string Date = \"Date\" Field Value Type Description String ETag The ETag HTTP header. Declaration public const string ETag = \"ETag\" Field Value Type Description String Expect The Expect HTTP header. Declaration public const string Expect = \"Expect\" Field Value Type Description String Expires The Expires HTTP header. Declaration public const string Expires = \"Expires\" Field Value Type Description String From The From HTTP header. Declaration public const string From = \"From\" Field Value Type Description String Host The Host HTTP header. Declaration public const string Host = \"Host\" Field Value Type Description String IfMatch The If-Match HTTP header. Declaration public const string IfMatch = \"If-Match\" Field Value Type Description String IfModifiedSince The If-Modified-Since HTTP header. Declaration public const string IfModifiedSince = \"If-Modified-Since\" Field Value Type Description String IfNoneMatch The If-None-Match HTTP header. Declaration public const string IfNoneMatch = \"If-None-Match\" Field Value Type Description String IfRange The If-Range HTTP header. Declaration public const string IfRange = \"If-Range\" Field Value Type Description String IfUnmodifiedSince The If-Unmodified-Since HTTP header. Declaration public const string IfUnmodifiedSince = \"If-Unmodified-Since\" Field Value Type Description String KeepAlive The Keep-Alive HTTP header. Declaration public const string KeepAlive = \"Keep-Alive\" Field Value Type Description String LastModified The Last-Modified HTTP header. Declaration public const string LastModified = \"Last-Modified\" Field Value Type Description String Link The Link HTTP header. Declaration public const string Link = \"Link\" Field Value Type Description String Location The Location HTTP header. Declaration public const string Location = \"Location\" Field Value Type Description String MaxForwards The Max-Forwards HTTP header. Declaration public const string MaxForwards = \"Max-Forwards\" Field Value Type Description String Origin The Origin HTTP header. Declaration public const string Origin = \"Origin\" Field Value Type Description String P3P The P3P HTTP header. Declaration public const string P3P = \"P3P\" Field Value Type Description String Pragma The Pragma HTTP header. Declaration public const string Pragma = \"Pragma\" Field Value Type Description String ProxyAuthenticate The Proxy-Authenticate HTTP header. Declaration public const string ProxyAuthenticate = \"Proxy-Authenticate\" Field Value Type Description String ProxyAuthorization The Proxy-Authorization HTTP header. Declaration public const string ProxyAuthorization = \"Proxy-Authorization\" Field Value Type Description String ProxyConnection The Proxy-Connection HTTP header. Declaration public const string ProxyConnection = \"Proxy-Connection\" Field Value Type Description String PublicKeyPins The Public-Key-Pins HTTP header. Declaration public const string PublicKeyPins = \"Public-Key-Pins\" Field Value Type Description String Range The Range HTTP header. Declaration public const string Range = \"Range\" Field Value Type Description String Referer The Referer HTTP header. Declaration public const string Referer = \"Referer\" Field Value Type Description String Remarks The incorrect spelling (\"Referer\" instead of \"Referrer\") is intentional and has historical reasons. See the \"Etimology\" section of the Wikipedia article on this header for more information. RetryAfter The Retry-After HTTP header. Declaration public const string RetryAfter = \"Retry-After\" Field Value Type Description String SecWebSocketAccept The Sec-SystemWebSocket-Accept HTTP header. Declaration public const string SecWebSocketAccept = \"Sec-SystemWebSocket-Accept\" Field Value Type Description String SecWebSocketExtensions The Sec-SystemWebSocket-Extensions HTTP header. Declaration public const string SecWebSocketExtensions = \"Sec-SystemWebSocket-Extensions\" Field Value Type Description String SecWebSocketKey The Sec-SystemWebSocket-Key HTTP header. Declaration public const string SecWebSocketKey = \"Sec-SystemWebSocket-Key\" Field Value Type Description String SecWebSocketProtocol The Sec-SystemWebSocket-Protocol HTTP header. Declaration public const string SecWebSocketProtocol = \"Sec-SystemWebSocket-Protocol\" Field Value Type Description String SecWebSocketVersion The Sec-SystemWebSocket-Version HTTP header. Declaration public const string SecWebSocketVersion = \"Sec-SystemWebSocket-Version\" Field Value Type Description String Server The Server HTTP header. Declaration public const string Server = \"Server\" Field Value Type Description String SetCookie The Set-Cookie HTTP header. Declaration public const string SetCookie = \"Set-Cookie\" Field Value Type Description String SetCookie2 The Set-Cookie2 HTTP header. Declaration public const string SetCookie2 = \"Set-Cookie2\" Field Value Type Description String StrictTransportSecurity The Strict-Transport-Security HTTP header. Declaration public const string StrictTransportSecurity = \"Strict-Transport-Security\" Field Value Type Description String TE The TE HTTP header. Declaration public const string TE = \"TE\" Field Value Type Description String Trailer The Trailer HTTP header. Declaration public const string Trailer = \"Trailer\" Field Value Type Description String TransferEncoding The Transfer-Encoding HTTP header. Declaration public const string TransferEncoding = \"Transfer-Encoding\" Field Value Type Description String TSV The TSV HTTP header. Declaration public const string TSV = \"TSV\" Field Value Type Description String Upgrade The Upgrade HTTP header. Declaration public const string Upgrade = \"Upgrade\" Field Value Type Description String UpgradeInsecureRequests The Upgrade-Insecure-Requests HTTP header. Declaration public const string UpgradeInsecureRequests = \"Upgrade-Insecure-Requests\" Field Value Type Description String UserAgent The User-Agent HTTP header. Declaration public const string UserAgent = \"User-Agent\" Field Value Type Description String Vary The Vary HTTP header. Declaration public const string Vary = \"Vary\" Field Value Type Description String Via The Via HTTP header. Declaration public const string Via = \"Via\" Field Value Type Description String Warning The Warning HTTP header. Declaration public const string Warning = \"Warning\" Field Value Type Description String WWWAuthenticate The WWW-Authenticate HTTP header. Declaration public const string WWWAuthenticate = \"WWW-Authenticate\" Field Value Type Description String XAspNetVersion The X-AspNet-Version HTTP header. Declaration public const string XAspNetVersion = \"X-AspNet-Version\" Field Value Type Description String XContentDuration The X-Content-Duration HTTP header. Declaration public const string XContentDuration = \"X-Content-Duration\" Field Value Type Description String XContentTypeOptions The X-Content-Type-Options HTTP header. Declaration public const string XContentTypeOptions = \"X-Content-Type-Options\" Field Value Type Description String XFrameOptions The X-Frame-Options HTTP header. Declaration public const string XFrameOptions = \"X-Frame-Options\" Field Value Type Description String XMSEdgeRef The X-MSEdge-Ref HTTP header. Declaration public const string XMSEdgeRef = \"X-MSEdge-Ref\" Field Value Type Description String XPoweredBy The X-Powered-By HTTP header. Declaration public const string XPoweredBy = \"X-Powered-By\" Field Value Type Description String XRequestID The X-Request-ID HTTP header. Declaration public const string XRequestID = \"X-Request-ID\" Field Value Type Description String XUACompatible The X-UA-Compatible HTTP header. Declaration public const string XUACompatible = \"X-UA-Compatible\" Field Value Type Description String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.HttpContextExtensions.html": {
    "href": "api/EmbedIO.HttpContextExtensions.html",
    "title": "Class HttpContextExtensions | Unosquare EmbedIO",
    "keywords": "Class HttpContextExtensions Provides extension methods for types implementing IHttpContext . Inheritance Object HttpContextExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class HttpContextExtensions Methods GetItem<T>(IHttpContext, Object) Gets the item associated with the specified key. Declaration public static T GetItem<T>(this IHttpContext this, object key) Parameters Type Name Description IHttpContext this The IHttpContext on which this method is called. Object key The key whose value to get from the Items dictionary. Returns Type Description T The item associated with the specified key, if the key is found in Items and the associated value is of type T ; otherwise, the default value for T . Type Parameters Name Description T The desired type of the item. Redirect(IHttpContext, String, Int32) Sets a redirection status code and adds a Location header to the response. Declaration public static void Redirect(this IHttpContext this, string location, int statusCode = default(int)) Parameters Type Name Description IHttpContext this The IHttpContext interface on which this method is called. String location The URL to which the user agent should be redirected. Int32 statusCode The status code to set on the response. StandardHtmlResponseAsync(IHttpContext, Int32, CancellationToken) Asynchronously sends a standard HTML response for the specified status code. Declaration public static Task StandardHtmlResponseAsync(this IHttpContext this, int statusCode, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext this The IHttpContext interface on which this method is called. Int32 statusCode The HTTP status code of the response. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task A representing the ongoing operation. See Also StandardHtmlResponseAsync(IHttpResponse, Int32, CancellationToken) StandardHtmlResponseAsync(IHttpContext, Int32, Func<StringBuilder, StringBuilder>, CancellationToken) Asynchronously sends a standard HTML response for the specified status code. Declaration public static Task StandardHtmlResponseAsync(this IHttpContext this, int statusCode, Func<StringBuilder, StringBuilder> appendAdditionalHtml, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext this The IHttpContext interface on which this method is called. Int32 statusCode The HTTP status code of the response. Func < StringBuilder , StringBuilder > appendAdditionalHtml A callback function that may append additional HTML code to the response. If not null , the callback is called immediately before closing the HTML body tag. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task A representing the ongoing operation. See Also StandardHtmlResponseAsync(IHttpResponse, Int32, Func<StringBuilder, StringBuilder>, CancellationToken) StandardResponseWithoutBody(IHttpContext, Int32) Prepares a standard response without a body for the specified status code. Declaration public static void StandardResponseWithoutBody(this IHttpContext this, int statusCode) Parameters Type Name Description IHttpContext this The IHttpContext interface on which this method is called. Int32 statusCode The HTTP status code of the response. See Also StandardResponseWithoutBody(IHttpResponse, Int32) TryGetItem<T>(IHttpContext, Object, out T) Gets the item associated with the specified key. Declaration public static bool TryGetItem<T>(this IHttpContext this, object key, out T value) Parameters Type Name Description IHttpContext this The IHttpContext on which this method is called. Object key The key whose value to get from the Items dictionary. T value When this method returns, the item associated with the specified key, if the key is found in Items and the associated value is of type T ; otherwise, the default value for T . This parameter is passed uninitialized. Returns Type Description Boolean true if the item is found and is of type T ; otherwise, false . Type Parameters Name Description T The desired type of the item. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.html": {
    "href": "api/EmbedIO.html",
    "title": "Namespace EmbedIO | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO Classes CompressionMethods Exposes constants for possible values of the Compression HTTP header. Extensions Extension methods to help your coding. HttpContextExtensions Provides extension methods for types implementing IHttpContext . HttpHeaderNames Exposes known HTTP header names. HttpRequestExtensions Provides extension methods for types implementing IHttpRequest . HttpResponseExtensions Provides extension methods for types implementing IHttpResponse . HttpStatusDescription Provides standard HTTP status descriptions. Data contained in this class comes from the following sources: RFC7231 Section 6 (HTTP/1.1 Semantics and Content) RFC6585 (Additional HTTP Status Codes) RFC2774 Section 7 (An HTTP Extension Framework) RFC7540 Section 9.1.2 (HTTP/2) RFC4918 Section 11 (WebDAV) RFC5842 Section 7 (Binding Extensions to WebDAV) RFC7538 Section 3 (HTTP Status Code 308) RFC3229 Section 10.4.1 (Delta encoding in HTTP) RFC8297 Section 2 (Early Hints) RFC7725 Section 3 (HTTP-status-451) RFC2295 Section 8.1 (Transparent Content Negotiation) MimeTypes Provides constants for commonly-used MIME types and association between file extensions and MIME types. ModuleGroup Groups modules under a common base URL path. The BaseUrlPath property of modules contained in a ModuleGroup is relative to the ModuleGroup 's BaseUrlPath property. For example, given the following code: new ModuleGroup(\"/download\") .WithStaticFilesAt(\"/docs\", \"/var/my/documents\"); files contained in the /var/my/documents folder will be available to clients under the /download/docs/ URL. WebModuleBase Base class to define web modules. Although it is not required that a module inherits from this class, it provides some useful features: validation and immutability of the BaseUrlPath property, which are of paramount importance for the correct functioning of a web server; support for configuration locking upon web server startup (see the property and the method); a basic implementation of the Start(CancellationToken) method for modules that do not need to do anything upon web server startup; support for module-level exception handling via the OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) callback. WebModuleContainerExtensions Contains extension methods for types implementing IWebModuleContainer . WebServer Represents our tiny web server used to handle requests. This is the default implementation of IWebServer and it's ready to select the IHttpListener implementation via the proper constructor. By default, the WebServer will use the Regex RoutingStrategy for all registered modules ( IWebModule ) and EmbedIO Listener ( HttpListenerMode ). WebServerBase Base class for IWebServer implementations. WebServerExtensions Provides extension methods for types implementing IWebServer . WebServerOptions Options for WebServer creation. WebServerStateChangedEventArgs Represents event arguments whenever the state of a web server changes. Interfaces ICookieCollection Interface for Cookie Collection. IHttpContext Represents the context of a HTTP(s) request being handled by a web server. IHttpContextImpl Represents a HTTP context implementation, i.e. a HTTP context as seen internally by EmbedIO. This interface is only meant to be consumed internally by EmbedIO. IHttpListener Interface to create a HTTP Listener. IHttpMessage Represents a HTTP request or response. IHttpRequest Interface to create a HTTP Request. IHttpResponse Interface to create a HTTP Response. IWebModule Represents a module. IWebModuleContainer Represents an object that contains a collection of IWebModule interfaces. IWebServer Represents a web server. The basic usage of a web server is as follows: add modules to the Modules collection; set a SessionManager if needed; call RunAsync(CancellationToken) to respond to incoming requests. Enums CompressionMethod Specifies the compression method used to compress a message on the SystemWebSocket connection. HttpListenerMode Enums all the HTTP listener available. HttpVerbs Enumerates the different HTTP Verbs. WebServerState Enums the web server state. Delegates WebHandler A callback used to handle a request. WebServerStateChangedEventHandler An event handler that is called whenever the state of a web server is changed. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebSockets.html": {
    "href": "api/EmbedIO.WebSockets.html",
    "title": "Namespace EmbedIO.WebSockets | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.WebSockets Classes MessageEventArgs Represents the event data for the EmbedIO.WebSockets.Internal.WebSocket.OnMessage event. WebSocketException The exception that is thrown when a EmbedIO.WebSockets.Internal.WebSocket gets a fatal error. WebSocketModule A base class for modules that handle SystemWebSocket connections. Interfaces IWebSocket Interface to create a SystemWebSocket implementation. IWebSocketContext Represents the context of a SystemWebSocket connection. IWebSocketReceiveResult Interface for SystemWebSocket Receive Result object. Enums CloseStatusCode Indicates the status code for the SystemWebSocket connection close. Opcode Indicates the SystemWebSocket frame type. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebSockets.WebSocketModule.html": {
    "href": "api/EmbedIO.WebSockets.WebSocketModule.html",
    "title": "Class WebSocketModule | Unosquare EmbedIO",
    "keywords": "Class WebSocketModule A base class for modules that handle SystemWebSocket connections. Inheritance Object WebModuleBase WebSocketModule Implements IWebModule IDisposable Inherited Members WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.WebSockets Syntax public abstract class WebSocketModule : WebModuleBase, IWebModule, IDisposable Remarks Each SystemWebSocket server has a list of SystemWebSocket subprotocols it can accept. When a client initiates a SystemWebSocket opening handshake: if the list of accepted subprotocols is empty, the connection is accepted only if no SecWebSocketProtocol header is present in the request; if the list of accepted subprotocols is not empty, the connection is accepted only if one or more SecWebSocketProtocol headers are present in the request and one of them specifies one of the subprotocols in the list. The first subprotocol specified by the client that is also present in the module's list is then specified in the handshake response. If a connection is not accepted because of a subprotocol mismatch, a 400 Bad Request response is sent back to the client. The response contains one or more SecWebSocketProtocol headers that specify the list of accepted subprotocols (if any). Constructors WebSocketModule(String, Boolean) Initializes a new instance of the WebSocketModule class. Declaration protected WebSocketModule(string urlPath, bool enableConnectionWatchdog) Parameters Type Name Description String urlPath The URL path of the SystemWebSocket endpoint to serve. Boolean enableConnectionWatchdog If set to true , contexts representing closed connections will automatically be purged from ActiveContexts every 30 seconds.. Properties ActiveContexts Gets a list of IWebSocketContext interfaces representing the currently connected clients. Declaration protected IReadOnlyList<IWebSocketContext> ActiveContexts { get; } Property Value Type Description IReadOnlyList < IWebSocketContext > Encoding Gets the Encoding used by the SendAsync(IWebSocketContext, String) method to send a string. The default is UTF8 per the SystemWebSocket specification. Declaration protected Encoding Encoding { get; set; } Property Value Type Description Encoding KeepAliveInterval Gets or sets the keep-alive interval for the SystemWebSocket connection. The default is 30 seconds. Declaration protected TimeSpan KeepAliveInterval { get; set; } Property Value Type Description TimeSpan MaxMessageSize Gets or sets the maximum size of a received message. If a message exceeding the maximum size is received from a client, the connection is closed automatically. The default value is 0, which disables message size checking. Declaration protected int MaxMessageSize { get; set; } Property Value Type Description Int32 Methods AddProtocol(String) Adds a SystemWebSocket subprotocol to the list of protocols supported by a WebSocketModule . Declaration protected void AddProtocol(string protocol) Parameters Type Name Description String protocol The protocol name to add to the list. See Also AddProtocols(IEnumerable<String>) AddProtocols(String[]) AddProtocols(IEnumerable<String>) Adds one or more SystemWebSocket subprotocols to the list of protocols supported by a WebSocketModule . Declaration protected void AddProtocols(IEnumerable<string> protocols) Parameters Type Name Description IEnumerable < String > protocols The protocol names to add to the list. Remarks This method enumerates protocols just once; hence, if an exception is thrown because one of the specified protocols is null or contains invalid characters, any preceding protocol is added to the list of supported protocols. See Also AddProtocol(String) AddProtocols(String[]) AddProtocols(String[]) Adds one or more SystemWebSocket subprotocols to the list of protocols supported by a WebSocketModule . Declaration protected void AddProtocols(params string[] protocols) Parameters Type Name Description String [] protocols The protocol names to add to the list. Remarks This method performs validation checks on all specified protocols before adding them to the list of supported protocols; hence, if an exception is thrown because one of the specified protocols is null or contains invalid characters, none of the specified protocol names are added to the list. See Also AddProtocol(String) AddProtocols(IEnumerable<String>) BroadcastAsync(Byte[]) Broadcasts the specified payload to all connected SystemWebSocket clients. Declaration protected Task BroadcastAsync(byte[] payload) Parameters Type Name Description Byte [] payload The payload. Returns Type Description Task A representing the ongoing operation. BroadcastAsync(Byte[], Func<IWebSocketContext, Boolean>) Broadcasts the specified payload to selected SystemWebSocket clients. Declaration protected Task BroadcastAsync(byte[] payload, Func<IWebSocketContext, bool> selector) Parameters Type Name Description Byte [] payload The payload. Func < IWebSocketContext , Boolean > selector A callback function that must return true for each context to be included in the broadcast. Returns Type Description Task A representing the ongoing operation. BroadcastAsync(String) Broadcasts the specified payload to all connected SystemWebSocket clients. Declaration protected Task BroadcastAsync(string payload) Parameters Type Name Description String payload The payload. Returns Type Description Task A representing the ongoing operation. BroadcastAsync(String, Func<IWebSocketContext, Boolean>) Broadcasts the specified payload to selected SystemWebSocket clients. Declaration protected Task BroadcastAsync(string payload, Func<IWebSocketContext, bool> selector) Parameters Type Name Description String payload The payload. Func < IWebSocketContext , Boolean > selector A callback function that must return true for each context to be included in the broadcast. Returns Type Description Task A representing the ongoing operation. CloseAsync(IWebSocketContext) Closes the specified web socket, removes it and disposes it. Declaration protected Task CloseAsync(IWebSocketContext context) Parameters Type Name Description IWebSocketContext context The web socket. Returns Type Description Task A representing the ongoing operation. Dispose() Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. OnClientConnectedAsync(IWebSocketContext) Called when this SystemWebSocket Server accepts a new client. Declaration protected virtual Task OnClientConnectedAsync(IWebSocketContext context) Parameters Type Name Description IWebSocketContext context The context. Returns Type Description Task A representing the ongoing operation. OnClientDisconnectedAsync(IWebSocketContext) Called when the server has removed a connected client for any reason. Declaration protected virtual Task OnClientDisconnectedAsync(IWebSocketContext context) Parameters Type Name Description IWebSocketContext context The context. Returns Type Description Task A representing the ongoing operation. OnFrameReceivedAsync(IWebSocketContext, Byte[], IWebSocketReceiveResult) Called when this SystemWebSocket Server receives a message frame regardless if the frame represents the EndOfMessage. Declaration protected virtual Task OnFrameReceivedAsync(IWebSocketContext context, byte[] buffer, IWebSocketReceiveResult result) Parameters Type Name Description IWebSocketContext context The context. Byte [] buffer The buffer. IWebSocketReceiveResult result The result. Returns Type Description Task A representing the ongoing operation. OnMessageReceivedAsync(IWebSocketContext, Byte[], IWebSocketReceiveResult) Called when this SystemWebSocket Server receives a full message (EndOfMessage) from a client. Declaration protected abstract Task OnMessageReceivedAsync(IWebSocketContext context, byte[] buffer, IWebSocketReceiveResult result) Parameters Type Name Description IWebSocketContext context The context. Byte [] buffer The buffer. IWebSocketReceiveResult result The result. Returns Type Description Task A representing the ongoing operation. OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected override sealed Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Overrides WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. OnStart(CancellationToken) Called when a module is started, immediately before locking the module's configuration. Declaration protected override void OnStart(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. Overrides WebModuleBase.OnStart(CancellationToken) SendAsync(IWebSocketContext, Byte[]) Sends a binary payload. Declaration protected Task SendAsync(IWebSocketContext context, byte[] payload) Parameters Type Name Description IWebSocketContext context The web socket. Byte [] payload The payload. Returns Type Description Task A representing the ongoing operation. SendAsync(IWebSocketContext, String) Sends a text payload. Declaration protected Task SendAsync(IWebSocketContext context, string payload) Parameters Type Name Description IWebSocketContext context The web socket. String payload The payload. Returns Type Description Task A representing the ongoing operation. Implements IWebModule IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebSockets.WebSocketException.html": {
    "href": "api/EmbedIO.WebSockets.WebSocketException.html",
    "title": "Class WebSocketException | Unosquare EmbedIO",
    "keywords": "Class WebSocketException The exception that is thrown when a EmbedIO.WebSockets.Internal.WebSocket gets a fatal error. Inheritance Object WebSocketException Namespace : EmbedIO.WebSockets Syntax public class WebSocketException : Exception Properties Code Gets the status code indicating the cause of the exception. Declaration public CloseStatusCode Code { get; } Property Value Type Description CloseStatusCode One of the CloseStatusCode enum values, represents the status code indicating the cause of the exception. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebSockets.Opcode.html": {
    "href": "api/EmbedIO.WebSockets.Opcode.html",
    "title": "Enum Opcode | Unosquare EmbedIO",
    "keywords": "Enum Opcode Indicates the SystemWebSocket frame type. Namespace : EmbedIO.WebSockets Syntax public enum Opcode : byte Remarks The values of this enumeration are defined in Section 5.2 of RFC 6455. Fields Name Description Binary Equivalent to numeric value 2. Indicates binary frame. Close Equivalent to numeric value 8. Indicates connection close frame. Cont Equivalent to numeric value 0. Indicates continuation frame. Ping Equivalent to numeric value 9. Indicates ping frame. Pong Equivalent to numeric value 10. Indicates pong frame. Text Equivalent to numeric value 1. Indicates text frame. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebSockets.MessageEventArgs.html": {
    "href": "api/EmbedIO.WebSockets.MessageEventArgs.html",
    "title": "Class MessageEventArgs | Unosquare EmbedIO",
    "keywords": "Class MessageEventArgs Represents the event data for the EmbedIO.WebSockets.Internal.WebSocket.OnMessage event. Inheritance Object MessageEventArgs Namespace : EmbedIO.WebSockets Syntax public class MessageEventArgs : EventArgs Remarks That event occurs when the EmbedIO.WebSockets.Internal.WebSocket receives a message or a ping if the EmbedIO.WebSockets.Internal.WebSocket.EmitOnPing property is set to true . If you would like to get the message data, you should access the Data or RawData property. Properties Data Gets the message data as a String . Declaration public string Data { get; } Property Value Type Description String A String that represents the message data if its type is text or ping and if decoding it to a string has successfully done; otherwise, null . IsBinary Gets a value indicating whether the message type is binary. Declaration public bool IsBinary { get; } Property Value Type Description Boolean true if the message type is binary; otherwise, false . IsPing Gets a value indicating whether the message type is ping. Declaration public bool IsPing { get; } Property Value Type Description Boolean true if the message type is ping; otherwise, false . IsText Gets a value indicating whether the message type is text. Declaration public bool IsText { get; } Property Value Type Description Boolean true if the message type is text; otherwise, false . RawData Gets the message data as an array of Byte . Declaration public byte[] RawData { get; } Property Value Type Description Byte [] An array of Byte that represents the message data. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebSockets.IWebSocketReceiveResult.html": {
    "href": "api/EmbedIO.WebSockets.IWebSocketReceiveResult.html",
    "title": "Interface IWebSocketReceiveResult | Unosquare EmbedIO",
    "keywords": "Interface IWebSocketReceiveResult Interface for SystemWebSocket Receive Result object. Namespace : EmbedIO.WebSockets Syntax public interface IWebSocketReceiveResult Properties Count Gets the count. Declaration int Count { get; } Property Value Type Description Int32 The count. EndOfMessage Gets a value indicating whether [end of message]. Declaration bool EndOfMessage { get; } Property Value Type Description Boolean true if [end of message]; otherwise, false . MessageType Gets the type of the message. Declaration int MessageType { get; } Property Value Type Description Int32 The type of the message. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebSockets.IWebSocketContext.html": {
    "href": "api/EmbedIO.WebSockets.IWebSocketContext.html",
    "title": "Interface IWebSocketContext | Unosquare EmbedIO",
    "keywords": "Interface IWebSocketContext Represents the context of a SystemWebSocket connection. Namespace : EmbedIO.WebSockets Syntax public interface IWebSocketContext Properties AcceptedProtocol The accepted subprotocol. Declaration string AcceptedProtocol { get; } Property Value Type Description String CancellationToken Gets the CancellationToken used to cancel operations. Declaration CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken Cookies The cookies that were passed to the server during the opening handshake. Declaration ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection Headers The HTTP headers that were sent to the server during the opening handshake. Declaration NameValueCollection Headers { get; } Property Value Type Description NameValueCollection HttpContextId Gets the unique identifier of the opening handshake HTTP context. Declaration string HttpContextId { get; } Property Value Type Description String Id Gets a unique identifier for a SystemWebSocket context. Declaration string Id { get; } Property Value Type Description String IsAuthenticated Whether the SystemWebSocket client is authenticated. Declaration bool IsAuthenticated { get; } Property Value Type Description Boolean IsLocal Whether the SystemWebSocket client connected from the local machine. Declaration bool IsLocal { get; } Property Value Type Description Boolean IsSecureConnection Whether the SystemWebSocket connection is secured using Secure Sockets Layer (SSL). Declaration bool IsSecureConnection { get; } Property Value Type Description Boolean Items Gets the dictionary of data associated with the opening handshake HTTP context. Declaration IDictionary<object, object> Items { get; } Property Value Type Description IDictionary < Object , Object > LocalEndPoint Gets the server IP address and port number to which the opening handshake request is directed. Declaration IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint Origin The value of the Origin HTTP header included in the opening handshake. Declaration string Origin { get; } Property Value Type Description String RemoteEndPoint Gets the client IP address and port number from which the opening handshake request originated. Declaration IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint RequestedProtocols The list of subprotocols requested by the SystemWebSocket client. Declaration IEnumerable<string> RequestedProtocols { get; } Property Value Type Description IEnumerable < String > RequestUri The URI requested by the SystemWebSocket client. Declaration Uri RequestUri { get; } Property Value Type Description Uri Session Gets the session proxy associated with the opening handshake HTTP context. Declaration ISessionProxy Session { get; } Property Value Type Description ISessionProxy User An object used to obtain identity, authentication information, and security roles for the SystemWebSocket client. Declaration IPrincipal User { get; } Property Value Type Description IPrincipal WebSocket The IWebSocket interface used to interact with the SystemWebSocket connection. Declaration IWebSocket WebSocket { get; } Property Value Type Description IWebSocket WebSocketVersion The value of the SecWebSocketKey HTTP header included in the opening handshake. Declaration string WebSocketVersion { get; } Property Value Type Description String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebSockets.IWebSocket.html": {
    "href": "api/EmbedIO.WebSockets.IWebSocket.html",
    "title": "Interface IWebSocket | Unosquare EmbedIO",
    "keywords": "Interface IWebSocket Interface to create a SystemWebSocket implementation. Namespace : EmbedIO.WebSockets Syntax public interface IWebSocket : IDisposable Properties State Gets the state. Declaration WebSocketState State { get; } Property Value Type Description WebSocketState The state. Methods CloseAsync(CancellationToken) Closes the web socket asynchronously. Declaration Task CloseAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task object representing the asynchronous operation. CloseAsync(CloseStatusCode, String, CancellationToken) Closes the web socket asynchronously. Declaration Task CloseAsync(CloseStatusCode code, string comment = null, CancellationToken cancellationToken = null) Parameters Type Name Description CloseStatusCode code The code. String comment The comment. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task object representing the asynchronous operation. SendAsync(Byte[], Boolean, CancellationToken) Sends the buffer to the web socket asynchronously. Declaration Task SendAsync(byte[] buffer, bool isText, CancellationToken cancellationToken = null) Parameters Type Name Description Byte [] buffer The buffer. Boolean isText if set to true [is text]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task that represents the asynchronous of send data using websocket. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebSockets.CloseStatusCode.html": {
    "href": "api/EmbedIO.WebSockets.CloseStatusCode.html",
    "title": "Enum CloseStatusCode | Unosquare EmbedIO",
    "keywords": "Enum CloseStatusCode Indicates the status code for the SystemWebSocket connection close. Namespace : EmbedIO.WebSockets Syntax public enum CloseStatusCode : ushort Remarks The values of this enumeration are defined in Section 7.4 of RFC 6455. \"Reserved value\" must not be set as a status code in a connection close frame by an endpoint. It's designated for use in applications expecting a status code to indicate that the connection was closed due to the system grounds. Fields Name Description Abnormal Equivalent to close status 1006. Indicates that the connection was closed abnormally. A Reserved value. Away Equivalent to close status 1001. Indicates that an endpoint is going away. InvalidData Equivalent to close status 1007. Indicates that an endpoint is terminating the connection because it has received a message that contains data that isn't consistent with the type of the message. MandatoryExtension Equivalent to close status 1010. Indicates that a client is terminating the connection because it has expected the server to negotiate one or more extension, but the server didn't return them in the handshake response. Normal Equivalent to close status 1000. Indicates normal close. NoStatus Equivalent to close status 1005. Indicates that no status code was actually present. A Reserved value. PolicyViolation Equivalent to close status 1008. Indicates that an endpoint is terminating the connection because it has received a message that violates its policy. ProtocolError Equivalent to close status 1002. Indicates that an endpoint is terminating the connection due to a protocol error. ServerError Equivalent to close status 1011. Indicates that a server is terminating the connection because it has encountered an unexpected condition that prevented it from fulfilling the request. TlsHandshakeFailure Equivalent to close status 1015. Indicates that the connection was closed due to a failure to perform a TLS handshake. A Reserved value. TooBig Equivalent to close status 1009. Indicates that an endpoint is terminating the connection because it has received a message that is too big to process. Undefined Equivalent to close status 1004. Still undefined. A Reserved value. UnsupportedData Equivalent to close status 1003. Indicates that an endpoint is terminating the connection because it has received a type of data that it cannot accept. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebServerStateChangedEventHandler.html": {
    "href": "api/EmbedIO.WebServerStateChangedEventHandler.html",
    "title": "Delegate WebServerStateChangedEventHandler | Unosquare EmbedIO",
    "keywords": "Delegate WebServerStateChangedEventHandler An event handler that is called whenever the state of a web server is changed. Namespace : EmbedIO Syntax public delegate void WebServerStateChangedEventHandler(object sender, WebServerStateChangedEventArgs e); Parameters Type Name Description Object sender The sender. WebServerStateChangedEventArgs e The WebServerStateChangedEventArgs instance containing the event data. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebServerStateChangedEventArgs.html": {
    "href": "api/EmbedIO.WebServerStateChangedEventArgs.html",
    "title": "Class WebServerStateChangedEventArgs | Unosquare EmbedIO",
    "keywords": "Class WebServerStateChangedEventArgs Represents event arguments whenever the state of a web server changes. Inheritance Object WebServerStateChangedEventArgs Namespace : EmbedIO Syntax public class WebServerStateChangedEventArgs : EventArgs Constructors WebServerStateChangedEventArgs(WebServerState, WebServerState) Initializes a new instance of the WebServerStateChangedEventArgs class. Declaration public WebServerStateChangedEventArgs(WebServerState oldState, WebServerState newState) Parameters Type Name Description WebServerState oldState The old state. WebServerState newState The new state. Properties NewState Gets the state to which the application service changed. Declaration public WebServerState NewState { get; } Property Value Type Description WebServerState OldState Gets the old state. Declaration public WebServerState OldState { get; } Property Value Type Description WebServerState Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebServerState.html": {
    "href": "api/EmbedIO.WebServerState.html",
    "title": "Enum WebServerState | Unosquare EmbedIO",
    "keywords": "Enum WebServerState Enums the web server state. Namespace : EmbedIO Syntax public enum WebServerState Fields Name Description Created The created state. Listening The listening state. Loading The loading state. Stopped The stopped state. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebServerOptions.html": {
    "href": "api/EmbedIO.WebServerOptions.html",
    "title": "Class WebServerOptions | Unosquare EmbedIO",
    "keywords": "Class WebServerOptions Options for WebServer creation. Inheritance Object WebServerOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public sealed class WebServerOptions Constructors WebServerOptions(String) Initializes a new instance of the WebServerOptions class. Declaration public WebServerOptions(string urlPrefix) Parameters Type Name Description String urlPrefix The URL prefix. WebServerOptions(String[]) Initializes a new instance of the WebServerOptions class. Declaration public WebServerOptions(string[] urlPrefixes) Parameters Type Name Description String [] urlPrefixes The urls. Properties AutoLoadCertificate Gets or sets a value indicating whether [automatic load certificate]. Declaration public bool AutoLoadCertificate { get; set; } Property Value Type Description Boolean true if [automatic load certificate]; otherwise, false . AutoRegisterCertificate Gets or sets a value indicating whether [automatic register certificate]. Declaration public bool AutoRegisterCertificate { get; set; } Property Value Type Description Boolean true if [automatic register certificate]; otherwise, false . Certificate Gets or sets the certificate. Declaration public X509Certificate2 Certificate { get; set; } Property Value Type Description X509Certificate2 The certificate. CertificateThumb Gets or sets the certificate thumb. Declaration public string CertificateThumb { get; set; } Property Value Type Description String The certificate thumb. Mode Gets or sets the mode. Declaration public HttpListenerMode Mode { get; set; } Property Value Type Description HttpListenerMode The mode. StoreLocation Gets or sets the store location. Declaration public StoreLocation StoreLocation { get; set; } Property Value Type Description StoreLocation The store location. StoreName Gets or sets the name of the store. Declaration public StoreName StoreName { get; set; } Property Value Type Description StoreName The name of the store. UrlPrefixes Gets the URL prefixes. Declaration public string[] UrlPrefixes { get; } Property Value Type Description String [] The URL prefixes. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebServerExtensions.html": {
    "href": "api/EmbedIO.WebServerExtensions.html",
    "title": "Class WebServerExtensions | Unosquare EmbedIO",
    "keywords": "Class WebServerExtensions Provides extension methods for types implementing IWebServer . Inheritance Object WebServerExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class WebServerExtensions Methods WithLocalSessionManager<TWebServer>(TWebServer) Creates a with all properties set to their default values and sets it as session manager on a IWebServer . Declaration public static TWebServer WithLocalSessionManager<TWebServer>(this TWebServer this) where TWebServer : IWebServer Parameters Type Name Description TWebServer this The IWebServer on which this method is called. Returns Type Description TWebServer this with the session manager set. Type Parameters Name Description TWebServer The type of the web server. WithSessionManager<TWebServer>(TWebServer, ISessionManager) Sets the session manager on a IWebServer . Declaration public static TWebServer WithSessionManager<TWebServer>(this TWebServer this, ISessionManager sessionManager) where TWebServer : IWebServer Parameters Type Name Description TWebServer this The IWebServer on which this method is called. ISessionManager sessionManager The session manager. Returns Type Description TWebServer this with the session manager set. Type Parameters Name Description TWebServer The type of the web server. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebServerBase.html": {
    "href": "api/EmbedIO.WebServerBase.html",
    "title": "Class WebServerBase | Unosquare EmbedIO",
    "keywords": "Class WebServerBase Base class for IWebServer implementations. Inheritance Object WebServerBase TestWebServer WebServer Implements IWebServer IWebModuleContainer IDisposable Namespace : EmbedIO Syntax public abstract class WebServerBase : ConfiguredObject, IWebServer, IWebModuleContainer, IDisposable Constructors WebServerBase() Initializes a new instance of the WebServerBase class. Declaration protected WebServerBase() Properties Modules Gets the modules. Declaration public IComponentCollection<IWebModule> Modules { get; } Property Value Type Description IComponentCollection < IWebModule > The modules. SessionManager Gets or sets the registered session ID manager, if any. A session ID manager is an implementation of . Note that this property can only be set before starting the web server. Declaration public ISessionManager SessionManager { get; set; } Property Value Type Description ISessionManager The session manager, or null if no session manager is present. State Gets the state of the web server. Declaration public WebServerState State { get; protected set; } Property Value Type Description WebServerState The state. See Also WebServerState Methods Dispose() Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Finalize() Finalizes an instance of the WebServerBase class. Declaration protected void Finalize() GetContextAsync(CancellationToken) Asynchronously waits for a request, accepts it, and returns a newly-constructed HTTP context. Declaration protected abstract Task<IHttpContextImpl> GetContextAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. Returns Type Description Task < IHttpContextImpl > An awaitable that returns a HTTP context. OnBeforeLockConfiguration() Declaration protected override void OnBeforeLockConfiguration() OnFatalException() Called when an exception is caught in the web server's request processing loop. This method should tell the server socket to stop accepting further requests. Declaration protected abstract void OnFatalException() Prepare(CancellationToken) Prepares a web server for running. Declaration protected virtual void Prepare(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. RunAsync(CancellationToken) Starts the listener and the registered modules. Declaration public Task RunAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken The cancellation token; when cancelled, the server cancels all pending requests and stops. Returns Type Description Task Returns the task that the HTTP listener is running inside of, so that it can be waited upon after it's been canceled. ShouldProcessMoreRequests() Tells whether a web server should continue processing requests. This method is call each time before trying to accept a request. Declaration protected abstract bool ShouldProcessMoreRequests() Returns Type Description Boolean true if the web server should continue processing requests; otherwise, false . Events StateChanged Occurs when the State property changes. Declaration public event WebServerStateChangedEventHandler StateChanged Event Type Type Description WebServerStateChangedEventHandler Implements IWebServer IWebModuleContainer IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebApi.WebApiController.html": {
    "href": "api/EmbedIO.WebApi.WebApiController.html",
    "title": "Class WebApiController | Unosquare EmbedIO",
    "keywords": "Class WebApiController Inherit from this class and define your own Web API methods You must RegisterController in the Web API Module to make it active. Inheritance Object WebApiController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.WebApi Syntax public abstract class WebApiController Constructors WebApiController(IHttpContext, CancellationToken) Initializes a new instance of the WebApiController class. Declaration protected WebApiController(IHttpContext context, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context. CancellationToken cancellationToken The cancellation token. Properties CancellationToken Gets the cancellation token used to cancel processing of the request. Declaration protected CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken HttpContext Gets the HTTP context. Declaration protected IHttpContext HttpContext { get; } Property Value Type Description IHttpContext Request Gets the HTTP request. Declaration protected IHttpRequest Request { get; } Property Value Type Description IHttpRequest Response Gets the HTTP response object. Declaration protected IHttpResponse Response { get; } Property Value Type Description IHttpResponse Session Gets the session proxy associated with the HTTP context. Declaration protected ISessionProxy Session { get; } Property Value Type Description ISessionProxy User Gets the user. Declaration protected IPrincipal User { get; } Property Value Type Description IPrincipal Methods Ok(Object, CancellationToken) Outputs async a Json Response given a data object. Declaration protected virtual Task<bool> Ok(object data, CancellationToken cancellationToken = null) Parameters Type Name Description Object data The data. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A true value if the response output was set. Ok(String, String, Encoding, Boolean, CancellationToken) Outputs async a string response given a string. Declaration protected virtual Task<bool> Ok(string content, string contentType = \"application/json\", Encoding encoding = null, bool useGzip = true, CancellationToken cancellationToken = null) Parameters Type Name Description String content The content. String contentType Type of the content. Encoding encoding The encoding. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. Ok<TIn, TOut>(Func<TIn, CancellationToken, Task<TOut>>, CancellationToken) Transforms the response body as JSON and write a new JSON to the request. Declaration protected virtual Task<bool> Ok<TIn, TOut>(Func<TIn, CancellationToken, Task<TOut>> transformFunc, CancellationToken cancellationToken = null) where TIn : class Parameters Type Name Description Func <TIn, CancellationToken , Task <TOut>> transformFunc The transform function. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. Type Parameters Name Description TIn The type of the input. TOut The type of the output. OnBeforeHandler() Called before a handler to perform common operations. The default behavior is to set response headers in order to prevent caching of the response. Declaration protected virtual void OnBeforeHandler() PreProcessRequest() This method is meant to be called internally by EmbedIO. Derived classes can override the OnBeforeHandler() method to perform common operations before any handler gets called. Declaration public void PreProcessRequest() See Also OnBeforeHandler() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebApi.RouteParameterConverter.html": {
    "href": "api/EmbedIO.WebApi.RouteParameterConverter.html",
    "title": "Class RouteParameterConverter | Unosquare EmbedIO",
    "keywords": "Class RouteParameterConverter Provides utility methods related to the conversion of route parameters to parameters of a WebApiController handler method. Inheritance Object RouteParameterConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.WebApi Syntax public static class RouteParameterConverter Methods CanConvertTo(Type) Determines whether a route parameter can be converted to the specified type. Declaration public static bool CanConvertTo(Type type) Parameters Type Name Description Type type The type to convert to. Returns Type Description Boolean true if a route parameter can be converted to type ; otherwise, false . Convert(String, Type) Converts a string to the specified type. Declaration public static object Convert(string str, Type type) Parameters Type Name Description String str The string to convert. Type type The type to convert str to. Returns Type Description Object The result of the conversion. Convert<T>(String) Converts a string to the specified type. Declaration public static T Convert<T>(string str) Parameters Type Name Description String str The string to convert. Returns Type Description T The result of the conversion. Type Parameters Name Description T The type to convert str to. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.TaskExtensions.html": {
    "href": "api/EmbedIO.Utilities.TaskExtensions.html",
    "title": "Class TaskExtensions | Unosquare EmbedIO",
    "keywords": "Class TaskExtensions Provides extension methods for and Inheritance Object TaskExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public static class TaskExtensions Methods Await(Task) Suspends execution until the specified is completed. This method operates similarly to the await C# operator, but is meant to be called from a non- async method. Declaration public static void Await(this Task this) Parameters Type Name Description Task this The on which this method is called. Await(Task, Boolean) Suspends execution until the specified is completed. This method operates similarly to the await C# operator, but is meant to be called from a non- async method. Declaration public static void Await(this Task this, bool continueOnCapturedContext) Parameters Type Name Description Task this The on which this method is called. Boolean continueOnCapturedContext If set to true , attempts to marshal the continuation back to the original context captured. This parameter has the same effect as calling the method. Await<TResult>(Task<TResult>) Suspends execution until the specified is completed and returns its result. This method operates similarly to the await C# operator, but is meant to be called from a non- async method. Declaration public static TResult Await<TResult>(this Task<TResult> this) Parameters Type Name Description Task <TResult> this The on which this method is called. Returns Type Description TResult The result of this . Type Parameters Name Description TResult The type of the task's result. Await<TResult>(Task<TResult>, Boolean) Suspends execution until the specified is completed and returns its result. This method operates similarly to the await C# operator, but is meant to be called from a non- async method. Declaration public static TResult Await<TResult>(this Task<TResult> this, bool continueOnCapturedContext) Parameters Type Name Description Task <TResult> this The on which this method is called. Boolean continueOnCapturedContext If set to true , attempts to marshal the continuation back to the original context captured. This parameter has the same effect as calling the method. Returns Type Description TResult The result of this . Type Parameters Name Description TResult The type of the task's result. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.StringExtensions.html": {
    "href": "api/EmbedIO.Utilities.StringExtensions.html",
    "title": "Class StringExtensions | Unosquare EmbedIO",
    "keywords": "Class StringExtensions Provides extension methods for String . Inheritance Object StringExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public static class StringExtensions Methods SplitByAny(String, StringSplitOptions, Char[]) Splits a string into substrings based on the specified delimiters . You can specify whether the substrings include empty array elements. Declaration public static string[] SplitByAny(this string this, StringSplitOptions options, params char[] delimiters) Parameters Type Name Description String this The String on which this method is called. StringSplitOptions options to omit empty array elements from the array returned; or to include empty array elements in the array returned. Char [] delimiters An array of Char s to use as delimiters. Returns Type Description String [] An array whose elements contain the substrings in this that are delimited by one or more characters in delimiters . For more information, see the Remarks section of the method. See Also SplitByAny(String, Char[]) SplitByAny(String, Char[]) Splits a string into substrings based on the specified delimiters . The returned array includes empty array elements if two or more consecutive delimiters are found in this . Declaration public static string[] SplitByAny(this string this, params char[] delimiters) Parameters Type Name Description String this The String on which this method is called. Char [] delimiters An array of Char s to use as delimiters. Returns Type Description String [] An array whose elements contain the substrings in this that are delimited by one or more characters in delimiters . See Also SplitByAny(String, StringSplitOptions, Char[]) SplitByComma(String) Splits a string into substrings, using the comma ( , ) character as a delimiter. The returned array includes empty array elements if two or more commas are found in this . Declaration public static string[] SplitByComma(this string this) Parameters Type Name Description String this The String on which this method is called. Returns Type Description String [] An array whose elements contain the substrings in this that are delimited by commas. See Also SplitByComma(String, StringSplitOptions) SplitByComma(String, StringSplitOptions) Splits a string into substrings, using the comma ( , ) character as a delimiter. You can specify whether the substrings include empty array elements. Declaration public static string[] SplitByComma(this string this, StringSplitOptions options) Parameters Type Name Description String this The String on which this method is called. StringSplitOptions options to omit empty array elements from the array returned; or to include empty array elements in the array returned. Returns Type Description String [] An array whose elements contain the substrings in this that are delimited by commas. For more information, see the Remarks section of the method. See Also SplitByComma(String) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.NameValueCollectionExtensions.html": {
    "href": "api/EmbedIO.Utilities.NameValueCollectionExtensions.html",
    "title": "Class NameValueCollectionExtensions | Unosquare EmbedIO",
    "keywords": "Class NameValueCollectionExtensions Provides extension methods for . Inheritance Object NameValueCollectionExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public static class NameValueCollectionExtensions Methods Contains(NameValueCollection, String, String) Determines whether a contains one or more values for the specified name , at least one of which is equal to the specified value . Value comparisons are carried out using the comparison type. Declaration public static bool Contains(this NameValueCollection this, string name, string value) Parameters Type Name Description NameValueCollection this The on which this method is called. String name The name to look for. String value The value to look for. Returns Type Description Boolean true if at least one of the values for name in the collection is equal to value ; otherwise, false . Remarks White space is trimmed from the start and end of each value before comparison. See Also Contains(NameValueCollection, String, String, StringComparison) Contains(NameValueCollection, String, String, StringComparison) Determines whether a contains one or more values for the specified name , at least one of which is equal to the specified value . Value comparisons are carried out using the specified comparisonType . Declaration public static bool Contains(this NameValueCollection this, string name, string value, StringComparison comparisonType) Parameters Type Name Description NameValueCollection this The on which this method is called. String name The name to look for. String value The value to look for. StringComparison comparisonType One of the enumeration values that specifies how the strings will be compared. Returns Type Description Boolean true if at least one of the values for name in the collection is equal to value ; otherwise, false . Remarks White space is trimmed from the start and end of each value before comparison. See Also Contains(NameValueCollection, String, String) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.IDataDictionary-2.html": {
    "href": "api/EmbedIO.Utilities.IDataDictionary-2.html",
    "title": "Interface IDataDictionary<TKey, TValue> | Unosquare EmbedIO",
    "keywords": "Interface IDataDictionary<TKey, TValue> Represents a generic collection of key/value pairs that does not store null values. Namespace : EmbedIO.Utilities Syntax public interface IDataDictionary<TKey, TValue> where TKey : class where TValue : class Type Parameters Name Description TKey The type of keys in the dictionary. This must be a reference type. TValue The type of values in the dictionary. This must be a reference type. Remarks This interface is meant for the storage and retrieval of session data, not for all possible uses of a generic dictionary; therefore, some features (e.g. key/value pair enumeration) are intentionally not included. Properties Count Gets the number of key/value pairs contained in the IDataDictionary<TKey, TValue> . Declaration int Count { get; } Property Value Type Description Int32 The number of key/value pairs contained in the IDataDictionary<TKey, TValue> . IsEmpty Gets a value that indicates whether the IDataDictionary<TKey, TValue> is empty. Declaration bool IsEmpty { get; } Property Value Type Description Boolean true if the IDataDictionary<TKey, TValue> is empty; otherwise, false . Item[TKey] Gets or sets the value associated with the specified key. Note that a IDataDictionary<TKey, TValue> does not store null values>; therefore, setting this property to null has the same effect as removing key from the dictionary. Declaration TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key The key of the value to get or set. Property Value Type Description TValue The value associated with the specified key, if key is found in the dictionary; otherwise, null . Methods Clear() Removes all keys and values from the IDataDictionary<TKey, TValue> . Declaration void Clear() ContainsKey(TKey) Determines whether the IDataDictionary<TKey, TValue> contains an element with the specified key. Declaration bool ContainsKey(TKey key) Parameters Type Name Description TKey key The key to locate in the IDataDictionary<TKey, TValue> . Returns Type Description Boolean true if the IDataDictionary<TKey, TValue> contains an element with the key; otherwise, false . TryGetValue(TKey, out TValue) Gets the value associated with the specified key. Declaration bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key The key whose value to get. TValue value When this method returns, the value associated with the specified key , if the key is found; otherwise, null . This parameter is passed uninitialized. Returns Type Description Boolean true if the object that implements IDataDictionary<TKey, TValue> contains an element with the specified key; otherwise, false . TryRemove(TKey, out TValue) Attempts to remove and return the value that has the specified key from the IDataDictionary<TKey, TValue> . Declaration bool TryRemove(TKey key, out TValue value) Parameters Type Name Description TKey key The key of the element to remove and return. TValue value When this method returns, the value removed from the IDataDictionary<TKey, TValue> , if the key is found; otherwise, null . This parameter is passed uninitialized. Returns Type Description Boolean true if the value was removed successfully; otherwise, false . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.DataDictionary-2.html": {
    "href": "api/EmbedIO.Utilities.DataDictionary-2.html",
    "title": "Class DataDictionary<TKey, TValue> | Unosquare EmbedIO",
    "keywords": "Class DataDictionary<TKey, TValue> Represents a non-thread-safe collection of key/value pairs that does not store null values and can be accessed by multiple threads concurrently. Inheritance Object DataDictionary<TKey, TValue> Implements IDataDictionary <TKey, TValue> IDictionary <TKey, TValue> IReadOnlyDictionary <TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public sealed class DataDictionary<TKey, TValue> : IDataDictionary<TKey, TValue>, IDictionary<TKey, TValue>, IReadOnlyDictionary<TKey, TValue> where TKey : class where TValue : class Type Parameters Name Description TKey The type of keys in the dictionary. This must be a reference type. TValue The type of values in the dictionary. This must be a reference type. Constructors DataDictionary() Initializes a new instance of the DataDictionary<TKey, TValue> class that is empty, has the default initial capacity, and uses the default comparer for TKey . Declaration public DataDictionary() DataDictionary(IEnumerable<KeyValuePair<TKey, TValue>>) Initializes a new instance of the DataDictionary<TKey, TValue> class that contains elements copied from the specified , has the default initial capacity, and uses the default comparer for TKey . Declaration public DataDictionary(IEnumerable<KeyValuePair<TKey, TValue>> collection) Parameters Type Name Description IEnumerable < KeyValuePair <TKey, TValue>> collection The whose elements are copied to the new DataDictionary<TKey, TValue> . Remarks Since DataDictionary<TKey, TValue> does not store null values, key/value pairs whose value is null will not be copied from collection . DataDictionary(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>) Initializes a new instance of the DataDictionary<TKey, TValue> class that contains elements copied from the specified , has the default initial capacity, and uses the specified . Declaration public DataDictionary(IEnumerable<KeyValuePair<TKey, TValue>> collection, IEqualityComparer<TKey> comparer) Parameters Type Name Description IEnumerable < KeyValuePair <TKey, TValue>> collection The whose elements are copied to the new DataDictionary<TKey, TValue> . IEqualityComparer <TKey> comparer The equality comparison implementation to use when comparing keys. Remarks Since DataDictionary<TKey, TValue> does not store null values, key/value pairs whose value is null will not be copied from collection . DataDictionary(IEqualityComparer<TKey>) Initializes a new instance of the DataDictionary<TKey, TValue> class that is empty, has the default capacity, and uses the specified . Declaration public DataDictionary(IEqualityComparer<TKey> comparer) Parameters Type Name Description IEqualityComparer <TKey> comparer The equality comparison implementation to use when comparing keys. DataDictionary(Int32) Initializes a new instance of the DataDictionary<TKey, TValue> class that is empty, has the specified capacity, and uses the default comparer for the key type. Declaration public DataDictionary(int capacity) Parameters Type Name Description Int32 capacity The initial number of elements that the DataDictionary<TKey, TValue> can contain. DataDictionary(Int32, IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>) Initializes a new instance of the DataDictionary<TKey, TValue> class that contains elements copied from the specified , has the specified capacity, and uses the specified . Declaration public DataDictionary(int capacity, IEnumerable<KeyValuePair<TKey, TValue>> collection, IEqualityComparer<TKey> comparer) Parameters Type Name Description Int32 capacity The initial number of elements that the DataDictionary<TKey, TValue> can contain. IEnumerable < KeyValuePair <TKey, TValue>> collection The whose elements are copied to the new ConcurrentDataDictionary<TKey, TValue> . IEqualityComparer <TKey> comparer The equality comparison implementation to use when comparing keys. Remarks Since ConcurrentDataDictionary<TKey, TValue> does not store null values, key/value pairs whose value is null will not be copied from collection . Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Item[TKey] Declaration public TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TValue Keys Declaration public ICollection<TKey> Keys { get; } Property Value Type Description ICollection <TKey> Values Declaration public ICollection<TValue> Values { get; } Property Value Type Description ICollection <TValue> Methods Clear() Declaration public void Clear() ContainsKey(TKey) Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description Boolean GetOrAdd(TKey, TValue) Declaration public TValue GetOrAdd(TKey key, TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description TValue Remove(TKey) Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description Boolean TryAdd(TKey, TValue) Declaration public bool TryAdd(TKey key, TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description Boolean TryGetValue(TKey, out TValue) Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description Boolean TryRemove(TKey, out TValue) Declaration public bool TryRemove(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description Boolean TryUpdate(TKey, TValue, TValue) Declaration public bool TryUpdate(TKey key, TValue newValue, TValue comparisonValue) Parameters Type Name Description TKey key TValue newValue TValue comparisonValue Returns Type Description Boolean Implements IDataDictionary<TKey, TValue> IDictionary<, > IReadOnlyDictionary<, > See Also IDataDictionary <TKey, TValue> Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.ConfiguredObject.html": {
    "href": "api/EmbedIO.Utilities.ConfiguredObject.html",
    "title": "Class ConfiguredObject | Unosquare EmbedIO",
    "keywords": "Class ConfiguredObject Base class for objects whose configuration may be locked, thus becoming read-only, at a certain moment in their lifetime. Inheritance Object ConfiguredObject ComponentCollection<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public abstract class ConfiguredObject Properties ConfigurationLocked Gets a value indicating whether s configuration has already been locked and has therefore become read-only. Declaration protected bool ConfigurationLocked { get; } Property Value Type Description Boolean true if the configuration is locked; otherwise, false . See Also EnsureConfigurationNotLocked() Methods EnsureConfigurationNotLocked() Checks whether a module's configuration has become read-only and, if so, throws an . Declaration protected void EnsureConfigurationNotLocked() See Also ConfigurationLocked LockConfiguration() Locks this instance's configuration, preventing further modifications. Declaration protected void LockConfiguration() Remarks Configuration locking must be enforced by derived classes by calling EnsureConfigurationNotLocked() at the start of methods and property setters that could change the object's configuration. Immediately before locking the configuration, this method calls OnBeforeLockConfiguration() as a last chance to validate configuration data, and to lock the configuration of contained objects. See Also OnBeforeLockConfiguration() OnBeforeLockConfiguration() Called immediately before locking the configuration. Declaration protected virtual void OnBeforeLockConfiguration() See Also LockConfiguration() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.html": {
    "href": "api/EmbedIO.Routing.html",
    "title": "Namespace EmbedIO.Routing | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Routing Classes Route Provides utility methods to work with routes. RouteHandlerAttribute Decorate methods within controllers with this attribute in order to make them callable from the Web API Module Method Must match the WebServerModule. RouteMatch Represents a route resolved by a RouteResolverBase<TContext, TData> . This class may be used both as a dictionary of route parameter names and values, and a list of the values. Because of its double nature, this class cannot be enumerated directly. However, you may use the Pairs property to iterate over name / value pairs, and the Values property to iterate over values. When enumerated in a non-generic fashion via the interface, this class iterates over name / value pairs. RouteMatcher Matches URL paths against a route. RouteResolverBase<TContext, TData> Implements the logic for resolving a context and a URL path against a route, possibly handling different contexts via different handlers. RouteResolverCollectionBase<TContext, TData, TResolver> Implements the logic for resolving a context and a URL path against a list of routes, possibly handling different HTTP methods via different handlers. RouteVerbResolver Handles a HTTP request by matching it against a route, possibly handling different HTTP methods via different handlers. RouteVerbResolverCollection Handles a HTTP request by matching it against a list of routes, possibly handling different HTTP methods via different handlers. RoutingModule A module that handles requests by resolving route / method pairs associated with handlers. RoutingModuleBase Base class for modules that handle requests by resolving route / method pairs associated with handlers. RoutingModuleExtensions Provides extension methods for RoutingModule . Enums RouteResolutionResult Represents the outcome of resolving a context and a path against a route. Delegates RouteHandler<TContext> Base class for callbacks used to handle routed requests. SyncRouteHandler<TContext> Base class for callbacks used to handle routed requests synchronously. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.SyncRouteHandler-1.html": {
    "href": "api/EmbedIO.Routing.SyncRouteHandler-1.html",
    "title": "Delegate SyncRouteHandler<TContext> | Unosquare EmbedIO",
    "keywords": "Delegate SyncRouteHandler<TContext> Base class for callbacks used to handle routed requests synchronously. Namespace : EmbedIO.Routing Syntax public delegate bool SyncRouteHandler<in TContext>(TContext context, RouteMatch route, CancellationToken cancellationToken); Parameters Type Name Description TContext context A IHttpContext interface representing the context of the request. RouteMatch route The matched route. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Boolean true if the request has been handled; otherwise, false . Type Parameters Name Description TContext The type of the context. See Also RouteMatch Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RouteVerbResolver.html": {
    "href": "api/EmbedIO.Routing.RouteVerbResolver.html",
    "title": "Class RouteVerbResolver | Unosquare EmbedIO",
    "keywords": "Class RouteVerbResolver Handles a HTTP request by matching it against a route, possibly handling different HTTP methods via different handlers. Inheritance Object RouteResolverBase < IHttpContext , HttpVerbs > RouteVerbResolver Inherited Members RouteResolverBase<IHttpContext, HttpVerbs>.Route RouteResolverBase<IHttpContext, HttpVerbs>.Add(HttpVerbs, RouteHandler<IHttpContext>) RouteResolverBase<IHttpContext, HttpVerbs>.Add(HttpVerbs, SyncRouteHandler<IHttpContext>) RouteResolverBase<IHttpContext, HttpVerbs>.Lock() RouteResolverBase<IHttpContext, HttpVerbs>.ResolveAsync(IHttpContext, String, CancellationToken) RouteResolverBase<IHttpContext, HttpVerbs>.GetContextData(IHttpContext) RouteResolverBase<IHttpContext, HttpVerbs>.MatchContextData(HttpVerbs, HttpVerbs) Namespace : EmbedIO.Routing Syntax public sealed class RouteVerbResolver : RouteResolverBase<IHttpContext, HttpVerbs> Constructors RouteVerbResolver(String) Initializes a new instance of the RouteVerbResolver class. Declaration public RouteVerbResolver(string route) Parameters Type Name Description String route The route to match URL paths against. Methods GetContextData(IHttpContext) Declaration protected override HttpVerbs GetContextData(IHttpContext context) Parameters Type Name Description IHttpContext context Returns Type Description HttpVerbs Overrides EmbedIO.Routing.RouteResolverBase<EmbedIO.IHttpContext, EmbedIO.HttpVerbs>.GetContextData(EmbedIO.IHttpContext) MatchContextData(HttpVerbs, HttpVerbs) Declaration protected override bool MatchContextData(HttpVerbs contextVerb, HttpVerbs handlerVerb) Parameters Type Name Description HttpVerbs contextVerb HttpVerbs handlerVerb Returns Type Description Boolean Overrides EmbedIO.Routing.RouteResolverBase<EmbedIO.IHttpContext, EmbedIO.HttpVerbs>.MatchContextData(EmbedIO.HttpVerbs, EmbedIO.HttpVerbs) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RouteResolverCollectionBase-3.html": {
    "href": "api/EmbedIO.Routing.RouteResolverCollectionBase-3.html",
    "title": "Class RouteResolverCollectionBase<TContext, TData, TResolver> | Unosquare EmbedIO",
    "keywords": "Class RouteResolverCollectionBase<TContext, TData, TResolver> Implements the logic for resolving a context and a URL path against a list of routes, possibly handling different HTTP methods via different handlers. Inheritance Object RouteResolverCollectionBase<TContext, TData, TResolver> RouteVerbResolverCollection Namespace : EmbedIO.Routing Syntax public abstract class RouteResolverCollectionBase<TContext, TData, TResolver> : ConfiguredObject where TResolver : RouteResolverBase<TContext, TData> Type Parameters Name Description TContext The type of the context. TData The type of the data used to select a suitable handler for a context. TResolver The type of the route resolver. Methods Add(TData, String, RouteHandler<TContext>) Associates some data and a route to a handler. Declaration public void Add(TData data, string route, RouteHandler<TContext> handler) Parameters Type Name Description TData data Data used to determine which contexts are suitable to be handled by handler . String route The route to match URL paths against. RouteHandler <TContext> handler A callback used to handle matching contexts. See Also ResolveAsync(TContext, String, CancellationToken) Add(TData, String, SyncRouteHandler<TContext>) Add (TData, RouteHandler <TContext>) Add(TData, String, SyncRouteHandler<TContext>) Associates some data and a route to a synchronous handler. Declaration public void Add(TData data, string route, SyncRouteHandler<TContext> handler) Parameters Type Name Description TData data Data used to determine which contexts are suitable to be handled by handler . String route The route to match URL paths against. SyncRouteHandler <TContext> handler A callback used to handle matching contexts. See Also ResolveAsync(TContext, String, CancellationToken) Add(TData, String, RouteHandler<TContext>) Add (TData, SyncRouteHandler <TContext>) CreateResolver(String) Called by Add(TData, String, RouteHandler<TContext>) and Add(TData, String, SyncRouteHandler<TContext>) to create an instance of TResolver that can resolve the specified route. If this method returns null , an is thrown by the calling method. Declaration protected abstract TResolver CreateResolver(string route) Parameters Type Name Description String route The route to resolve. Returns Type Description TResolver A newly-constructed instance of TResolver . Lock() Locks this collection, preventing further additions. Declaration public void Lock() OnBeforeLockConfiguration() Declaration protected override void OnBeforeLockConfiguration() OnResolverCalled(TContext, TResolver, RouteResolutionResult) Called by ResolveAsync(TContext, String, CancellationToken) when a resolver's ResolveAsync(TContext, String, CancellationToken) method has been called to resolve a context. This callback method may be used e.g. for logging or testing. Declaration protected virtual void OnResolverCalled(TContext context, TResolver resolver, RouteResolutionResult result) Parameters Type Name Description TContext context The context to handle. TResolver resolver The resolver just called. RouteResolutionResult result The result returned by resolver . ResolveAsync(TContext, String, CancellationToken) . ResolveAsync(TContext, String, CancellationToken) Asynchronously matches a URL path against Route ; if the match is successful, tries to handle the specified context using handlers selected according to data extracted from the context. Registered resolvers are tried in the same order they were added by calling . Declaration public Task<RouteResolutionResult> ResolveAsync(TContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description TContext context The context to handle. String path The URL path to match against Route . CancellationToken cancellationToken A use to cancel the operation. Returns Type Description Task < RouteResolutionResult > A , representing the ongoing operation, that will return a result in the form of one of the RouteResolutionResult constants. See Also ResolveAsync (TContext, String , CancellationToken ) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RouteHandlerAttribute.html": {
    "href": "api/EmbedIO.Routing.RouteHandlerAttribute.html",
    "title": "Class RouteHandlerAttribute | Unosquare EmbedIO",
    "keywords": "Class RouteHandlerAttribute Decorate methods within controllers with this attribute in order to make them callable from the Web API Module Method Must match the WebServerModule. Inheritance Object RouteHandlerAttribute Namespace : EmbedIO.Routing Syntax public class RouteHandlerAttribute : Attribute Constructors RouteHandlerAttribute(HttpVerbs, String) Initializes a new instance of the RouteHandlerAttribute class. Declaration public RouteHandlerAttribute(HttpVerbs verb, string route) Parameters Type Name Description HttpVerbs verb The verb. String route The route. Properties Route Gets the route handled by a method with this attribute. Declaration public string Route { get; } Property Value Type Description String Verb Gets the HTTP verb handled by a method with this attribute. Declaration public HttpVerbs Verb { get; } Property Value Type Description HttpVerbs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RouteHandler-1.html": {
    "href": "api/EmbedIO.Routing.RouteHandler-1.html",
    "title": "Delegate RouteHandler<TContext> | Unosquare EmbedIO",
    "keywords": "Delegate RouteHandler<TContext> Base class for callbacks used to handle routed requests. Namespace : EmbedIO.Routing Syntax public delegate Task<bool> RouteHandler<in TContext>(TContext context, RouteMatch route, CancellationToken cancellationToken); Parameters Type Name Description TContext context A IHttpContext interface representing the context of the request. RouteMatch route The matched route. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > A representing the ongoing operation, whose result will tell whether the request has been handled. Type Parameters Name Description TContext The type of the context. See Also RouteMatch Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.IHttpResponse.html": {
    "href": "api/EmbedIO.IHttpResponse.html",
    "title": "Interface IHttpResponse | Unosquare EmbedIO",
    "keywords": "Interface IHttpResponse Interface to create a HTTP Response. Inherited Members IHttpMessage.Cookies IHttpMessage.ProtocolVersion Namespace : EmbedIO Syntax public interface IHttpResponse : IHttpMessage Properties ContentEncoding Gets or sets the content encoding. Declaration Encoding ContentEncoding { get; } Property Value Type Description Encoding The content encoding. ContentLength64 Gets or sets the content length. Declaration long ContentLength64 { get; set; } Property Value Type Description Int64 The content length. ContentType Gets or sets the type of the content. Declaration string ContentType { get; set; } Property Value Type Description String The type of the content. Headers Gets the response headers. Declaration WebHeaderCollection Headers { get; } Property Value Type Description WebHeaderCollection The headers. KeepAlive Gets or sets a value indicating whether [keep alive]. Declaration bool KeepAlive { get; set; } Property Value Type Description Boolean true if [keep alive]; otherwise, false . OutputStream Gets the output stream. Declaration Stream OutputStream { get; } Property Value Type Description Stream The output stream. StatusCode Gets or sets the status code. Declaration int StatusCode { get; set; } Property Value Type Description Int32 The status code. StatusDescription Gets or sets a text description of the HTTP status code. Declaration string StatusDescription { get; set; } Property Value Type Description String The status description. Methods AddHeader(String, String) Adds a response header. Declaration void AddHeader(string name, string value) Parameters Type Name Description String name The header name. String value The value. Close() Closes this instance and dispose the resources. Declaration void Close() SetCookie(Cookie) Sets the cookie. Declaration void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie The session cookie. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.IHttpRequest.html": {
    "href": "api/EmbedIO.IHttpRequest.html",
    "title": "Interface IHttpRequest | Unosquare EmbedIO",
    "keywords": "Interface IHttpRequest Interface to create a HTTP Request. Inherited Members IHttpMessage.Cookies IHttpMessage.ProtocolVersion Namespace : EmbedIO Syntax public interface IHttpRequest : IHttpMessage Properties ContentEncoding Gets the content encoding. Declaration Encoding ContentEncoding { get; } Property Value Type Description Encoding ContentLength64 Gets the content length. Declaration long ContentLength64 { get; } Property Value Type Description Int64 ContentType Gets the type of the content. Declaration string ContentType { get; } Property Value Type Description String HasEntityBody Gets a value indicating whether this instance has entity body. Declaration bool HasEntityBody { get; } Property Value Type Description Boolean Headers Gets the request headers. Declaration NameValueCollection Headers { get; } Property Value Type Description NameValueCollection HttpMethod Gets the HTTP method. Declaration string HttpMethod { get; } Property Value Type Description String HttpVerb Gets a HttpVerbs constant representing the HTTP method of the request. Declaration HttpVerbs HttpVerb { get; } Property Value Type Description HttpVerbs InputStream Gets the input stream. Declaration Stream InputStream { get; } Property Value Type Description Stream IsAuthenticated Gets a value indicating whether this instance is authenticated. Declaration bool IsAuthenticated { get; } Property Value Type Description Boolean IsLocal Gets a value indicating whether this instance is local. Declaration bool IsLocal { get; } Property Value Type Description Boolean IsSecureConnection Gets a value indicating whether this request has been received over a SSL connection. Declaration bool IsSecureConnection { get; } Property Value Type Description Boolean IsWebSocketRequest Gets a value indicating whether this instance is web socket request. Declaration bool IsWebSocketRequest { get; } Property Value Type Description Boolean KeepAlive Gets a value indicating whether [keep alive]. Declaration bool KeepAlive { get; } Property Value Type Description Boolean LocalEndPoint Gets the local end point. Declaration IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint QueryString Gets the query string. Declaration NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection RawUrl Gets the raw URL. Declaration string RawUrl { get; } Property Value Type Description String RemoteEndPoint Gets the remote end point. Declaration IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint RequestTraceIdentifier Gets the request identifier of the incoming HTTP request. Declaration Guid RequestTraceIdentifier { get; } Property Value Type Description Guid Url Gets the URL. Declaration Uri Url { get; } Property Value Type Description Uri UrlReferrer Gets the URL referrer. Declaration Uri UrlReferrer { get; } Property Value Type Description Uri UserAgent Gets the user agent. Declaration string UserAgent { get; } Property Value Type Description String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.HttpStatusDescription.html": {
    "href": "api/EmbedIO.HttpStatusDescription.html",
    "title": "Class HttpStatusDescription | Unosquare EmbedIO",
    "keywords": "Class HttpStatusDescription Provides standard HTTP status descriptions. Data contained in this class comes from the following sources: RFC7231 Section 6 (HTTP/1.1 Semantics and Content) RFC6585 (Additional HTTP Status Codes) RFC2774 Section 7 (An HTTP Extension Framework) RFC7540 Section 9.1.2 (HTTP/2) RFC4918 Section 11 (WebDAV) RFC5842 Section 7 (Binding Extensions to WebDAV) RFC7538 Section 3 (HTTP Status Code 308) RFC3229 Section 10.4.1 (Delta encoding in HTTP) RFC8297 Section 2 (Early Hints) RFC7725 Section 3 (HTTP-status-451) RFC2295 Section 8.1 (Transparent Content Negotiation) Inheritance Object HttpStatusDescription Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class HttpStatusDescription Methods Get(HttpStatusCode) Returns the standard status description for a . Declaration public static string Get(HttpStatusCode code) Parameters Type Name Description HttpStatusCode code The HTTP status code for which the standard description is to be retrieved. Returns Type Description String The standard HTTP status description for the specified code if it was found, or null if it was not found. Get(Int32) Returns the standard status description for a HTTP status code specified as an langword_csharp_int . Declaration public static string Get(int code) Parameters Type Name Description Int32 code The HTTP status code for which the standard description is to be retrieved. Returns Type Description String The standard HTTP status description for the specified code if it was found, or null if it was not found. TryGet(HttpStatusCode, out String) Attempts to get the standard status description for a . Declaration public static bool TryGet(HttpStatusCode code, out string description) Parameters Type Name Description HttpStatusCode code The HTTP status code for which the standard description is to be retrieved. String description When this method returns, the standard HTTP status description for the specified code if it was found, or null if it was not found. This parameter is passed uninitialized. Returns Type Description Boolean true if the specified code was found in the list of HTTP status codes for which the standard description is known; otherwise, false . See Also TryGet(Int32, out String) Get(HttpStatusCode) TryGet(Int32, out String) Attempts to get the standard status description for a HTTP status code specified as an langword_csharp_int . Declaration public static bool TryGet(int code, out string description) Parameters Type Name Description Int32 code The HTTP status code for which the standard description is to be retrieved. String description When this method returns, the standard HTTP status description for the specified code if it was found, or null if it was not found. This parameter is passed uninitialized. Returns Type Description Boolean true if the specified code was found in the list of HTTP status codes for which the standard description is known; otherwise, false . See Also TryGet(HttpStatusCode, out String) Get(Int32) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Actions.ActionModule.html": {
    "href": "api/EmbedIO.Actions.ActionModule.html",
    "title": "Class ActionModule | Unosquare EmbedIO",
    "keywords": "Class ActionModule A module that passes requests to a callback. Inheritance Object WebModuleBase ActionModule Implements IWebModule Inherited Members WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Actions Syntax public class ActionModule : WebModuleBase, IWebModule Constructors ActionModule(WebHandler) Initializes a new instance of the ActionModule class. Declaration public ActionModule(WebHandler handler) Parameters Type Name Description WebHandler handler The handler. ActionModule(String, HttpVerbs, WebHandler) Initializes a new instance of the ActionModule class. Declaration public ActionModule(string baseUrlPath, HttpVerbs verb, WebHandler handler) Parameters Type Name Description String baseUrlPath The base URL path. HttpVerbs verb The HTTP verb that will be served by this module. WebHandler handler The callback used to handle requests. See Also WebModuleBase(String) Methods OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected override Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Overrides WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. Implements IWebModule See Also WebModuleBase Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.ComponentCollection-1.html": {
    "href": "api/EmbedIO.Utilities.ComponentCollection-1.html",
    "title": "Class ComponentCollection<T> | Unosquare EmbedIO",
    "keywords": "Class ComponentCollection<T> Implements a collection of components. Each component in the collection may be given a unique name for later retrieval. Inheritance Object ConfiguredObject ComponentCollection<T> DisposableComponentCollection<T> Implements IComponentCollection <T> IReadOnlyList <T> Inherited Members ConfiguredObject.ConfigurationLocked ConfiguredObject.LockConfiguration() ConfiguredObject.OnBeforeLockConfiguration() ConfiguredObject.EnsureConfigurationNotLocked() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public class ComponentCollection<T> : ConfiguredObject, IComponentCollection<T>, IReadOnlyList<T> Type Parameters Name Description T The type of components in the collection. Constructors ComponentCollection() Initializes a new instance of the ComponentCollection<T> class. Declaration public ComponentCollection() Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T Item[String] Declaration public T this[string key] { get; } Parameters Type Name Description String key Property Value Type Description T Named Declaration public IReadOnlyDictionary<string, T> Named { get; } Property Value Type Description IReadOnlyDictionary < String , T> WithSafeNames Declaration public IReadOnlyList<(string SafeName, T Component)> WithSafeNames { get; } Property Value Type Description IReadOnlyList < ValueTuple < String , T>> Methods Add(String, T) Declaration public void Add(string name, T component) Parameters Type Name Description String name T component GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> Lock() Locks the collection, preventing further additions. Declaration public void Lock() Implements IComponentCollection<T> IReadOnlyList<> See Also IComponentCollection <T> Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Tests.html": {
    "href": "api/EmbedIO.Tests.html",
    "title": "Namespace EmbedIO.Tests | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Tests Classes TestHttpClient Represents a HTTP Client for unit testing. TestHttpRequest Represents an IHttpRequest implementation for unit testing. TestHttpResponse Represents an IHttpResponse implementation for unit testing. TestWebServer Represents our tiny web server used to handle requests for testing environments. Use this IWebServer implementation to run your unit tests. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Tests.TestWebServer.html": {
    "href": "api/EmbedIO.Tests.TestWebServer.html",
    "title": "Class TestWebServer | Unosquare EmbedIO",
    "keywords": "Class TestWebServer Represents our tiny web server used to handle requests for testing environments. Use this IWebServer implementation to run your unit tests. Inheritance Object WebServerBase TestWebServer Implements IWebServer IWebModuleContainer IDisposable Inherited Members WebServerBase.StateChanged WebServerBase.Modules WebServerBase.SessionManager WebServerBase.State WebServerBase.RunAsync(CancellationToken) WebServerBase.Dispose() WebServerBase.OnBeforeLockConfiguration() WebServerBase.Prepare(CancellationToken) Namespace : EmbedIO.Tests Syntax public class TestWebServer : WebServerBase, IWebServer, IWebModuleContainer, IDisposable Constructors TestWebServer() Initializes a new instance of the TestWebServer class. Declaration public TestWebServer() Methods Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides WebServerBase.Dispose(Boolean) GetClient() Gets the test HTTP Client. Declaration public TestHttpClient GetClient() Returns Type Description TestHttpClient A new instance of the TestHttpClient. GetContextAsync(CancellationToken) Asynchronously waits for a request, accepts it, and returns a newly-constructed HTTP context. Declaration protected override Task<IHttpContextImpl> GetContextAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. Returns Type Description Task < IHttpContextImpl > An awaitable that returns a HTTP context. Overrides WebServerBase.GetContextAsync(CancellationToken) OnFatalException() Called when an exception is caught in the web server's request processing loop. This method should tell the server socket to stop accepting further requests. Declaration protected override void OnFatalException() Overrides WebServerBase.OnFatalException() ShouldProcessMoreRequests() Tells whether a web server should continue processing requests. This method is call each time before trying to accept a request. Declaration protected override bool ShouldProcessMoreRequests() Returns Type Description Boolean true if the web server should continue processing requests; otherwise, false . Overrides WebServerBase.ShouldProcessMoreRequests() Implements IWebServer IWebModuleContainer IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Tests.TestHttpResponse.html": {
    "href": "api/EmbedIO.Tests.TestHttpResponse.html",
    "title": "Class TestHttpResponse | Unosquare EmbedIO",
    "keywords": "Class TestHttpResponse Represents an IHttpResponse implementation for unit testing. Inheritance Object TestHttpResponse Implements IHttpResponse IHttpMessage IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Tests Syntax public sealed class TestHttpResponse : IHttpResponse, IHttpMessage, IDisposable Properties Body Gets the body. Declaration public byte[] Body { get; } Property Value Type Description Byte [] The body. ContentEncoding Gets or sets the content encoding. Declaration public Encoding ContentEncoding { get; } Property Value Type Description Encoding The content encoding. ContentLength64 Gets or sets the content length. Declaration public long ContentLength64 { get; set; } Property Value Type Description Int64 The content length. ContentType Gets or sets the type of the content. Declaration public string ContentType { get; set; } Property Value Type Description String The type of the content. Cookies Gets the cookies. Declaration public ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. Headers Gets the response headers. Declaration public WebHeaderCollection Headers { get; } Property Value Type Description WebHeaderCollection The headers. Remarks The used by this class is not exactly the same as the one used by KeepAlive Gets or sets a value indicating whether [keep alive]. Declaration public bool KeepAlive { get; set; } Property Value Type Description Boolean true if [keep alive]; otherwise, false . OutputStream Gets the output stream. Declaration public Stream OutputStream { get; } Property Value Type Description Stream The output stream. ProtocolVersion Gets or sets the protocol version. Declaration public Version ProtocolVersion { get; } Property Value Type Description Version The protocol version. StatusCode Gets or sets the status code. Declaration public int StatusCode { get; set; } Property Value Type Description Int32 The status code. StatusDescription Gets or sets a text description of the HTTP status code. Declaration public string StatusDescription { get; set; } Property Value Type Description String The status description. Methods AddHeader(String, String) Adds a response header. Declaration public void AddHeader(string headerName, string value) Parameters Type Name Description String headerName String value The value. Close() Closes this instance and dispose the resources. Declaration public void Close() Dispose() Declaration public void Dispose() Finalize() Finalizes an instance of the TestHttpResponse class. Declaration protected void Finalize() GetBodyAsString(Encoding) Gets the body as string. Declaration public string GetBodyAsString(Encoding encoding = null) Parameters Type Name Description Encoding encoding The encoding. Returns Type Description String A string from the body. SetCookie(Cookie) Sets the cookie. Declaration public void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie The session cookie. Implements IHttpResponse IHttpMessage IDisposable See Also IHttpResponse Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Sessions.SessionExtensions.html": {
    "href": "api/EmbedIO.Sessions.SessionExtensions.html",
    "title": "Class SessionExtensions | Unosquare EmbedIO",
    "keywords": "Class SessionExtensions Provides extension methods for types implementing ISession . Inheritance Object SessionExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Sessions Syntax public static class SessionExtensions Methods GetValue<T>(ISession, String) Gets the value associated with the specified key. Declaration public static T GetValue<T>(this ISession this, string key) Parameters Type Name Description ISession this The ISession on which this method is called. String key The key whose value to get from the session. Returns Type Description T The value associated with the specified key, if the key is found and the associated value is of type T ; otherwise, the default value for T . Type Parameters Name Description T The desired type of the value. TryGetValue<T>(ISession, String, out T) Gets the value associated with the specified key. Declaration public static bool TryGetValue<T>(this ISession this, string key, out T value) Parameters Type Name Description ISession this The ISession on which this method is called. String key The key whose value to get from the session. T value When this method returns, the value associated with the specified key, if the key is found and the associated value is of type T ; otherwise, the default value for T . This parameter is passed uninitialized. Returns Type Description Boolean true if the key is found and the associated value is of type T ; otherwise, false . Type Parameters Name Description T The desired type of the value. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Sessions.Session.html": {
    "href": "api/EmbedIO.Sessions.Session.html",
    "title": "Class Session | Unosquare EmbedIO",
    "keywords": "Class Session Inheritance Object Session Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Sessions Syntax public static class Session Fields IdComparer The equality comparer used for session IDs. Corresponds to . Declaration public static readonly IEqualityComparer<string> IdComparer Field Value Type Description IEqualityComparer < String > IdComparison The used to disambiguate session IDs. Corresponds to . Declaration public const StringComparison IdComparison = null Field Value Type Description StringComparison KeyComparer The equality comparer used for session keys. Corresponds to . Declaration public static readonly IEqualityComparer<string> KeyComparer Field Value Type Description IEqualityComparer < String > KeyComparison The used to disambiguate session keys. Corresponds to . Declaration public const StringComparison KeyComparison = null Field Value Type Description StringComparison Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Sessions.LocalSessionManager.html": {
    "href": "api/EmbedIO.Sessions.LocalSessionManager.html",
    "title": "Class LocalSessionManager | Unosquare EmbedIO",
    "keywords": "Class LocalSessionManager A simple session manager to handle in-memory sessions. Not for intensive use or for distributed applications. Inheritance Object LocalSessionManager Implements ISessionManager Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Sessions Syntax public class LocalSessionManager : ISessionManager Constructors LocalSessionManager() Initializes a new instance of the LocalSessionManager class with default values for all properties. Declaration public LocalSessionManager() See Also DefaultSessionDuration DefaultPurgeInterval DefaultCookieName DefaultCookiePath DefaultCookieDuration DefaultCookieHttpOnly Fields DefaultCookieDuration The default duration for session cookies, i.e. . Declaration public static readonly TimeSpan DefaultCookieDuration Field Value Type Description TimeSpan DefaultCookieHttpOnly The default HTTP-only flag for session cookies, i.e. true . Declaration public const bool DefaultCookieHttpOnly = true Field Value Type Description Boolean DefaultCookieName The default name for session cookies, i.e. \"__session\" . Declaration public const string DefaultCookieName = \"__session\" Field Value Type Description String DefaultCookiePath The default path for session cookies, i.e. \"/\" . Declaration public const string DefaultCookiePath = null Field Value Type Description String DefaultPurgeInterval The default interval between automatic purges of expired and empty sessions, i.e. 30 seconds. Declaration public static readonly TimeSpan DefaultPurgeInterval Field Value Type Description TimeSpan DefaultSessionDuration The default duration for sessions, i.e. 30 minutes. Declaration public static readonly TimeSpan DefaultSessionDuration Field Value Type Description TimeSpan Properties CookieDuration Gets or sets the duration of session cookies. Declaration public TimeSpan CookieDuration { get; set; } Property Value Type Description TimeSpan See Also DefaultCookieDuration CookieHttpOnly Gets or sets a value indicating whether session cookies are hidden from Javascript code running on a user agent. Declaration public bool CookieHttpOnly { get; set; } Property Value Type Description Boolean See Also DefaultCookieHttpOnly CookieName Gets or sets the name for session cookies. Declaration public string CookieName { get; set; } Property Value Type Description String See Also DefaultCookieName CookiePath Gets or sets the path for session cookies. Declaration public string CookiePath { get; set; } Property Value Type Description String See Also DefaultCookiePath PurgeInterval Gets or sets the interval between purges of expired sessions. Declaration public TimeSpan PurgeInterval { get; set; } Property Value Type Description TimeSpan See Also DefaultPurgeInterval SessionDuration Gets or sets the duration of newly-created sessions. Declaration public TimeSpan SessionDuration { get; set; } Property Value Type Description TimeSpan See Also DefaultSessionDuration Methods Create(IHttpContext) Returns the session associated with a IHttpContext . If a session ID can be retrieved for the context and stored session data are available, the returned ISession will contain those data; otherwise, a new session is created and its ID is stored in the response to be retrieved by subsequent requests. Declaration public ISession Create(IHttpContext context) Parameters Type Name Description IHttpContext context The HTTP context. Returns Type Description ISession A ISession interface. Delete(IHttpContext, String) Deletes the session (if any) associated with the specified context and removes the session's ID from the context. Declaration public void Delete(IHttpContext context, string id) Parameters Type Name Description IHttpContext context The HTTP context. String id The unique ID of the session. See Also Id OnContextClose(IHttpContext) Called by a session proxy when a session has been obtained for a IHttpContext and the context is closed, even if the session was subsequently deleted. This method can be used to save session data to a storage medium. Declaration public void OnContextClose(IHttpContext context) Parameters Type Name Description IHttpContext context The IHttpContext for which a session was obtained. Start(CancellationToken) Signals a session manager that the web server is starting. Declaration public void Start(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token used to stop the web server. Implements ISessionManager Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Sessions.ISessionProxy.html": {
    "href": "api/EmbedIO.Sessions.ISessionProxy.html",
    "title": "Interface ISessionProxy | Unosquare EmbedIO",
    "keywords": "Interface ISessionProxy Represents a session proxy, i.e. an object that provides the same interface as a session object, plus a basic interface to a session manager. Inherited Members ISession.Id ISession.Duration ISession.LastActivity Namespace : EmbedIO.Sessions Syntax public interface ISessionProxy : ISession, IDataDictionary<string, object> Remarks A session proxy can be used just as if it were a session object. A session is automatically created wherever its data are accessed. Properties Exists Gets a value indicating whether a session exists for the current context. Declaration bool Exists { get; } Property Value Type Description Boolean true if a session exists; otherwise, false . Methods Delete() Deletes the session for the current context. Declaration void Delete() Regenerate() Deletes the session for the current context and creates a new one. Declaration void Regenerate() See Also ISession Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RoutingModuleExtensions.html": {
    "href": "api/EmbedIO.Routing.RoutingModuleExtensions.html",
    "title": "Class RoutingModuleExtensions | Unosquare EmbedIO",
    "keywords": "Class RoutingModuleExtensions Provides extension methods for RoutingModule . Inheritance Object RoutingModuleExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Routing Syntax public static class RoutingModuleExtensions Methods Handle(RoutingModule, HttpVerbs, String, RouteHandler<IHttpContext>) Adds a handler to a RoutingModule . Declaration public static RoutingModule Handle(this RoutingModule this, HttpVerbs verb, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. HttpVerbs verb A HttpVerbs constant representing the HTTP method to associate with handler , or Any if handler can handle all HTTP methods. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. See Also Add(HttpVerbs, String, RouteHandler<IHttpContext>) Handle(RoutingModule, HttpVerbs, String, SyncRouteHandler<IHttpContext>) Adds a synchronous handler to a RoutingModule . Declaration public static RoutingModule Handle(this RoutingModule this, HttpVerbs verb, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. HttpVerbs verb A HttpVerbs constant representing the HTTP method to associate with handler , or Any if handler can handle all HTTP methods. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. See Also Add(HttpVerbs, String, SyncRouteHandler<IHttpContext>) OnAny(RoutingModule, String, RouteHandler<IHttpContext>) Associates all requests matching a route to a handler. Declaration public static RoutingModule OnAny(this RoutingModule this, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnAny(RoutingModule, String, SyncRouteHandler<IHttpContext>) Associates all requests matching a route to a synchronous handler. Declaration public static RoutingModule OnAny(this RoutingModule this, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnDelete(RoutingModule, String, RouteHandler<IHttpContext>) Associates DELETE requests matching a route to a handler. Declaration public static RoutingModule OnDelete(this RoutingModule this, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnDelete(RoutingModule, String, SyncRouteHandler<IHttpContext>) Associates DELETE requests matching a route to a synchronous handler. Declaration public static RoutingModule OnDelete(this RoutingModule this, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnGet(RoutingModule, String, RouteHandler<IHttpContext>) Associates GET requests matching a route to a handler. Declaration public static RoutingModule OnGet(this RoutingModule this, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnGet(RoutingModule, String, SyncRouteHandler<IHttpContext>) Associates GET requests matching a route to a synchronous handler. Declaration public static RoutingModule OnGet(this RoutingModule this, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnHead(RoutingModule, String, RouteHandler<IHttpContext>) Associates HEAD requests matching a route to a handler. Declaration public static RoutingModule OnHead(this RoutingModule this, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnHead(RoutingModule, String, SyncRouteHandler<IHttpContext>) Associates HEAD requests matching a route to a synchronous handler. Declaration public static RoutingModule OnHead(this RoutingModule this, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnOptions(RoutingModule, String, RouteHandler<IHttpContext>) Associates OPTIONS requests matching a route to a handler. Declaration public static RoutingModule OnOptions(this RoutingModule this, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnOptions(RoutingModule, String, SyncRouteHandler<IHttpContext>) Associates OPTIONS requests matching a route to a synchronous handler. Declaration public static RoutingModule OnOptions(this RoutingModule this, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnPatch(RoutingModule, String, RouteHandler<IHttpContext>) Associates PATCH requests matching a route to a handler. Declaration public static RoutingModule OnPatch(this RoutingModule this, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnPatch(RoutingModule, String, SyncRouteHandler<IHttpContext>) Associates PATCH requests matching a route to a synchronous handler. Declaration public static RoutingModule OnPatch(this RoutingModule this, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnPost(RoutingModule, String, RouteHandler<IHttpContext>) Associates POST requests matching a route to a handler. Declaration public static RoutingModule OnPost(this RoutingModule this, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnPost(RoutingModule, String, SyncRouteHandler<IHttpContext>) Associates POST requests matching a route to a synchronous handler. Declaration public static RoutingModule OnPost(this RoutingModule this, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnPut(RoutingModule, String, RouteHandler<IHttpContext>) Associates PUT requests matching a route to a handler. Declaration public static RoutingModule OnPut(this RoutingModule this, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. OnPut(RoutingModule, String, SyncRouteHandler<IHttpContext>) Associates PUT requests matching a route to a synchronous handler. Declaration public static RoutingModule OnPut(this RoutingModule this, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. Returns Type Description RoutingModule this with the handler added. WithHandlersFrom(RoutingModule, Object) Adds handlers, associating them with HTTP method / route pairs by means of RouteHandlerAttribute attributes. See AddFrom(Object) for further information. Declaration public static RoutingModule WithHandlersFrom(this RoutingModule this, object target) Parameters Type Name Description RoutingModule this The RoutingModule on which this method is called. Object target Where to look for compatible handlers. Returns Type Description RoutingModule this with handlers added. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RoutingModuleBase.html": {
    "href": "api/EmbedIO.Routing.RoutingModuleBase.html",
    "title": "Class RoutingModuleBase | Unosquare EmbedIO",
    "keywords": "Class RoutingModuleBase Base class for modules that handle requests by resolving route / method pairs associated with handlers. Inheritance Object WebModuleBase RoutingModuleBase RoutingModule Implements IWebModule Inherited Members WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Routing Syntax public abstract class RoutingModuleBase : WebModuleBase, IWebModule Constructors RoutingModuleBase(String) Initializes a new instance of the RoutingModuleBase class. Declaration protected RoutingModuleBase(string baseUrlPath) Parameters Type Name Description String baseUrlPath Methods AddHandler(HttpVerbs, String, RouteHandler<IHttpContext>) Associates a HTTP method and a route to a handler. Declaration protected void AddHandler(HttpVerbs verb, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description HttpVerbs verb A HttpVerbs constant representing the HTTP method to associate with handler , or Any if handler can handle all HTTP methods. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. AddHandler(HttpVerbs, String, SyncRouteHandler<IHttpContext>) Associates a HTTP method and a route to a synchronous handler. Declaration protected void AddHandler(HttpVerbs verb, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description HttpVerbs verb A HttpVerbs constant representing the HTTP method to associate with handler , or Any if handler can handle all HTTP methods. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. AddHandlersFrom(Object) Adds handlers, associating them with HTTP method / route pairs by means of RouteHandlerAttribute attributes. See AddFrom(Object) for further information. Declaration protected int AddHandlersFrom(object target) Parameters Type Name Description Object target Where to look for compatible handlers. Returns Type Description Int32 The number of handlers that were added. OnAny(String, RouteHandler<IHttpContext>) Associates all requests matching a route to a handler. Declaration protected void OnAny(string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnAny(String, SyncRouteHandler<IHttpContext>) Associates all requests matching a route to a synchronous handler. Declaration protected void OnAny(string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnDelete(String, RouteHandler<IHttpContext>) Associates DELETE requests matching a route to a handler. Declaration protected void OnDelete(string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnDelete(String, SyncRouteHandler<IHttpContext>) Associates DELETE requests matching a route to a synchronous handler. Declaration protected void OnDelete(string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnGet(String, RouteHandler<IHttpContext>) Associates GET requests matching a route to a handler. Declaration protected void OnGet(string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnGet(String, SyncRouteHandler<IHttpContext>) Associates GET requests matching a route to a synchronous handler. Declaration protected void OnGet(string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnHead(String, RouteHandler<IHttpContext>) Associates HEAD requests matching a route to a handler. Declaration protected void OnHead(string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnHead(String, SyncRouteHandler<IHttpContext>) Associates HEAD requests matching a route to a synchronous handler. Declaration protected void OnHead(string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnMethodNotAllowedAsync(IHttpContext, String, CancellationToken) Called when at least one route is matched for the requested URL path, but none of them is associated with the HTTP method of the request. The default behavior is to send an empty 405 Method Not Allowed response. Declaration protected virtual Task<bool> OnMethodNotAllowedAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. OnOptions(String, RouteHandler<IHttpContext>) Associates OPTIONS requests matching a route to a handler. Declaration protected void OnOptions(string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnOptions(String, SyncRouteHandler<IHttpContext>) Associates OPTIONS requests matching a route to a synchronous handler. Declaration protected void OnOptions(string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnPatch(String, RouteHandler<IHttpContext>) Associates PATCH requests matching a route to a handler. Declaration protected void OnPatch(string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnPatch(String, SyncRouteHandler<IHttpContext>) Associates PATCH requests matching a route to a synchronous handler. Declaration protected void OnPatch(string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnPathNotFoundAsync(IHttpContext, String, CancellationToken) Called when no route is matched for the requested URL path. The default behavior is to send an empty 404 Not Found response. Declaration protected virtual Task<bool> OnPathNotFoundAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. OnPost(String, RouteHandler<IHttpContext>) Associates POST requests matching a route to a handler. Declaration protected void OnPost(string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnPost(String, SyncRouteHandler<IHttpContext>) Associates POST requests matching a route to a synchronous handler. Declaration protected void OnPost(string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnPut(String, RouteHandler<IHttpContext>) Associates PUT requests matching a route to a handler. Declaration protected void OnPut(string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnPut(String, SyncRouteHandler<IHttpContext>) Associates PUT requests matching a route to a synchronous handler. Declaration protected void OnPut(string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected override Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Overrides WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. Implements IWebModule See Also WebModuleBase Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RoutingModule.html": {
    "href": "api/EmbedIO.Routing.RoutingModule.html",
    "title": "Class RoutingModule | Unosquare EmbedIO",
    "keywords": "Class RoutingModule A module that handles requests by resolving route / method pairs associated with handlers. Inheritance Object WebModuleBase RoutingModuleBase RoutingModule Implements IWebModule Inherited Members RoutingModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) RoutingModuleBase.AddHandler(HttpVerbs, String, RouteHandler<IHttpContext>) RoutingModuleBase.AddHandler(HttpVerbs, String, SyncRouteHandler<IHttpContext>) RoutingModuleBase.AddHandlersFrom(Object) RoutingModuleBase.OnAny(String, RouteHandler<IHttpContext>) RoutingModuleBase.OnAny(String, SyncRouteHandler<IHttpContext>) RoutingModuleBase.OnDelete(String, RouteHandler<IHttpContext>) RoutingModuleBase.OnDelete(String, SyncRouteHandler<IHttpContext>) RoutingModuleBase.OnGet(String, RouteHandler<IHttpContext>) RoutingModuleBase.OnGet(String, SyncRouteHandler<IHttpContext>) RoutingModuleBase.OnHead(String, RouteHandler<IHttpContext>) RoutingModuleBase.OnHead(String, SyncRouteHandler<IHttpContext>) RoutingModuleBase.OnOptions(String, RouteHandler<IHttpContext>) RoutingModuleBase.OnOptions(String, SyncRouteHandler<IHttpContext>) RoutingModuleBase.OnPatch(String, RouteHandler<IHttpContext>) RoutingModuleBase.OnPatch(String, SyncRouteHandler<IHttpContext>) RoutingModuleBase.OnPost(String, RouteHandler<IHttpContext>) RoutingModuleBase.OnPost(String, SyncRouteHandler<IHttpContext>) RoutingModuleBase.OnPut(String, RouteHandler<IHttpContext>) RoutingModuleBase.OnPut(String, SyncRouteHandler<IHttpContext>) RoutingModuleBase.OnPathNotFoundAsync(IHttpContext, String, CancellationToken) RoutingModuleBase.OnMethodNotAllowedAsync(IHttpContext, String, CancellationToken) WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Routing Syntax public class RoutingModule : RoutingModuleBase, IWebModule Constructors RoutingModule(String) Initializes a new instance of the RoutingModule class. Declaration public RoutingModule(string baseUrlPath) Parameters Type Name Description String baseUrlPath Methods Add(HttpVerbs, String, RouteHandler<IHttpContext>) Associates a HTTP method and a route to a handler. Declaration public void Add(HttpVerbs verb, string route, RouteHandler<IHttpContext> handler) Parameters Type Name Description HttpVerbs verb A HttpVerbs constant representing the HTTP method to associate with handler , or Any if handler can handle all HTTP methods. String route The route to match URL paths against. RouteHandler < IHttpContext > handler A callback used to handle matching contexts. Add(HttpVerbs, String, SyncRouteHandler<IHttpContext>) Associates a HTTP method and a route to a synchronous handler. Declaration public void Add(HttpVerbs verb, string route, SyncRouteHandler<IHttpContext> handler) Parameters Type Name Description HttpVerbs verb A HttpVerbs constant representing the HTTP method to associate with handler , or Any if handler can handle all HTTP methods. String route The route to match URL paths against. SyncRouteHandler < IHttpContext > handler A callback used to handle matching contexts. AddFrom(Object) Adds handlers, associating them with HTTP method / route pairs by means of RouteHandlerAttribute attributes. See AddFrom(Object) for further information. Declaration public int AddFrom(object target) Parameters Type Name Description Object target Where to look for compatible handlers. Returns Type Description Int32 The number of handlers that were added. Implements IWebModule See Also WebModuleBase Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RouteVerbResolverCollection.html": {
    "href": "api/EmbedIO.Routing.RouteVerbResolverCollection.html",
    "title": "Class RouteVerbResolverCollection | Unosquare EmbedIO",
    "keywords": "Class RouteVerbResolverCollection Handles a HTTP request by matching it against a list of routes, possibly handling different HTTP methods via different handlers. Inheritance Object RouteResolverCollectionBase < IHttpContext , HttpVerbs , RouteVerbResolver > RouteVerbResolverCollection Inherited Members RouteResolverCollectionBase<IHttpContext, HttpVerbs, RouteVerbResolver>.Add(HttpVerbs, String, RouteHandler<IHttpContext>) RouteResolverCollectionBase<IHttpContext, HttpVerbs, RouteVerbResolver>.Add(HttpVerbs, String, SyncRouteHandler<IHttpContext>) RouteResolverCollectionBase<IHttpContext, HttpVerbs, RouteVerbResolver>.ResolveAsync(IHttpContext, String, CancellationToken) RouteResolverCollectionBase<IHttpContext, HttpVerbs, RouteVerbResolver>.Lock() RouteResolverCollectionBase<IHttpContext, HttpVerbs, RouteVerbResolver>.OnBeforeLockConfiguration() RouteResolverCollectionBase<IHttpContext, HttpVerbs, RouteVerbResolver>.CreateResolver(String) RouteResolverCollectionBase<IHttpContext, HttpVerbs, RouteVerbResolver>.OnResolverCalled(IHttpContext, RouteVerbResolver, RouteResolutionResult) Namespace : EmbedIO.Routing Syntax public sealed class RouteVerbResolverCollection : RouteResolverCollectionBase<IHttpContext, HttpVerbs, RouteVerbResolver> Methods AddFrom(Object) Adds handlers, associating them with HTTP method / route pairs by means of RouteHandlerAttribute attributes. A compatible handler is a static or instance method that takes 3 parameters having the following types, in order: IHttpContext RouteMatch The return type of a compatible handler may be either langword_csharp_bool or Task<bool> . A compatible handler, in order to be added to a RouteVerbResolverCollection , must have one or more RouteHandlerAttribute attributes. The same handler will be added once for each such attribute, either declared on the handler, or inherited (if the handler is a virtual method). This method behaves according to the type of the target parameter: if target is a , all public static methods of the type (either declared on the same type or inherited) that are compatible handlers will be added to the collection; if target is an , all public static methods of each exported type of the assembly (either declared on the same type or inherited) that are compatible handlers will be added to the collection; if target is a referring to a compatible handler, it will be added to the collection; if target is a langword_csharp_delegate whose Method refers to a compatible handler, that method will be added to the collection; if target is none of the above, all public instance methods of its type (either declared on the same type or inherited) that are compatible handlers will be bound to target and added to the collection. Declaration public int AddFrom(object target) Parameters Type Name Description Object target Where to look for compatible handlers. See the Summary section for more information. Returns Type Description Int32 The number of handlers that were added to the collection. Note that methods with multiple RouteHandlerAttribute attributes will count as one for each attribute. CreateResolver(String) Declaration protected override RouteVerbResolver CreateResolver(string route) Parameters Type Name Description String route Returns Type Description RouteVerbResolver Overrides EmbedIO.Routing.RouteResolverCollectionBase<EmbedIO.IHttpContext, EmbedIO.HttpVerbs, EmbedIO.Routing.RouteVerbResolver>.CreateResolver(System.String) OnResolverCalled(IHttpContext, RouteVerbResolver, RouteResolutionResult) Declaration protected override void OnResolverCalled(IHttpContext context, RouteVerbResolver resolver, RouteResolutionResult result) Parameters Type Name Description IHttpContext context RouteVerbResolver resolver RouteResolutionResult result Overrides EmbedIO.Routing.RouteResolverCollectionBase<EmbedIO.IHttpContext, EmbedIO.HttpVerbs, EmbedIO.Routing.RouteVerbResolver>.OnResolverCalled(EmbedIO.IHttpContext, EmbedIO.Routing.RouteVerbResolver, EmbedIO.Routing.RouteResolutionResult) See Also RouteResolverBase <TContext, TData> RouteVerbResolver Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.RouteResolverBase-2.html": {
    "href": "api/EmbedIO.Routing.RouteResolverBase-2.html",
    "title": "Class RouteResolverBase<TContext, TData> | Unosquare EmbedIO",
    "keywords": "Class RouteResolverBase<TContext, TData> Implements the logic for resolving a context and a URL path against a route, possibly handling different contexts via different handlers. Inheritance Object RouteResolverBase<TContext, TData> RouteVerbResolver Namespace : EmbedIO.Routing Syntax public abstract class RouteResolverBase<TContext, TData> : ConfiguredObject Type Parameters Name Description TContext The type of the context. TData The type of the data used to select a suitable handler for a context. Constructors RouteResolverBase(String) Initializes a new instance of the RouteResolverBase<TContext, TData> class. Declaration protected RouteResolverBase(string route) Parameters Type Name Description String route The route to match URL paths against. Properties Route Gets the route this resolver matches URL paths against. Declaration public string Route { get; } Property Value Type Description String Methods Add(TData, RouteHandler<TContext>) Associates some data to a handler. The ResolveAsync(TContext, String, CancellationToken) method calls GetContextData(TContext) to extract data from the context; then, for each registered data / handler pair, MatchContextData(TData, TData) is called to determine whether handler should be called. Declaration public void Add(TData data, RouteHandler<TContext> handler) Parameters Type Name Description TData data Data used to determine which contexts are suitable to be handled by handler . RouteHandler <TContext> handler A callback used to handle matching contexts. See Also RouteHandler <TContext> ResolveAsync(TContext, String, CancellationToken) GetContextData(TContext) MatchContextData(TData, TData) Add(TData, SyncRouteHandler<TContext>) Associates some data to a synchronous handler. The ResolveAsync(TContext, String, CancellationToken) method calls GetContextData(TContext) to extract data from the context; then, for each registered data / handler pair, MatchContextData(TData, TData) is called to determine whether handler should be called. Declaration public void Add(TData data, SyncRouteHandler<TContext> handler) Parameters Type Name Description TData data Data used to determine which contexts are suitable to be handled by handler . SyncRouteHandler <TContext> handler A callback used to handle matching contexts. See Also RouteHandler <TContext> ResolveAsync(TContext, String, CancellationToken) GetContextData(TContext) MatchContextData(TData, TData) GetContextData(TContext) Called by ResolveAsync(TContext, String, CancellationToken) to extract data from a context. The extracted data are then used to select which handlers are suitable to handle the context. Declaration protected abstract TData GetContextData(TContext context) Parameters Type Name Description TContext context The context to extract data from. Returns Type Description TData The extracted data. See Also ResolveAsync(TContext, String, CancellationToken) MatchContextData(TData, TData) Lock() Locks this instance, preventing further handler additions. Declaration public void Lock() MatchContextData(TData, TData) Called by ResolveAsync(TContext, String, CancellationToken) to match data extracted from a context against data associated with a handler. Declaration protected abstract bool MatchContextData(TData contextData, TData handlerData) Parameters Type Name Description TData contextData The data extracted from the context. TData handlerData The data associated with the handler. Returns Type Description Boolean true if the handler should be called to handle the context; otherwise, false . ResolveAsync(TContext, String, CancellationToken) Asynchronously matches a URL path against Route ; if the match is successful, tries to handle the specified context using handlers selected according to data extracted from the context. Registered data / handler pairs are tried in the same order they were added. Declaration public Task<RouteResolutionResult> ResolveAsync(TContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description TContext context The context to handle. String path The URL path to match against Route . CancellationToken cancellationToken A use to cancel the operation. Returns Type Description Task < RouteResolutionResult > A , representing the ongoing operation, that will return a result in the form of one of the RouteResolutionResult constants. See Also Add(TData, RouteHandler<TContext>) Add(TData, SyncRouteHandler<TContext>) GetContextData(TContext) MatchContextData(TData, TData) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.CompressionMethod.html": {
    "href": "api/EmbedIO.CompressionMethod.html",
    "title": "Enum CompressionMethod | Unosquare EmbedIO",
    "keywords": "Enum CompressionMethod Specifies the compression method used to compress a message on the SystemWebSocket connection. Namespace : EmbedIO Syntax public enum CompressionMethod : byte Remarks The compression methods that can be used are defined in Compression Extensions for SystemWebSocket . Fields Name Description Deflate Specifies \"Deflate\" compression. Gzip Specifies GZip compression. None Specifies no compression. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "wiki/Cookbook.html": {
    "href": "wiki/Cookbook.html",
    "title": "How to receive a Multi-part request | Unosquare EmbedIO",
    "keywords": "How to receive a Multi-part request You can receive multi-part request if you include this static method (from http://stackoverflow.com/questions/7460088/reading-file-input-from-a-multipart-form-data-post ): private static async Task ParseFiles(Stream data, string contentType, Action<string, Stream> fileProcessor) { var streamContent = new StreamContent(data); streamContent.Headers.ContentType = MediaTypeHeaderValue.Parse(contentType); var provider = await streamContent.ReadAsMultipartAsync(); foreach (var httpContent in provider.Contents) { var fileName = httpContent.Headers.ContentDisposition.FileName; if (string.IsNullOrWhiteSpace(fileName)) { continue; } using (var fileContents = await httpContent.ReadAsStreamAsync()) { fileProcessor(fileName.Replace(\"\\\"\", \"\"), fileContents); } } } You need to include WebApi Client Nuget . Also, you can check the HttpMultipartParser Nuget and connect the Request input directly to the HttpMultipartParser, very helpful and small. How to turn off logging EmbedIO uses SWAN 's Terminal to display all messages. You can disable them or change the verbosity by modifying the Terminal settings. Terminal.Settings.DisplayLoggingMessageType = LogMessageType.None; Samples and Gists itodorovic's Windows Forms minimal threading example"
  },
  "README.html": {
    "href": "README.html",
    "title": "Overview | Unosquare EmbedIO",
    "keywords": "⭐ Please star this project if you find it useful! This README is for EmbedIO v2.x. Click here if you are still sing EmbedIO v1.x. Overview EmbedIO 2.0 - What's new Some usage scenarios Installation Usage WebServer Setup IHttpContext Extension Methods Easy Routes Support for SSL Examples Basic Example REST API Example WebSockets Example Related Projects and Nugets Special Thanks Overview A tiny, cross-platform, module based, MIT-licensed web server for .NET Framework and .NET Core. Written entirely in C#, using our helpful library SWAN Network operations use the async/await pattern: Responses are handled asynchronously Multiple implementations support: EmbedIO can use Microsoft HttpListener or internal Http Listener based on Mono / websocket-sharp projects Cross-platform: tested on multiple OS and runtimes. From Windows .NET Framework to Linux MONO. Extensible: Write your own modules -- For example, video streaming, UPnP, etc. Check out EmbedIO Extras for additional modules Small memory footprint Create REST APIs quickly with the out-of-the-box Web API module Serve static or embedded files with 1 line of code (also out-of-the-box) Handle sessions with the built-in LocalSessionWebModule WebSockets support CORS support. Origin, Header and Method validation with OPTIONS preflight Supports HTTP 206 Partial Content Support Xamarin Forms And many more options in the same package Some notes regarding WebSocket and runtimes support: Runtime HTTP implementation WebSocket support Notes NET462 Unosquare and Microsoft Yes Support Win7+ OS, Linux and macOS. NETSTANDARD20 Unosquare and Microsoft Yes Support Windows, Linux and macOS using native System.Net library. NETSTANDARD13 Unosquare Yes Support Windows, Linux and macOS using native System.Net library EmbedIO 2.0 - What's new Breaking changes WebApiController is renewed. Reduce the methods overhead removing the WebServer and Context arguments. See examples below. RoutingStrategy.Regex is the default routing scheme. Additional changes IHttpListener is runtime/platform independent, you can choose Unosquare HttpListener implementation with NET472 or NETSTANDARD20. This separation of implementations brings new access to interfaces from common Http objects like IHttpRequest , IHttpContext and more. IWebServer is a new interface to create custom web server implementation, like a Test Web Server where all the operations are in-memory to speed up unit testing. Similar to TestServer from OWIN General improvements in how the Unosquare HttpListner is working and code clean-up. Note - We encourage to upgrade to the newest EmbedIO version. Branch version 1.X will no longer be maintained, and issues will be tested against 2.X and resolved just there. Some usage scenarios: Write a cross-platform GUI entirely using React/AngularJS/Vue.js or any Javascript framework Write a game using Babylon.js and make EmbedIO your serve your code and assets Create GUIs for Windows services or Linux daemons Works well with LiteLib - add SQLite support in minutes! Write client applications with real-time communication between them using WebSockets Write internal web server for Xamarin Forms applications Installation: You can start using EmbedIO by just downloading the nuget. Package Manager PM> Install-Package EmbedIO .NET CLI > dotnet add package EmbedIO Usage WebServer Setup IHttpContext Extension Methods By adding the namespace EmbedIO to your class, you can use some helpful extension methods for IHttpContext , IHttpResponse and IHttpRequest . These methods can be used in any Web module (like Fallback Module ) or inside a WebAPI Controller method. Below, some common scenarios using a WebAPI Controller method as body function: Reading from a POST body as a dictionary (application/x-www-form-urlencoded) For reading a dictionary from a HTTP Request body you can use RequestFormDataDictionary . This method works directly from IHttpContext and returns the key-value pairs sent by using the Contet-Type 'application/x-www-form-urlencoded'. [WebApiHandler(HttpVerbs.Post, \"/api/data\")] public async Task<bool> PostData() { var data = HttpContext.RequestFormDataDictionary(); // Perform an operation with the data await SaveData(data); return true; } Reading from a POST body as a JSON payload (application/json) For reading a JSON payload and deserialize it to an object from a HTTP Request body you can use ParseJson . This method works directly from IHttpContext and returns an object of the type specified in the generic type. [WebApiHandler(HttpVerbs.Post, \"/api/data\")] public async Task<bool> PostJsonData() { var data = HttpContext.ParseJson<MyData>(); // Perform an operation with the data await SaveData(data); return true; } Reading from a POST body as a FormData (multipart/form-data) EmbedIO doesn't provide the functionality to read from a Multipart FormData stream. But you can check the HttpMultipartParser Nuget and connect the Request input directly to the HttpMultipartParser, very helpful and small library. There is another solution but it requires this Microsoft Nuget . Writing a binary stream For writing a binary stream directly to the Response Output Stream you can use BinaryResponseAsync . This method has an overload to use IHttpContext and you need to set the Content-Type beforehand. [WebApiHandler(HttpVerbs.Get, \"/api/binary\")] public async Task<bool> GetBinary() { var stream = new MemoryStream(); // Call a fictional external source await GetExternalStream(stream); return await HttpContext.BinaryResponseAsync(stream); } Easy Routes Support for SSL Both HTTP listeners (Microsoft and Unosquare) can open a web server using SSL. This support is for Windows only (for now) and you need to manually register your certificate or use the WebServerOptions class to initialize a new WebServer instance. This section will provide some examples of how to use SSL but first a brief explanation of how SSL works on Windows. For Windows Vista or better, Microsoft provides Network Shell ( netsh ). This command line tool allows to map an IP-port to a certificate, so incoming HTTP request can upgrade the connection to a secure stream using the provided certificate. EmbedIO can read or register certificates to a default store (My/LocalMachine) and use them against a netsh sslcert for binding the first https prefix registered. For Windows XP and Mono, you can use manually the httpcfg for registering the binding. Using a PFX file and AutoRegister option The more practical case to use EmbedIO with SSL is the AutoRegister option. You need to create a WebServerOptions instance with the path to a PFX file and the AutoRegister flag on. This options will try to get or register the certificate to the default certificate store. Then it will use the certificate thumbprint to register with netsh the FIRST https prefix registered on the options. Using AutoLoad option If you already have a certificate on the default certificate store and the binding is also registered in netsh , you can use Autoload flag and optionally provide a certificate thumbprint. If the certificate thumbprint is not provided, EmbedIO will read the data from netsh . After getting successfully the certificate from the store, the raw data is passed to the WebServer. Examples Basic Example Please note the comments are the important part here. More info is available in the samples. namespace Unosquare { using System; using EmbedIO; using EmbedIO.Modules; class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> static void Main(string[] args) { var url = \"http://localhost:9696/\"; if (args.Length > 0) url = args[0]; // Our web server is disposable. using (var server = new WebServer(url)) { // First, we will configure our web server by adding Modules. // Please note that order DOES matter. // ================================================================================================ // If we want to enable sessions, we simply register the LocalSessionModule // Beware that this is an in-memory session storage mechanism so, avoid storing very large objects. // You can use the server.GetSession() method to get the SessionInfo object and manupulate it. // You could potentially implement a distributed session module using something like Redis server.WithLocalSession(); // Here we setup serving of static files server.RegisterModule(new StaticFilesModule(\"c:/web\")); // The static files module will cache small files in ram until it detects they have been modified. server.Module<StaticFilesModule>().UseRamCache = true; // Once we've registered our modules and configured them, we call the RunAsync() method. server.RunAsync(); // Fire up the browser to show the content if we are debugging! #if DEBUG var browser = new System.Diagnostics.Process() { StartInfo = new System.Diagnostics.ProcessStartInfo(url) { UseShellExecute = true } }; browser.Start(); #endif // Wait for any key to be pressed before disposing of our web server. // In a service, we'd manage the lifecycle of our web server using // something like a BackgroundWorker or a ManualResetEvent. Console.ReadKey(true); } } } } REST API Example The WebApi module supports two routing strategies: Wildcard and Regex. By default, the WebApi module will use the Regex Routing Strategy trying to match and resolve the values from a route template, in a similar fashion to Microsoft's Web API. A method with the following route /api/people/{id} is going to match any request URL with three segments: the first two api and people and the last one is going to be parsed or converted to the type in the id argument of the handling method signature. Please read on if this was confusing as it is much simpler than it sounds. Additionally, you can put multiple values to match, for example /api/people/{mainSkill}/{age} , and receive the parsed values from the URL straight into the arguments of your handler method. During server setup: var server = new WebServer(\"http://localhost:9696/\", RoutingStrategy.Regex); server.RegisterModule(new WebApiModule()); server.Module<WebApiModule>().RegisterController<PeopleController>(); And our controller class (using default Regex Strategy) looks like: // A controller is a class where the WebApi module will find available // endpoints. The class must extend WebApiController. public class PeopleController : WebApiController { // You need to add a default constructor where the first argument // is an IHttpContext public PeopleController(IHttpContext context) : base(context) { } // You need to include the WebApiHandler attribute to each method // where you want to export an endpoint. The method should return // bool or Task<bool>. [WebApiHandler(HttpVerbs.Get, \"/api/people/{id}\")] public async Task<bool> GetPersonById(int id) { try { // This is fake call to a Repository var person = await PeopleRepository.GetById(id); return await Ok(person); } catch (Exception ex) { return await InternalServerError(ex); } } // You can override the default headers and add custom headers to each API Response. public override void SetDefaultHeaders() => HttpContext.NoCache(); } The SetDefaultHeaders method will add a no-cache policy to all Web API responses. If you plan to handle a differente policy or even custom headers to each different Web API method we recommend you override this method as you need. The previous default strategy (Wildcard) matches routes using the asterisk * character in the route. For example: The route /api/people/* will match any request with a URL starting with the two first URL segments api and people and ending with anything. The route /api/people/hello will be matched. You can also use wildcards in the middle of the route. The route /api/people/*/details will match requests starting with the two first URL segments api and people , and end with a details segment. The route /api/people/hello/details will be matched. During server setup: var server = new WebServer(\"http://localhost:9696/\", RoutingStrategy.Regex); server.RegisterModule(new WebApiModule()); server.Module<WebApiModule>().RegisterController<PeopleController>(); public class PeopleController : WebApiController { public PeopleController(IHttpContext context) : base(context) { } [WebApiHandler(HttpVerbs.Get, \"/api/people/*\")] public async Task<bool> GetPeopleOrPersonById() { var lastSegment = Request.Url.Segments.Last(); // If the last segment is a backslash, return all // the collection. This endpoint call a fake Repository. if (lastSegment.EndsWith(\"/\")) return await Ok(await PeopleRepository.GetAll()); if (int.TryParse(lastSegment, out var id)) { return await Ok(await PeopleRepository.GetById(id)); } throw new KeyNotFoundException(\"Key Not Found: \" + lastSegment); } } WebSockets Example During server setup: server.RegisterModule(new WebSocketsModule()); server.Module<WebSocketsModule>().RegisterWebSocketsServer<WebSocketsChatServer>(\"/chat\"); And our web sockets server class looks like: /// <summary> /// Defines a very simple chat server /// </summary> public class WebSocketsChatServer : WebSocketsServer { public WebSocketsChatServer() : base(true) { // placeholder } public override string ServerName => \"Chat Server\"; protected override void OnMessageReceived(IWebSocketContext context, byte[] rxBuffer, IWebSocketReceiveResult rxResult) { foreach (var ws in WebSockets) { if (ws != context) Send(ws, rxBuffer.ToText()); } } protected override void OnClientConnected( IWebSocketContext context, System.Net.IPEndPoint localEndPoint, System.Net.IPEndPoint remoteEndPoint) { Send(context, \"Welcome to the chat room!\"); foreach (var ws in WebSockets) { if (ws != context) Send(ws, \"Someone joined the chat room.\"); } } protected override void OnFrameReceived(IWebSocketContext context, byte[] rxBuffer, IWebSocketReceiveResult rxResult) { // placeholder } protected override void OnClientDisconnected(IWebSocketContext context) { Broadcast(\"Someone left the chat room.\"); } } Related Projects and Nugets Name Author Description Butterfly.EmbedIO Fireshark Studios, LLC Implementation of Butterfly.Core.Channel and Butterfly.Core.WebApi using the EmbedIO server embedio-cli Unosquare A dotnet global tool that enables start any web folder or EmbedIO assembly (WebAPI or WebSocket) from command line. EmbedIO.BearerToken Unosquare Allow to authenticate with a Bearer Token. It uses a Token endpoint (at /token path) and with a defined validation delegate create a JsonWebToken. The module can check all incoming requests or a paths EmbedIO.LiteLibWebApi Unosquare Allow to expose a sqlite database as REST api using EmbedIO WebApi and LiteLib libraries EmbedIO.OWIN Unosquare EmbedIO can use the OWIN platform in two different approach: You can use EmbedIO as OWIN server and use all OWIN framework with EmbedIO modules. Microsoft.AspNetCore.Server.EmbedIO Dju EmbedIO web server support for ASP.NET Core, as a drop-in replacement for Kestrel SambaFetcher nddipiazza A .NET tool to connect a web server with Samba Special Thanks To YourKit for supports open source projects with its full-featured .NET Profiler , an amazing tool to profile CPU and Memory!"
  },
  "wiki/_Sidebar.html": {
    "href": "wiki/_Sidebar.html",
    "title": "| Unosquare EmbedIO",
    "keywords": "Cookbook Self-signed Certified"
  },
  "wiki/Self-signed-certified-(Windows).html": {
    "href": "wiki/Self-signed-certified-(Windows).html",
    "title": "Running EmbedIO | Unosquare EmbedIO",
    "keywords": "Running EmbedIO First, create the self-signed certified Powershell (as Admin): $date_now = Get-Date $extended_date = $date_now.AddYears(3) $cert = New-SelfSignedCertificate -certstorelocation cert:\\localmachine\\my -dnsname unosquare.io -notafter $extended_date Add the certified to the desire port (as Admin): netsh http add sslcert ipport=0.0.0.0:7876 certhash=767b9a3ad23a0cfc597df8be23d58984503c7ad8 appid={adaa04bb-8b63-4073-a12f-d6f8c0b4383f}"
  },
  "wiki/Home.html": {
    "href": "wiki/Home.html",
    "title": "| Unosquare EmbedIO",
    "keywords": "A tiny, cross-platform, module based, MIT-licensed web server. Check EmbedIO web site"
  },
  "CODE_OF_CONDUCT.html": {
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct | Unosquare EmbedIO",
    "keywords": "Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at geovanni.perez@gmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4"
  },
  "api/EmbedIO.HttpResponseExtensions.html": {
    "href": "api/EmbedIO.HttpResponseExtensions.html",
    "title": "Class HttpResponseExtensions | Unosquare EmbedIO",
    "keywords": "Class HttpResponseExtensions Provides extension methods for types implementing IHttpResponse . Inheritance Object HttpResponseExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class HttpResponseExtensions Methods BinaryResponseAsync(IHttpResponse, Stream, Boolean, CancellationToken) Writes a binary response asynchronous. Declaration public static Task<bool> BinaryResponseAsync(this IHttpResponse response, Stream buffer, bool useGzip = true, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpResponse response The response. Stream buffer The buffer. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. NoCache(IHttpResponse) Add the necessary headers to disable caching of a response on the client side. Declaration public static void NoCache(this IHttpResponse this) Parameters Type Name Description IHttpResponse this The IHttpResponse interface on which this method is called. StandardHtmlResponseAsync(IHttpResponse, Int32, CancellationToken) Asynchronously sends a standard HTML response for the specified status code. Declaration public static Task StandardHtmlResponseAsync(this IHttpResponse this, int statusCode, CancellationToken cancellationToken) Parameters Type Name Description IHttpResponse this The IHttpResponse interface on which this method is called. Int32 statusCode The HTTP status code of the response. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task A representing the ongoing operation. See Also StandardHtmlResponseAsync(IHttpResponse, Int32, Func<StringBuilder, StringBuilder>, CancellationToken) StandardHtmlResponseAsync(IHttpResponse, Int32, Func<StringBuilder, StringBuilder>, CancellationToken) Asynchronously sends a standard HTML response for the specified status code. Declaration public static Task StandardHtmlResponseAsync(this IHttpResponse this, int statusCode, Func<StringBuilder, StringBuilder> appendAdditionalHtml, CancellationToken cancellationToken) Parameters Type Name Description IHttpResponse this The IHttpResponse interface on which this method is called. Int32 statusCode The HTTP status code of the response. Func < StringBuilder , StringBuilder > appendAdditionalHtml A callback function that may append additional HTML code to the response. If not null , the callback is called immediately before closing the HTML body tag. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task A representing the ongoing operation. See Also StandardHtmlResponseAsync(IHttpResponse, Int32, CancellationToken) StandardResponseWithoutBody(IHttpResponse, Int32) Prepares a standard response without a body for the specified status code. Declaration public static void StandardResponseWithoutBody(this IHttpResponse this, int statusCode) Parameters Type Name Description IHttpResponse this The IHttpResponse interface on which this method is called. Int32 statusCode The HTTP status code of the response. StringResponseAsync(IHttpResponse, String, String, Encoding, Boolean, CancellationToken) Outputs async a string response given a string. Declaration public static Task<bool> StringResponseAsync(this IHttpResponse this, string content, string contentType, Encoding encoding = null, bool useGzip = false, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpResponse this The response. String content The content. String contentType Type of the content. Encoding encoding The encoding. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. WriteToOutputStream(IHttpResponse, Stream, Int64, CancellationToken) Writes to output stream. Declaration public static Task WriteToOutputStream(this IHttpResponse response, Stream buffer, long lowerByteIndex = 0L, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpResponse response The response. Stream buffer The buffer. Int64 lowerByteIndex Index of the lower byte. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the write operation to the stream. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Files.FileModuleBaseExtensions.html": {
    "href": "api/EmbedIO.Files.FileModuleBaseExtensions.html",
    "title": "Class FileModuleBaseExtensions | Unosquare EmbedIO",
    "keywords": "Class FileModuleBaseExtensions Provides extension methods for classes derived from FileModuleBase . Inheritance Object FileModuleBaseExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Files Syntax public static class FileModuleBaseExtensions Methods WithDefaultHeader<TModule>(TModule, String, String) Adds a default header to a FileModuleBase -derived module. Declaration public static TModule WithDefaultHeader<TModule>(this TModule this, string headerName, string value) where TModule : FileModuleBase Parameters Type Name Description TModule this The module on which this method is called. String headerName The header name. String value The value. Returns Type Description TModule this with the default header added. Type Parameters Name Description TModule The type of the module. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Authentication.BasicAuthenticationModuleExtensions.html": {
    "href": "api/EmbedIO.Authentication.BasicAuthenticationModuleExtensions.html",
    "title": "Class BasicAuthenticationModuleExtensions | Unosquare EmbedIO",
    "keywords": "Class BasicAuthenticationModuleExtensions Provides extension methods for BasicAuthenticationModule . Inheritance Object BasicAuthenticationModuleExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Authentication Syntax public static class BasicAuthenticationModuleExtensions Methods WithAccount(BasicAuthenticationModule, String, String) Adds a username and password to the Accounts dictionary. Declaration public static BasicAuthenticationModule WithAccount(this BasicAuthenticationModule this, string userName, string password) Parameters Type Name Description BasicAuthenticationModule this The BasicAuthenticationModule on which this method is called. String userName The user name. String password The password. Returns Type Description BasicAuthenticationModule this , with the user name and password added. Remarks If a userName account already exists, its password is replaced with password . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Authentication.BasicAuthenticationModule.html": {
    "href": "api/EmbedIO.Authentication.BasicAuthenticationModule.html",
    "title": "Class BasicAuthenticationModule | Unosquare EmbedIO",
    "keywords": "Class BasicAuthenticationModule Simple HTTP basic authorization module that stores credentials in a . Inheritance Object WebModuleBase BasicAuthenticationModuleBase BasicAuthenticationModule Implements IWebModule Inherited Members BasicAuthenticationModuleBase.Realm BasicAuthenticationModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Authentication Syntax public class BasicAuthenticationModule : BasicAuthenticationModuleBase, IWebModule Constructors BasicAuthenticationModule(String, String) Initializes a new instance of the BasicAuthenticationModule class. Declaration public BasicAuthenticationModule(string baseUrlPath, string realm = null) Parameters Type Name Description String baseUrlPath The base URL path. String realm The authentication realm. Remarks If realm is null or the empty string, the property will be set equal to BaseUrlPath . Properties Accounts Gets a dictionary of valid user names and passwords. Declaration public ConcurrentDictionary<string, string> Accounts { get; } Property Value Type Description ConcurrentDictionary < String , String > The accounts. Methods VerifyCredentialsAsync(String, String) Verifies the credentials given in the Authentication request header. Declaration protected override Task<bool> VerifyCredentialsAsync(string userName, string password) Parameters Type Name Description String userName The user name. String password The password. Returns Type Description Task < Boolean > true if the credentials are valid; otherwise, false . Overrides BasicAuthenticationModuleBase.VerifyCredentialsAsync(String, String) Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.html": {
    "href": "api/EmbedIO.Utilities.html",
    "title": "Namespace EmbedIO.Utilities | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Utilities Classes ComponentCollection<T> Implements a collection of components. Each component in the collection may be given a unique name for later retrieval. ComponentCollectionExtensions Provides extension methods for types implementing IComponentCollection<T> . ConcurrentDataDictionary<TKey, TValue> Represents a thread-safe collection of key/value pairs that does not store null values and can be accessed by multiple threads concurrently. ConfiguredObject Base class for objects whose configuration may be locked, thus becoming read-only, at a certain moment in their lifetime. DataDictionary<TKey, TValue> Represents a non-thread-safe collection of key/value pairs that does not store null values and can be accessed by multiple threads concurrently. DateTimeExtensions Provides extension methods for . DisposableComponentCollection<T> Implements a collection of components that automatically disposes each component implementing . Each component in the collection may be given a unique name for later retrieval. EnumerableExtensions Provides extension methods for types implementing . NameValueCollectionExtensions Provides extension methods for . StringExtensions Provides extension methods for String . TaskExtensions Provides extension methods for and UniqueIdGenerator Generates locally unique string IDs, mainly for logging purposes. UrlPath Provides utility methods to work with URL paths. Validate Provides validation methods for method arguments. Interfaces IComponentCollection<T> Represents a collection of components. Each component in the collection may be given a unique name for later retrieval. IDataDictionary<TKey, TValue> Represents a generic collection of key/value pairs that does not store null values. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.Validate.html": {
    "href": "api/EmbedIO.Utilities.Validate.html",
    "title": "Class Validate | Unosquare EmbedIO",
    "keywords": "Class Validate Provides validation methods for method arguments. Inheritance Object Validate Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public static class Validate Methods EnumValue<T>(String, T) Ensures that the value of an argument is a valid enumeration constant. Declaration public static T EnumValue<T>(string argumentName, T value) where T : Enum Parameters Type Name Description String argumentName The name of the argument to validate. T value The value to validate. Returns Type Description T value if valid. Type Parameters Name Description T The type of the argument to validate. Remarks Do not use this method to validate arguments whose type has the Flags attribute. LocalPath(String, String, Boolean) Ensures that the value of an argument is a valid local path and, optionally, gets the corresponding full path. Declaration public static string LocalPath(string argumentName, string value, bool getFullPath) Parameters Type Name Description String argumentName The name of the argument to validate. String value The value to validate. Boolean getFullPath true to get the full path, false to leave the path as is.. Returns Type Description String The local path, or the full path if getFullPath is true . NotNull<T>(String, T) Ensures that an argument is not null . Declaration public static T NotNull<T>(string argumentName, T value) where T : class Parameters Type Name Description String argumentName The name of the argument to validate. T value The value to validate. Returns Type Description T value if not null . Type Parameters Name Description T The type of the argument to validate. NotNull<T>(String, Nullable<T>) Ensures that a nullable argument is not null . Declaration public static T? NotNull<T>(string argumentName, T? value) where T : struct Parameters Type Name Description String argumentName The name of the argument to validate. Nullable <T> value The value to validate. Returns Type Description Nullable <T> value if not null . Type Parameters Name Description T The base type of the argument to validate. NotNullOrEmpty(String, String) Ensures that a langword_csharp_string argument is neither null nor the empty string. Declaration public static string NotNullOrEmpty(string argumentName, string value) Parameters Type Name Description String argumentName The name of the argument to validate. String value The value to validate. Returns Type Description String value if neither null nor the empty string. Rfc2616Token(String, String) Ensures that a langword_csharp_string argument is valid as a token as defined by RFC2616, Section 2.2 . RFC2616 tokens are used, for example, as: cookie names, as stated in RFC6265, Section 4.1.1 ; SystemWebSocket protocol names, as stated in RFC6455, Section 4.3 . Only a restricted set of characters are allowed in tokens, including: upper- and lower-case letters of the English alphabet; decimal digits; the following non-alphanumeric characters: ! , # , $ , % , & , ' , * , + , - , . , ^ , _ , ` , | , ~ . Declaration public static string Rfc2616Token(string argumentName, string value) Parameters Type Name Description String argumentName Name of the argument. String value The value. Returns Type Description String value , if it is a valid token. Route(String, String) Ensures that the value of an argument is a valid route. Declaration public static string Route(string argumentName, string value) Parameters Type Name Description String argumentName The name of the argument to validate. String value The value to validate. Returns Type Description String value , if it is a valid route. Url(String, String, Uri, Boolean) Ensures that a valid URL, either absolute or relative to the given baseUri , can be constructed from a langword_csharp_string argument and returns the absolute URL obtained by combining baseUri and value . Declaration public static string Url(string argumentName, string value, Uri baseUri, bool enforceHttp = false) Parameters Type Name Description String argumentName Name of the argument. String value The value. Uri baseUri The base URI for relative URLs. Boolean enforceHttp Ensure that the resulting URL's scheme is either http or https . Returns Type Description String The string representation of the constructed URL. See Also Url(String, String, UriKind, Boolean) Url(String, String, UriKind, Boolean) Ensures that a valid URL can be constructed from a langword_csharp_string argument. Declaration public static string Url(string argumentName, string value, UriKind uriKind = null, bool enforceHttp = false) Parameters Type Name Description String argumentName Name of the argument. String value The value. UriKind uriKind Specifies whether value is a relative URL, absolute URL, or is indeterminate. Boolean enforceHttp Ensure that, if value is an absolute URL, its scheme is either http or https . Returns Type Description String The string representation of the constructed URL. See Also Url(String, String, Uri, Boolean) UrlPath(String, String, Boolean) Ensures that the value of an argument is a valid URL path and normalizes it. Declaration public static string UrlPath(string argumentName, string value, bool isBasePath) Parameters Type Name Description String argumentName The name of the argument to validate. String value The value to validate. Boolean isBasePath If set to true true [is base path]. Returns Type Description String The normalized URL path. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.UrlPath.html": {
    "href": "api/EmbedIO.Utilities.UrlPath.html",
    "title": "Class UrlPath | Unosquare EmbedIO",
    "keywords": "Class UrlPath Provides utility methods to work with URL paths. Inheritance Object UrlPath Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public static class UrlPath Fields Root The root URL path value, i.e. \"/\" . Declaration public const string Root = \"/\" Field Value Type Description String Methods HasPrefix(String, String) Determines whether the specified URL path is prefixed by the specified base URL path. Declaration public static bool HasPrefix(string urlPath, string baseUrlPath) Parameters Type Name Description String urlPath The URL path. String baseUrlPath The base URL path. Returns Type Description Boolean true if urlPath is prefixed by baseUrlPath ; otherwise, false . Remarks This method returns true even if the two URL paths are equivalent, for example if both are \"/\" , or if urlPath is \"/download\" and baseUrlPath is \"/download/\" . If you are sure that both urlPath and baseUrlPath are valid and normalized, for example because you have called UrlPath(String, String, Boolean) , then you may call UnsafeHasPrefix(String, String) instead of this method. UnsafeHasPrefix(String, String) is slightly faster because it skips validity checks. See Also UnsafeHasPrefix(String, String) Normalize(String, Boolean) StripPrefix(String, String) UrlPath(String, String, Boolean) IsValid(String) Determines whether a string is a valid URL path. Declaration public static bool IsValid(string urlPath) Parameters Type Name Description String urlPath The URL path. Returns Type Description Boolean true if the specified URL path is valid; otherwise, false . Remarks For a string to be a valid URL path, it must not be null , must not be empty, and must start with a slash ( / ) character. To ensure that a method parameter is a valid URL path, use UrlPath(String, String, Boolean) . See Also Normalize(String, Boolean) UnsafeNormalize(String, Boolean) UrlPath(String, String, Boolean) Normalize(String, Boolean) Normalizes the specified URL path. Declaration public static string Normalize(string urlPath, bool isBasePath) Parameters Type Name Description String urlPath The URL path. Boolean isBasePath if set to true , treat the URL path as a base path, i.e. ensure it ends with a slash ( / ) character; otherwise, ensure that it does NOT end with a slash character. Returns Type Description String The normalized path. Remarks A normalized URL path is one where each run of two or more slash ( / ) characters has been replaced with a single slash character. This method does NOT try to decode URL-encoded characters. If you are sure that urlPath is a valid URL path, for example because you have called IsValid(String) and it returned true , then you may call UnsafeNormalize(String, Boolean) instead of this method. UnsafeNormalize(String, Boolean) is slightly faster because it skips the initial validity check. There is no need to call this method for a method parameter for which you have already called UrlPath(String, String, Boolean) . See Also UnsafeNormalize(String, Boolean) IsValid(String) UrlPath(String, String, Boolean) StripPrefix(String, String) Strips a base URL path fom a URL path, obtaining a relative path. Declaration public static string StripPrefix(string urlPath, string baseUrlPath) Parameters Type Name Description String urlPath The URL path. String baseUrlPath The base URL path. Returns Type Description String The relative path, or null if urlPath is not prefixed by baseUrlPath . Remarks The returned relative path is NOT prefixed by a slash ( / ) character. If urlPath and baseUrlPath are equivalent, for example if both are \"/\" , or if urlPath is \"/download\" and baseUrlPath is \"/download/\" , this method returns an empty string. If you are sure that both urlPath and baseUrlPath are valid and normalized, for example because you have called UrlPath(String, String, Boolean) , then you may call UnsafeStripPrefix(String, String) instead of this method. UnsafeStripPrefix(String, String) is slightly faster because it skips validity checks. See Also UnsafeStripPrefix(String, String) Normalize(String, Boolean) HasPrefix(String, String) UrlPath(String, String, Boolean) UnsafeHasPrefix(String, String) Determines whether the specified URL path is prefixed by the specified base URL path, assuming both paths are valid and normalized. Declaration public static bool UnsafeHasPrefix(string urlPath, string baseUrlPath) Parameters Type Name Description String urlPath The URL path. String baseUrlPath The base URL path. Returns Type Description Boolean true if urlPath is prefixed by baseUrlPath ; otherwise, false . Remarks Unless both urlPath and baseUrlPath are valid, normalized URL paths, the behavior of this method is unspecified. You should call this method only after calling either Normalize(String, Boolean) or UrlPath(String, String, Boolean) to check and normalize both parameters. If you are not sure about the validity and/or normalization of parameters, call HasPrefix(String, String) instead of this method. This method returns true even if the two URL paths are equivalent, for example if both are \"/\" , or if urlPath is \"/download\" and baseUrlPath is \"/download/\" . See Also HasPrefix(String, String) Normalize(String, Boolean) StripPrefix(String, String) UrlPath(String, String, Boolean) UnsafeNormalize(String, Boolean) Normalizes the specified URL path, assuming that it is valid. Declaration public static string UnsafeNormalize(string urlPath, bool isBasePath) Parameters Type Name Description String urlPath The URL path. Boolean isBasePath if set to true , treat the URL path as a base path, i.e. ensure it ends with a slash ( / ) character; otherwise, ensure that it does NOT end with a slash character. Returns Type Description String The normalized path. Remarks A normalized URL path is one where each run of two or more slash ( / ) characters has been replaced with a single slash character. This method does NOT try to decode URL-encoded characters. If urlPath is not valid, the behavior of this method is unspecified. You should call this method only after IsValid(String) has returned true for the same urlPath . You should call Normalize(String, Boolean) instead of this method if you are not sure that urlPath is valid. There is no need to call this method for a method parameter for which you have already called UrlPath(String, String, Boolean) . See Also Normalize(String, Boolean) IsValid(String) UrlPath(String, String, Boolean) UnsafeStripPrefix(String, String) Strips a base URL path fom a URL path, obtaining a relative path, assuming both paths are valid and normalized. Declaration public static string UnsafeStripPrefix(string urlPath, string baseUrlPath) Parameters Type Name Description String urlPath The URL path. String baseUrlPath The base URL path. Returns Type Description String The relative path, or null if urlPath is not prefixed by baseUrlPath . Remarks Unless both urlPath and baseUrlPath are valid, normalized URL paths, the behavior of this method is unspecified. You should call this method only after calling either Normalize(String, Boolean) or UrlPath(String, String, Boolean) to check and normalize both parameters. If you are not sure about the validity and/or normalization of parameters, call StripPrefix(String, String) instead of this method. The returned relative path is NOT prefixed by a slash ( / ) character. If urlPath and baseUrlPath are equivalent, for example if both are \"/\" , or if urlPath is \"/download\" and baseUrlPath is \"/download/\" , this method returns an empty string. See Also StripPrefix(String, String) Normalize(String, Boolean) HasPrefix(String, String) UrlPath(String, String, Boolean) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.UniqueIdGenerator.html": {
    "href": "api/EmbedIO.Utilities.UniqueIdGenerator.html",
    "title": "Class UniqueIdGenerator | Unosquare EmbedIO",
    "keywords": "Class UniqueIdGenerator Generates locally unique string IDs, mainly for logging purposes. Inheritance Object UniqueIdGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public static class UniqueIdGenerator Methods GetNext() Generates and returns a unique ID. Declaration public static string GetNext() Returns Type Description String The generated ID. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.IComponentCollection-1.html": {
    "href": "api/EmbedIO.Utilities.IComponentCollection-1.html",
    "title": "Interface IComponentCollection<T> | Unosquare EmbedIO",
    "keywords": "Interface IComponentCollection<T> Represents a collection of components. Each component in the collection may be given a unique name for later retrieval. Namespace : EmbedIO.Utilities Syntax public interface IComponentCollection<T> : IReadOnlyList<T> Type Parameters Name Description T The type of components in the collection. Properties Item[String] Gets the component with the specified name. Declaration T this[string name] { get; } Parameters Type Name Description String name The name. Property Value Type Description T The component. Named Gets an interface representing the named components. Declaration IReadOnlyDictionary<string, T> Named { get; } Property Value Type Description IReadOnlyDictionary < String , T> The named components. WithSafeNames Gets an interface representing all components associated with safe names. The safe name of a component is never null . If a component's unique name if null , its safe name will be some non- null string somehow identifying it. Note that safe names are not necessarily unique. Declaration IReadOnlyList<(string SafeName, T Component)> WithSafeNames { get; } Property Value Type Description IReadOnlyList < ValueTuple < String , T>> A list of s, each containing a safe name and a component. Methods Add(String, T) Adds a component to the collection, giving it the specified name if it is not null . Declaration void Add(string name, T component) Parameters Type Name Description String name The name given to the module, or null . T component The component. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.EnumerableExtensions.html": {
    "href": "api/EmbedIO.Utilities.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | Unosquare EmbedIO",
    "keywords": "Class EnumerableExtensions Provides extension methods for types implementing . Inheritance Object EnumerableExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public static class EnumerableExtensions Methods FirstOrDefaultOfType<T>(IEnumerable) Returns the first element of a sequence that is of a given type, or a default value if the sequence contains no elements of the given type. Declaration public static T FirstOrDefaultOfType<T>(this IEnumerable this) Parameters Type Name Description IEnumerable this The on which this method is called. Returns Type Description T default( T ) if this is empty or contains no elements of type T ; otherwise, the first element in this that is of type T . Type Parameters Name Description T The type of the element to return. FirstOrDefaultOfType<T>(IEnumerable, Func<T, Boolean>) Returns the first element of a sequence that is of a given type and satisfies a condition, or a default value if the sequence contains no elements of the given type that satisfy the condition. Declaration public static T FirstOrDefaultOfType<T>(this IEnumerable this, Func<T, bool> predicate) Parameters Type Name Description IEnumerable this The on which this method is called. Func <T, Boolean > predicate A function to test each element of type T for a condition. Returns Type Description T default( T ) if this is empty or contains no elements of type T ; otherwise, the first element in this that is of type T . Type Parameters Name Description T The type of the element to return. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.DisposableComponentCollection-1.html": {
    "href": "api/EmbedIO.Utilities.DisposableComponentCollection-1.html",
    "title": "Class DisposableComponentCollection<T> | Unosquare EmbedIO",
    "keywords": "Class DisposableComponentCollection<T> Implements a collection of components that automatically disposes each component implementing . Each component in the collection may be given a unique name for later retrieval. Inheritance Object ConfiguredObject ComponentCollection <T> DisposableComponentCollection<T> Implements IComponentCollection <T> IReadOnlyList <T> IDisposable Inherited Members ComponentCollection<T>.Count ComponentCollection<T>.Named ComponentCollection<T>.WithSafeNames ComponentCollection<T>.Item[Int32] ComponentCollection<T>.Item[String] ComponentCollection<T>.GetEnumerator() ComponentCollection<T>.Add(String, T) ComponentCollection<T>.Lock() ConfiguredObject.ConfigurationLocked ConfiguredObject.LockConfiguration() ConfiguredObject.OnBeforeLockConfiguration() ConfiguredObject.EnsureConfigurationNotLocked() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public class DisposableComponentCollection<T> : ComponentCollection<T>, IComponentCollection<T>, IReadOnlyList<T>, IDisposable Type Parameters Name Description T The type of components in the collection. Constructors DisposableComponentCollection() Initializes a new instance of the DisposableComponentCollection<T> class. Declaration public DisposableComponentCollection() Methods Dispose() Releases unmanaged and - optionally - managed resources. Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; true to release only unmanaged resources. Finalize() Finalizes an instance of the DisposableComponentCollection<T> class. Declaration protected void Finalize() Implements IComponentCollection<T> IReadOnlyList<> IDisposable See Also ComponentCollection <T> IComponentCollection <T> Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.DateTimeExtensions.html": {
    "href": "api/EmbedIO.Utilities.DateTimeExtensions.html",
    "title": "Class DateTimeExtensions | Unosquare EmbedIO",
    "keywords": "Class DateTimeExtensions Provides extension methods for . Inheritance Object DateTimeExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public static class DateTimeExtensions Methods ToRfc1123String(DateTime) Converts a to the RFC1123 format . Declaration public static string ToRfc1123String(this DateTime this) Parameters Type Name Description DateTime this The on which this method is called. Returns Type Description String The string representation of this according to RFC1123 . Remarks If this is not a UTC date / time, its UTC equivalent is converted, leaving this unchanged. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Routing.Route.html": {
    "href": "api/EmbedIO.Routing.Route.html",
    "title": "Class Route | Unosquare EmbedIO",
    "keywords": "Class Route Provides utility methods to work with routes. Inheritance Object Route Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Routing Syntax public static class Route Methods IsValid(String) Determines whether a string is a valid route. To be considered a valid route, the specified string: must not be null ; must not be the empty string; must start with a slash ( '/' ) character; must not end with a slash ( '/' ) character, unless it is the only character in the string; may contain one or more parameter specifications. Declaration public static bool IsValid(string route) Parameters Type Name Description String route The route. Returns Type Description Boolean true if route is a valid route; otherwise, false . IsValidParameterName(String) Determines whether a string is a valid route parameter name. To be considered a valid route parameter name, the specified string: must not be null ; must not be the empty string; must consist entirely of decimal digits, upper- or lower-case letters of the English alphabet, or underscore ( '_' ) characters; must not start with a decimal digit. Declaration public static bool IsValidParameterName(string value) Parameters Type Name Description String value The value. Returns Type Description Boolean true if value is a valid route parameter; otherwise, false . See Also RouteHandlerAttribute Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Net.html": {
    "href": "api/EmbedIO.Net.html",
    "title": "Namespace EmbedIO.Net | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Net Classes EndPointManager Represents the EndPoint Manager. HttpListener The EmbedIO implementation of the standard HTTP Listener class. Based on MONO HttpListener class. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Net.Internal.SystemHttpRequest.html": {
    "href": "api/EmbedIO.Net.Internal.SystemHttpRequest.html",
    "title": "Class SystemHttpRequest | Unosquare EmbedIO",
    "keywords": "Class SystemHttpRequest Represents a wrapper for HttpListenerContext.Request. Inheritance Object SystemHttpRequest Implements IHttpRequest IHttpMessage Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Net.Internal Syntax public class SystemHttpRequest : IHttpRequest, IHttpMessage Constructors SystemHttpRequest(Net.HttpListenerContext) Initializes a new instance of the SystemHttpRequest class. Declaration public SystemHttpRequest(Net.HttpListenerContext context) Parameters Type Name Description Net.HttpListenerContext context The context. Properties ContentEncoding Gets the content encoding. Declaration public Encoding ContentEncoding { get; } Property Value Type Description Encoding ContentLength64 Gets the content length. Declaration public long ContentLength64 { get; } Property Value Type Description Int64 ContentType Gets the type of the content. Declaration public string ContentType { get; } Property Value Type Description String Cookies Gets the cookies. Declaration public ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. HasEntityBody Gets a value indicating whether this instance has entity body. Declaration public bool HasEntityBody { get; } Property Value Type Description Boolean Headers Gets the request headers. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection HttpMethod Gets the HTTP method. Declaration public string HttpMethod { get; } Property Value Type Description String HttpVerb Gets a HttpVerbs constant representing the HTTP method of the request. Declaration public HttpVerbs HttpVerb { get; } Property Value Type Description HttpVerbs InputStream Gets the input stream. Declaration public Stream InputStream { get; } Property Value Type Description Stream IsAuthenticated Gets a value indicating whether this instance is authenticated. Declaration public bool IsAuthenticated { get; } Property Value Type Description Boolean IsLocal Gets a value indicating whether this instance is local. Declaration public bool IsLocal { get; } Property Value Type Description Boolean IsSecureConnection Gets a value indicating whether this request has been received over a SSL connection. Declaration public bool IsSecureConnection { get; } Property Value Type Description Boolean IsWebSocketRequest Gets a value indicating whether this instance is web socket request. Declaration public bool IsWebSocketRequest { get; } Property Value Type Description Boolean KeepAlive Gets a value indicating whether [keep alive]. Declaration public bool KeepAlive { get; } Property Value Type Description Boolean LocalEndPoint Gets the local end point. Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint ProtocolVersion Gets or sets the protocol version. Declaration public Version ProtocolVersion { get; } Property Value Type Description Version The protocol version. QueryString Gets the query string. Declaration public NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection RawUrl Gets the raw URL. Declaration public string RawUrl { get; } Property Value Type Description String RemoteEndPoint Gets the remote end point. Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint RequestTraceIdentifier Gets the request identifier of the incoming HTTP request. Declaration public Guid RequestTraceIdentifier { get; } Property Value Type Description Guid Url Gets the URL. Declaration public Uri Url { get; } Property Value Type Description Uri UrlReferrer Gets the URL referrer. Declaration public Uri UrlReferrer { get; } Property Value Type Description Uri UserAgent Gets the user agent. Declaration public string UserAgent { get; } Property Value Type Description String Implements IHttpRequest IHttpMessage See Also IHttpRequest Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Net.HttpListener.html": {
    "href": "api/EmbedIO.Net.HttpListener.html",
    "title": "Class HttpListener | Unosquare EmbedIO",
    "keywords": "Class HttpListener The EmbedIO implementation of the standard HTTP Listener class. Based on MONO HttpListener class. Inheritance Object HttpListener Implements IHttpListener IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Net Syntax public sealed class HttpListener : IHttpListener, IDisposable Constructors HttpListener(X509Certificate) Initializes a new instance of the HttpListener class. Declaration public HttpListener(X509Certificate certificate = null) Parameters Type Name Description X509Certificate certificate The certificate. Properties IgnoreWriteExceptions Gets or sets a value indicating whether the listener should ignore write exceptions. Declaration public bool IgnoreWriteExceptions { get; set; } Property Value Type Description Boolean true if [ignore write exceptions]; otherwise, false . IsListening Gets a value indicating whether this instance is listening. Declaration public bool IsListening { get; } Property Value Type Description Boolean true if this instance is listening; otherwise, false . Name Gets or sets the name. Declaration public string Name { get; } Property Value Type Description String The name. Prefixes Gets the prefixes. Declaration public List<string> Prefixes { get; } Property Value Type Description List < String > The prefixes. Methods AddPrefix(String) Adds the prefix. Declaration public void AddPrefix(string urlPrefix) Parameters Type Name Description String urlPrefix The URL prefix. Dispose() Declaration public void Dispose() GetContextAsync(CancellationToken) Gets the HTTP context asynchronous. Declaration public Task<IHttpContextImpl> GetContextAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IHttpContextImpl > A task that represents the time delay for the HTTP Context. Start() Starts this listener. Declaration public void Start() Stop() Stops this listener. Declaration public void Stop() Implements IHttpListener IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.MimeTypes.html": {
    "href": "api/EmbedIO.MimeTypes.html",
    "title": "Class MimeTypes | Unosquare EmbedIO",
    "keywords": "Class MimeTypes Provides constants for commonly-used MIME types and association between file extensions and MIME types. Inheritance Object MimeTypes Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class MimeTypes Fields HtmlType The MIME type for HTML. Declaration public const string HtmlType = \"text/html\" Field Value Type Description String JsonType The MIME type for JSON. Declaration public const string JsonType = \"application/json\" Field Value Type Description String Properties Associations Associates file extensions to MIME types. Declaration public static IReadOnlyDictionary<string, string> Associations { get; } Property Value Type Description IReadOnlyDictionary < String , String > Remarks The list of MIME types has been copied from Samuel Neff's MIME Type Map on April 26th, 2019. Copyright (c) 2014 Samuel Neff. Redistributed under MIT license . See Also Associations Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.IWebServer.html": {
    "href": "api/EmbedIO.IWebServer.html",
    "title": "Interface IWebServer | Unosquare EmbedIO",
    "keywords": "Interface IWebServer Represents a web server. The basic usage of a web server is as follows: add modules to the Modules collection; set a SessionManager if needed; call RunAsync(CancellationToken) to respond to incoming requests. Inherited Members IWebModuleContainer.Modules Namespace : EmbedIO Syntax public interface IWebServer : IWebModuleContainer, IDisposable Properties SessionManager Gets or sets the registered session ID manager, if any. A session ID manager is an implementation of . Note that this property can only be set before starting the web server. Declaration ISessionManager SessionManager { get; set; } Property Value Type Description ISessionManager The session manager, or null if no session manager is present. State Gets the state of the web server. Declaration WebServerState State { get; } Property Value Type Description WebServerState The state. See Also WebServerState Methods RunAsync(CancellationToken) Starts the listener and the registered modules. Declaration Task RunAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken The cancellation token; when cancelled, the server cancels all pending requests and stops. Returns Type Description Task Returns the task that the HTTP listener is running inside of, so that it can be waited upon after it's been canceled. Events StateChanged Occurs when the State property changes. Declaration event WebServerStateChangedEventHandler StateChanged Event Type Type Description WebServerStateChangedEventHandler Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.IWebModuleContainer.html": {
    "href": "api/EmbedIO.IWebModuleContainer.html",
    "title": "Interface IWebModuleContainer | Unosquare EmbedIO",
    "keywords": "Interface IWebModuleContainer Represents an object that contains a collection of IWebModule interfaces. Namespace : EmbedIO Syntax public interface IWebModuleContainer : IDisposable Properties Modules Gets the modules. Declaration IComponentCollection<IWebModule> Modules { get; } Property Value Type Description IComponentCollection < IWebModule > The modules. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.IWebModule.html": {
    "href": "api/EmbedIO.IWebModule.html",
    "title": "Interface IWebModule | Unosquare EmbedIO",
    "keywords": "Interface IWebModule Represents a module. Namespace : EmbedIO Syntax public interface IWebModule Properties BaseUrlPath Gets base URL path that a module handles. Declaration string BaseUrlPath { get; } Property Value Type Description String The base URL path. Remarks A base URL path is either \"/\" (the root path), or a prefix starting and ending with a '/' character. Methods HandleRequestAsync(IHttpContext, String, CancellationToken) Handles a request from a client. Declaration Task<bool> HandleRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. Start(CancellationToken) Signals a module that the web server is starting. Declaration void Start(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Files.ResourceFilesModule.html": {
    "href": "api/EmbedIO.Files.ResourceFilesModule.html",
    "title": "Class ResourceFilesModule | Unosquare EmbedIO",
    "keywords": "Class ResourceFilesModule Represents a simple module to server resource files from the .NET assembly. Inheritance Object WebModuleBase FileModuleBase ResourceFilesModule Implements IWebModule Inherited Members FileModuleBase.DefaultHeaders FileModuleBase.UseGzip FileModuleBase.WriteFileAsync(String, IHttpResponse, Stream, Boolean, CancellationToken) FileModuleBase.SetDefaultCacheHeaders(IHttpResponse) FileModuleBase.SetGeneralHeaders(IHttpResponse, String, String) WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Files Syntax public class ResourceFilesModule : FileModuleBase, IWebModule Constructors ResourceFilesModule(String, Assembly, String, IDictionary<String, String>) Initializes a new instance of the ResourceFilesModule class. Declaration public ResourceFilesModule(string baseUrlPath, Assembly sourceAssembly, string resourcePath, IDictionary<string, string> headers = null) Parameters Type Name Description String baseUrlPath The base URL path. Assembly sourceAssembly The source assembly. String resourcePath The resource path. IDictionary < String , String > headers The headers. Methods OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected override Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Overrides WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Files.FileModuleBase.html": {
    "href": "api/EmbedIO.Files.FileModuleBase.html",
    "title": "Class FileModuleBase | Unosquare EmbedIO",
    "keywords": "Class FileModuleBase Represents a files module base. Inheritance Object WebModuleBase FileModuleBase ResourceFilesModule StaticFilesModule Implements IWebModule Inherited Members WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Files Syntax public abstract class FileModuleBase : WebModuleBase, IWebModule Constructors FileModuleBase(String, Boolean) Initializes a new instance of the FileModuleBase class. Declaration protected FileModuleBase(string baseUrlPath, bool useGzip) Parameters Type Name Description String baseUrlPath The base URL path. Boolean useGzip if set to true [use gzip]. Properties DefaultHeaders The default headers. Declaration public Dictionary<string, string> DefaultHeaders { get; } Property Value Type Description Dictionary < String , String > UseGzip Gets or sets a value indicating whether [use gzip]. Declaration public bool UseGzip { get; } Property Value Type Description Boolean true if [use gzip]; otherwise, false . Methods SetDefaultCacheHeaders(IHttpResponse) Sets the default cache headers. Declaration protected void SetDefaultCacheHeaders(IHttpResponse response) Parameters Type Name Description IHttpResponse response The response. SetGeneralHeaders(IHttpResponse, String, String) Sets the general headers. Declaration protected void SetGeneralHeaders(IHttpResponse response, string utcFileDateString, string fileExtension) Parameters Type Name Description IHttpResponse response The response. String utcFileDateString The UTC file date string. String fileExtension The file extension. WriteFileAsync(String, IHttpResponse, Stream, Boolean, CancellationToken) Writes the file asynchronous. Declaration protected Task WriteFileAsync(string partialHeader, IHttpResponse response, Stream buffer, bool useGzip = true, CancellationToken cancellationToken = null) Parameters Type Name Description String partialHeader The partial header. IHttpResponse response The response. Stream buffer The buffer. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellationToken. Returns Type Description Task Implements IWebModule See Also WebModuleBase Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Extensions.html": {
    "href": "api/EmbedIO.Extensions.html",
    "title": "Class Extensions | Unosquare EmbedIO",
    "keywords": "Class Extensions Extension methods to help your coding. Inheritance Object Extensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class Extensions Methods AcceptGzip(IHttpContext, Int64) Check if the Http Request can be gzipped (ignore audio and video content type). Declaration public static bool AcceptGzip(this IHttpContext context, long length) Parameters Type Name Description IHttpContext context The context. Int64 length The length. Returns Type Description Boolean true if a request can be gzipped; otherwise, false . BinaryResponseAsync(IHttpContext, Stream, Boolean, CancellationToken) Writes a binary response asynchronous. Declaration public static Task<bool> BinaryResponseAsync(this IHttpContext context, Stream buffer, bool useGzip = true, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpContext context The context. Stream buffer The buffer. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. CompressAsync(Stream, CompressionMethod, CompressionMode, CancellationToken) Compresses the specified buffer stream using the G-Zip compression algorithm. Declaration public static Task<MemoryStream> CompressAsync(this Stream buffer, CompressionMethod method = CompressionMethod.Gzip, CompressionMode mode = null, CancellationToken cancellationToken = null) Parameters Type Name Description Stream buffer The buffer. CompressionMethod method The method. CompressionMode mode The mode. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < MemoryStream > A task representing the block of bytes of compressed stream. FileResponseAsync(IHttpContext, FileInfo, String, Boolean, CancellationToken) Writes a binary response asynchronous. Declaration public static Task<bool> FileResponseAsync(this IHttpContext context, FileInfo file, string contentType = null, bool useGzip = true, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpContext context The context. FileInfo file The file. String contentType Type of the content. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. HasRequestHeader(IHttpContext, String) Determines whether [has request header] [the specified context]. Declaration public static bool HasRequestHeader(this IHttpContext context, string headerName) Parameters Type Name Description IHttpContext context The context. String headerName Name of the header. Returns Type Description Boolean true if request headers is not a null; otherwise, false. HtmlResponseAsync(IHttpContext, String, HttpStatusCode, Boolean, CancellationToken) Outputs a HTML Response given a HTML content. Declaration public static Task<bool> HtmlResponseAsync(this IHttpContext context, string htmlContent, HttpStatusCode statusCode = null, bool useGzip = true, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpContext context The context. String htmlContent Content of the HTML. HttpStatusCode statusCode The status code. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. InQueryString(IHttpContext, String) Determines if a key exists within the Request's query string. Declaration public static bool InQueryString(this IHttpContext context, string key) Parameters Type Name Description IHttpContext context The context. String key The key. Returns Type Description Boolean true if a key exists within the Request's query string; otherwise, false . JsonExceptionResponseAsync(IHttpContext, Exception, HttpStatusCode, Boolean, CancellationToken) Outputs a JSON Response given an exception. Declaration public static Task<bool> JsonExceptionResponseAsync(this IHttpContext context, Exception ex, HttpStatusCode statusCode = null, bool useGzip = true, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpContext context The context. Exception ex The ex. HttpStatusCode statusCode The status code. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. JsonResponseAsync(IHttpContext, Object, CancellationToken) Outputs async a Json Response given a data object. Declaration public static Task<bool> JsonResponseAsync(this IHttpContext context, object data, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpContext context The context. Object data The data. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A true value if the response output was set. JsonResponseAsync(IHttpContext, Object, Boolean, CancellationToken) Outputs async a Json Response given a data object. Declaration public static Task<bool> JsonResponseAsync(this IHttpContext context, object data, bool useGzip, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpContext context The context. Object data The data. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A true value if the response output was set. JsonResponseAsync(IHttpContext, String, CancellationToken) Outputs async a JSON Response given a JSON string. Declaration public static Task<bool> JsonResponseAsync(this IHttpContext context, string json, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpContext context The context. String json The JSON. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. JsonResponseAsync(IHttpContext, String, Boolean, CancellationToken) Outputs async a JSON Response given a JSON string. Declaration public static Task<bool> JsonResponseAsync(this IHttpContext context, string json, bool useGzip, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpContext context The context. String json The JSON. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. NoCache(IHttpContext) Sends headers to disable caching on the client side. Declaration public static void NoCache(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. ParseJsonAsync<T>(IHttpContext) Parses the JSON as a given type from the request body. Please note the underlying input stream is not rewindable. Declaration public static Task<T> ParseJsonAsync<T>(this IHttpContext context) where T : class Parameters Type Name Description IHttpContext context The context. Returns Type Description Task <T> A task with the JSON as a given type from the request body. Type Parameters Name Description T The type of specified object type. QueryString(IHttpContext, String) Gets the value for the specified query string key. If the value does not exist it returns null. Declaration public static string QueryString(this IHttpContext context, string key) Parameters Type Name Description IHttpContext context The context. String key The key. Returns Type Description String A string that represents the value for the specified query string key. RequestBodyAsync(IHttpContext) Retrieves the request body as a string. Note that once this method returns, the underlying input stream cannot be read again as it is not rewindable for obvious reasons. This functionality is by design. Declaration public static Task<string> RequestBodyAsync(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. Returns Type Description Task < String > A task with the rest of the stream as a string, from the current position to the end. If the current position is at the end of the stream, returns an empty string. RequestBodyAsync(IHttpRequest) Retrieves the request body as a string. Note that once this method returns, the underlying input stream cannot be read again as it is not rewindable for obvious reasons. This functionality is by design. Declaration public static Task<string> RequestBodyAsync(this IHttpRequest request) Parameters Type Name Description IHttpRequest request The request. Returns Type Description Task < String > A task with the rest of the stream as a string, from the current position to the end. If the current position is at the end of the stream, returns an empty string. RequestFormDataDictionary(String) Returns a dictionary of KVPs from Request data. Declaration public static Dictionary<string, object> RequestFormDataDictionary(this string requestBody) Parameters Type Name Description String requestBody The request body. Returns Type Description Dictionary < String , Object > A collection that represents KVPs from request data. RequestFormDataDictionaryAsync(IHttpContext) Returns dictionary from Request POST data Please note the underlying input stream is not rewindable. Declaration public static Task<Dictionary<string, object>> RequestFormDataDictionaryAsync(this IHttpContext context) Parameters Type Name Description IHttpContext context The context to request body as string. Returns Type Description Task < Dictionary < String , Object >> A task with a collection that represents KVPs from request data. RequestHeader(IHttpContext, String) Retrieves the specified request the header. Declaration public static string RequestHeader(this IHttpContext context, string headerName) Parameters Type Name Description IHttpContext context The context. String headerName Name of the header. Returns Type Description String Specified request the header when is true ; otherwise, empty string. RequestPath(IHttpContext) Gets the request path for the specified context. Declaration public static string RequestPath(this IHttpContext context) Parameters Type Name Description IHttpContext context The context. Returns Type Description String Path for the specified context. StringResponseAsync(IHttpContext, String, String, Encoding, Boolean, CancellationToken) Outputs async a string response given a string. Declaration public static Task<bool> StringResponseAsync(this IHttpContext context, string content, string contentType = \"application/json\", Encoding encoding = null, bool useGzip = true, CancellationToken cancellationToken = null) Parameters Type Name Description IHttpContext context The context. String content The content. String contentType Type of the content. Encoding encoding The encoding. Boolean useGzip if set to true [use gzip]. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. TransformJson<TIn, TOut>(IHttpContext, Func<TIn, TOut>, CancellationToken) Transforms the response body as JSON and write a new JSON to the request. Declaration public static Task<bool> TransformJson<TIn, TOut>(this IHttpContext context, Func<TIn, TOut> transformFunc, CancellationToken cancellationToken = null) where TIn : class Parameters Type Name Description IHttpContext context The context. Func <TIn, TOut> transformFunc The transform function. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. Type Parameters Name Description TIn The type of the input. TOut The type of the output. TransformJson<TIn, TOut>(IHttpContext, Func<TIn, CancellationToken, Task<TOut>>, CancellationToken) Transforms the response body as JSON and write a new JSON to the request. Declaration public static Task<bool> TransformJson<TIn, TOut>(this IHttpContext context, Func<TIn, CancellationToken, Task<TOut>> transformFunc, CancellationToken cancellationToken = null) where TIn : class Parameters Type Name Description IHttpContext context The context. Func <TIn, CancellationToken , Task <TOut>> transformFunc The transform function. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > A task for writing the output stream. Type Parameters Name Description TIn The type of the input. TOut The type of the output. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Cors.CorsModule.html": {
    "href": "api/EmbedIO.Cors.CorsModule.html",
    "title": "Class CorsModule | Unosquare EmbedIO",
    "keywords": "Class CorsModule Cross-origin resource sharing (CORS) control Module. CORS is a mechanism that allows restricted resources (e.g. fonts) on a web page to be requested from another domain outside the domain from which the resource originated. Inheritance Object WebModuleBase CorsModule Implements IWebModule Inherited Members WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Cors Syntax public class CorsModule : WebModuleBase, IWebModule Constructors CorsModule(String, String, String, String) Initializes a new instance of the CorsModule class. Declaration public CorsModule(string baseUrlPath, string origins = \"*\", string headers = \"*\", string methods = \"*\") Parameters Type Name Description String baseUrlPath The base URL path. String origins The valid origins. The default is All ( * ). String headers The valid headers. The default is All ( * ). String methods The valid methods. The default is All ( * ). Fields All A string meaning \"All\" in CORS headers. Declaration public const string All = \"*\" Field Value Type Description String Methods OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected override Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Overrides WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Authentication.html": {
    "href": "api/EmbedIO.Authentication.html",
    "title": "Namespace EmbedIO.Authentication | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Authentication Classes BasicAuthenticationModule Simple HTTP basic authorization module that stores credentials in a . BasicAuthenticationModuleBase Basic HTTP authorization module that will return 401 + WWW-Authenticate header if a request contains invalid or no credentials. BasicAuthenticationModuleExtensions Provides extension methods for BasicAuthenticationModule . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Authentication.BasicAuthenticationModuleBase.html": {
    "href": "api/EmbedIO.Authentication.BasicAuthenticationModuleBase.html",
    "title": "Class BasicAuthenticationModuleBase | Unosquare EmbedIO",
    "keywords": "Class BasicAuthenticationModuleBase Basic HTTP authorization module that will return 401 + WWW-Authenticate header if a request contains invalid or no credentials. Inheritance Object WebModuleBase BasicAuthenticationModuleBase BasicAuthenticationModule Implements IWebModule Inherited Members WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Authentication Syntax public abstract class BasicAuthenticationModuleBase : WebModuleBase, IWebModule Constructors BasicAuthenticationModuleBase(String, String) Initializes a new instance of the BasicAuthenticationModuleBase class. Declaration public BasicAuthenticationModuleBase(string baseUrlPath, string realm) Parameters Type Name Description String baseUrlPath The base URL path. String realm The authentication realm. Remarks If realm is null or the empty string, the Realm property will be set equal to BaseUrlPath . Properties Realm Gets the authentication realm. Declaration public string Realm { get; } Property Value Type Description String The authentication realm. Methods OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected override Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Overrides WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. VerifyCredentialsAsync(String, String) Verifies the credentials given in the Authentication request header. Declaration protected abstract Task<bool> VerifyCredentialsAsync(string userName, string password) Parameters Type Name Description String userName The user name. String password The password. Returns Type Description Task < Boolean > true if the credentials are valid; otherwise, false . Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Actions.html": {
    "href": "api/EmbedIO.Actions.html",
    "title": "Namespace EmbedIO.Actions | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Actions Classes ActionModule A module that passes requests to a callback. RedirectModule A module that redirects requests. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Actions.RedirectModule.html": {
    "href": "api/EmbedIO.Actions.RedirectModule.html",
    "title": "Class RedirectModule | Unosquare EmbedIO",
    "keywords": "Class RedirectModule A module that redirects requests. Inheritance Object WebModuleBase RedirectModule Implements IWebModule Inherited Members WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Actions Syntax public class RedirectModule : WebModuleBase, IWebModule Constructors RedirectModule(String, String, Func<IHttpContext, String, Boolean>, HttpStatusCode) Initializes a new instance of the RedirectModule class that will redirect all requests for which the shouldRedirect callback returns true . Declaration public RedirectModule(string baseUrlPath, string redirectUrl, Func<IHttpContext, string, bool> shouldRedirect, HttpStatusCode statusCode = null) Parameters Type Name Description String baseUrlPath The base URL path. String redirectUrl The redirect URL. Func < IHttpContext , String , Boolean > shouldRedirect A callback function that returns true if a request must be redirected. HttpStatusCode statusCode The response status code; default is 302 - Found . See Also WebModuleBase(String) RedirectModule(String, String, HttpStatusCode) Initializes a new instance of the RedirectModule class that will redirect all served requests. Declaration public RedirectModule(string baseUrlPath, string redirectUrl, HttpStatusCode statusCode = null) Parameters Type Name Description String baseUrlPath The base URL path. String redirectUrl The redirect URL. HttpStatusCode statusCode The response status code; default is 302 - Found . See Also WebModuleBase(String) Properties RedirectUrl Gets the redirect URL. Declaration public string RedirectUrl { get; } Property Value Type Description String StatusCode Gets the response status code. Declaration public HttpStatusCode StatusCode { get; } Property Value Type Description HttpStatusCode Methods OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected override Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Overrides WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. Implements IWebModule See Also WebModuleBase Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebServer.html": {
    "href": "api/EmbedIO.WebServer.html",
    "title": "Class WebServer | Unosquare EmbedIO",
    "keywords": "Class WebServer Represents our tiny web server used to handle requests. This is the default implementation of IWebServer and it's ready to select the IHttpListener implementation via the proper constructor. By default, the WebServer will use the Regex RoutingStrategy for all registered modules ( IWebModule ) and EmbedIO Listener ( HttpListenerMode ). Inheritance Object WebServerBase WebServer Implements IWebServer IWebModuleContainer IDisposable Inherited Members WebServerBase.StateChanged WebServerBase.Modules WebServerBase.SessionManager WebServerBase.State WebServerBase.RunAsync(CancellationToken) WebServerBase.Dispose() WebServerBase.OnBeforeLockConfiguration() Namespace : EmbedIO Syntax public class WebServer : WebServerBase, IWebServer, IWebModuleContainer, IDisposable Constructors WebServer() Initializes a new instance of the WebServer class. Default settings are Regex RoutingStrategy, EmbedIO HttpListenerMode, and binding all network interfaces with HTTP protocol and default port (http://*:80/). Declaration public WebServer() WebServer(WebServerOptions) Initializes a new instance of the WebServer class. Declaration public WebServer(WebServerOptions options) Parameters Type Name Description WebServerOptions options The WebServer options. WebServer(Int32) Initializes a new instance of the WebServer class. Default settings are Regex RoutingStrategy, EmbedIO HttpListenerMode, and binding all network interfaces with HTTP protocol with the selected port (http://*:{port}/). Declaration public WebServer(int port) Parameters Type Name Description Int32 port The port. WebServer(String) Initializes a new instance of the WebServer class. Default settings are Regex RoutingStrategy and EmbedIO HttpListenerMode. Declaration public WebServer(string urlPrefix) Parameters Type Name Description String urlPrefix The URL prefix. Remarks urlPrefix must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. WebServer(String[]) Initializes a new instance of the WebServer class. Default settings are Regex RoutingStrategy and EmbedIO HttpListenerMode. Declaration public WebServer(string[] urlPrefixes) Parameters Type Name Description String [] urlPrefixes The URL prefix. Remarks urlPrefixes must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. WebServer(String[], HttpListenerMode) Initializes a new instance of the WebServer class. Declaration public WebServer(string[] urlPrefixes, HttpListenerMode mode) Parameters Type Name Description String [] urlPrefixes The URL prefix. HttpListenerMode mode The mode. Remarks urlPrefixes must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. WebServer(String[], HttpListenerMode, X509Certificate) Initializes a new instance of the WebServer class. Declaration public WebServer(string[] urlPrefixes, HttpListenerMode mode, X509Certificate certificate) Parameters Type Name Description String [] urlPrefixes The URL prefix. HttpListenerMode mode The mode. X509Certificate certificate The certificate. Remarks urlPrefixes must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. WebServer(String[], IHttpListener) Initializes a new instance of the WebServer class. Declaration public WebServer(string[] urlPrefixes, IHttpListener httpListener) Parameters Type Name Description String [] urlPrefixes The URL prefix. IHttpListener httpListener The HTTP listener. Remarks urlPrefixes must be specified as something similar to: http://localhost:9696/ Please notice the ending slash. -- It is important. Properties Listener Gets the underlying HTTP listener. Declaration public IHttpListener Listener { get; protected set; } Property Value Type Description IHttpListener The listener. UrlPrefixes Gets the URL Prefix for which the server is serving requests. Declaration public List<string> UrlPrefixes { get; } Property Value Type Description List < String > The URL prefix. Methods Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides WebServerBase.Dispose(Boolean) GetContextAsync(CancellationToken) Asynchronously waits for a request, accepts it, and returns a newly-constructed HTTP context. Declaration protected override Task<IHttpContextImpl> GetContextAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. Returns Type Description Task < IHttpContextImpl > An awaitable that returns a HTTP context. Overrides WebServerBase.GetContextAsync(CancellationToken) OnFatalException() Called when an exception is caught in the web server's request processing loop. This method should tell the server socket to stop accepting further requests. Declaration protected override void OnFatalException() Overrides WebServerBase.OnFatalException() Prepare(CancellationToken) Prepares a web server for running. Declaration protected override void Prepare(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. Overrides WebServerBase.Prepare(CancellationToken) ShouldProcessMoreRequests() Tells whether a web server should continue processing requests. This method is call each time before trying to accept a request. Declaration protected override bool ShouldProcessMoreRequests() Returns Type Description Boolean true if the web server should continue processing requests; otherwise, false . Overrides WebServerBase.ShouldProcessMoreRequests() Implements IWebServer IWebModuleContainer IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebModuleContainerExtensions.html": {
    "href": "api/EmbedIO.WebModuleContainerExtensions.html",
    "title": "Class WebModuleContainerExtensions | Unosquare EmbedIO",
    "keywords": "Class WebModuleContainerExtensions Contains extension methods for types implementing IWebModuleContainer . Inheritance Object WebModuleContainerExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class WebModuleContainerExtensions Methods OnAny<TContainer>(TContainer, WebHandler) Creates an instance of that intercepts all requests and adds it to a module container. Declaration public static TContainer OnAny<TContainer>(this TContainer this, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnAny<TContainer>(TContainer, String, WebHandler) Creates an instance of that intercepts all requests under the specified baseUrlPath and adds it to a module container. Declaration public static TContainer OnAny<TContainer>(this TContainer this, string baseUrlPath, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnDelete<TContainer>(TContainer, WebHandler) Creates an instance of that intercepts all DELETE requests and adds it to a module container. Declaration public static TContainer OnDelete<TContainer>(this TContainer this, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnDelete<TContainer>(TContainer, String, WebHandler) Creates an instance of that intercepts all DELETE requests under the specified baseUrlPath and adds it to a module container. Declaration public static TContainer OnDelete<TContainer>(this TContainer this, string baseUrlPath, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnGet<TContainer>(TContainer, WebHandler) Creates an instance of that intercepts all GET requests and adds it to a module container. Declaration public static TContainer OnGet<TContainer>(this TContainer this, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnGet<TContainer>(TContainer, String, WebHandler) Creates an instance of that intercepts all GET requests under the specified baseUrlPath and adds it to a module container. Declaration public static TContainer OnGet<TContainer>(this TContainer this, string baseUrlPath, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnHead<TContainer>(TContainer, WebHandler) Creates an instance of that intercepts all HEAD requests and adds it to a module container. Declaration public static TContainer OnHead<TContainer>(this TContainer this, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnHead<TContainer>(TContainer, String, WebHandler) Creates an instance of that intercepts all HEAD requests under the specified baseUrlPath and adds it to a module container. Declaration public static TContainer OnHead<TContainer>(this TContainer this, string baseUrlPath, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnOptions<TContainer>(TContainer, WebHandler) Creates an instance of that intercepts all OPTIONS requests and adds it to a module container. Declaration public static TContainer OnOptions<TContainer>(this TContainer this, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnOptions<TContainer>(TContainer, String, WebHandler) Creates an instance of that intercepts all OPTIONS requests under the specified baseUrlPath and adds it to a module container. Declaration public static TContainer OnOptions<TContainer>(this TContainer this, string baseUrlPath, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnPatch<TContainer>(TContainer, WebHandler) Creates an instance of that intercepts all PATCH requests and adds it to a module container. Declaration public static TContainer OnPatch<TContainer>(this TContainer this, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnPatch<TContainer>(TContainer, String, WebHandler) Creates an instance of that intercepts all PATCH requests under the specified baseUrlPath and adds it to a module container. Declaration public static TContainer OnPatch<TContainer>(this TContainer this, string baseUrlPath, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnPost<TContainer>(TContainer, WebHandler) Creates an instance of that intercepts all POST requests and adds it to a module container. Declaration public static TContainer OnPost<TContainer>(this TContainer this, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnPost<TContainer>(TContainer, String, WebHandler) Creates an instance of that intercepts all POST requests under the specified baseUrlPath and adds it to a module container. Declaration public static TContainer OnPost<TContainer>(this TContainer this, string baseUrlPath, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnPut<TContainer>(TContainer, WebHandler) Creates an instance of that intercepts all PUT requests and adds it to a module container. Declaration public static TContainer OnPut<TContainer>(this TContainer this, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules OnPut<TContainer>(TContainer, String, WebHandler) Creates an instance of that intercepts all PUT requests under the specified baseUrlPath and adds it to a module container. Declaration public static TContainer OnPut<TContainer>(this TContainer this, string baseUrlPath, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules WithAction<TContainer>(TContainer, HttpVerbs, WebHandler) Creates an instance of with a base URL path of \"/\" and adds it to a module container. Declaration public static TContainer WithAction<TContainer>(this TContainer this, HttpVerbs verb, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. HttpVerbs verb The HTTP verb that will be served by handler . WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules WithAction<TContainer>(TContainer, String, HttpVerbs, WebHandler) Creates an instance of and adds it to a module container. Declaration public static TContainer WithAction<TContainer>(this TContainer this, string baseUrlPath, HttpVerbs verb, WebHandler handler) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. HttpVerbs verb The HTTP verb that will be served by handler . WebHandler handler The callback used to handle requests. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules WithCors<TContainer>(TContainer, String, String, String) Creates an instance of and adds it to a module container. Declaration public static TContainer WithCors<TContainer>(this TContainer this, string origins = null, string headers = null, string methods = null) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String origins The valid origins. Default is \"*\" , meaning all origins. String headers The valid headers. Default is \"*\" , meaning all headers. String methods The valid method. Default is \"*\" , meaning all methods. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. WithCors<TContainer>(TContainer, String, String, String, String) Creates an instance of and adds it to a module container. Declaration public static TContainer WithCors<TContainer>(this TContainer this, string baseUrlPath, string origins, string headers, string methods) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. String origins The valid origins. Default is \"*\" , meaning all origins. String headers The valid headers. Default is \"*\" , meaning all headers. String methods The valid method. Default is \"*\" , meaning all methods. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. WithModule<TContainer>(TContainer, IWebModule) Adds the specified module to a module container, without giving it a name. Declaration public static TContainer WithModule<TContainer>(this TContainer this, IWebModule module) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. IWebModule module The module. Returns Type Description TContainer this with module added. Type Parameters Name Description TContainer The type of the module container. See Also Modules WithModule<TContainer>(TContainer, String, IWebModule) Adds the specified module to a module container, giving it the specified name if not null . Declaration public static TContainer WithModule<TContainer>(this TContainer this, string name, IWebModule module) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String name The name. IWebModule module The module. Returns Type Description TContainer this with module added. Type Parameters Name Description TContainer The type of the module container. See Also Modules WithRouting<TContainer>(TContainer, String, Action<RoutingModule>) Creates an instance of and adds it to a module container. Declaration public static TContainer WithRouting<TContainer>(this TContainer this, string baseUrlPath, Action<RoutingModule> configure) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. Action < RoutingModule > configure A callback used to configure the newly-created . Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules WithStaticFolderAt<TContainer>(TContainer, String, String, FileCachingMode, String, String, Boolean) Creates an instance of and adds it to a module container. Declaration public static TContainer WithStaticFolderAt<TContainer>(this TContainer this, string baseUrlPath, string fileSystemPath, FileCachingMode fileCachingMode = null, string defaultDocument = null, string defaultExtension = null, bool useDirectoryBrowser = false) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. String fileSystemPath The path of the directory to serve. FileCachingMode fileCachingMode The file caching mode. String defaultDocument The default document name. String defaultExtension The default document extension. Boolean useDirectoryBrowser If set to true , requests mapped to a directory where the default document was not specified or is not found will return a listing of the directory itself; if set to false , those requests will fail as if the directory was not found. Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules WithWebApi<TContainer>(TContainer, String, Action<WebApiModule>) Creates an instance of and adds it to a module container. Declaration public static TContainer WithWebApi<TContainer>(this TContainer this, string baseUrlPath, Action<WebApiModule> configure) where TContainer : class, IWebModuleContainer Parameters Type Name Description TContainer this The TContainer on which this method is called. String baseUrlPath The base URL path of the module. Action < WebApiModule > configure A callback used to configure the newly-created . Returns Type Description TContainer this with a added. Type Parameters Name Description TContainer The type of the module container. See Also Modules Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebModuleBase.html": {
    "href": "api/EmbedIO.WebModuleBase.html",
    "title": "Class WebModuleBase | Unosquare EmbedIO",
    "keywords": "Class WebModuleBase Base class to define web modules. Although it is not required that a module inherits from this class, it provides some useful features: validation and immutability of the BaseUrlPath property, which are of paramount importance for the correct functioning of a web server; support for configuration locking upon web server startup (see the property and the method); a basic implementation of the Start(CancellationToken) method for modules that do not need to do anything upon web server startup; support for module-level exception handling via the OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) callback. Inheritance Object WebModuleBase ActionModule RedirectModule BasicAuthenticationModuleBase CorsModule FileModuleBase ModuleGroup RoutingModuleBase WebSocketModule Implements IWebModule Namespace : EmbedIO Syntax public abstract class WebModuleBase : ConfiguredObject, IWebModule Constructors WebModuleBase(String) Initializes a new instance of the WebModuleBase class. Declaration protected WebModuleBase(string baseUrlPath) Parameters Type Name Description String baseUrlPath The base URL path served by this module. See Also BaseUrlPath Properties BaseUrlPath Gets base URL path that a module handles. Declaration public string BaseUrlPath { get; } Property Value Type Description String The base URL path. Remarks A base URL path is either \"/\" (the root path), or a prefix starting and ending with a '/' character. Methods HandleRequestAsync(IHttpContext, String, CancellationToken) Handles a request from a client. Declaration public Task<bool> HandleRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Called when an exception is thrown while handling a request. The default behavior is to rethrow the exception, preserving the original stack trace, so that it may be handled by the server. Declaration protected virtual Task<bool> OnExceptionAsync(IHttpContext context, string path, Exception exception, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . Exception exception The exception thrown by the controller. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected abstract Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. OnStart(CancellationToken) Called when a module is started, immediately before locking the module's configuration. Declaration protected virtual void OnStart(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. Start(CancellationToken) Signals a module that the web server is starting. Declaration public void Start(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. Remarks The module's configuration is locked before returning from this method. Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebHandler.html": {
    "href": "api/EmbedIO.WebHandler.html",
    "title": "Delegate WebHandler | Unosquare EmbedIO",
    "keywords": "Delegate WebHandler A callback used to handle a request. Namespace : EmbedIO Syntax public delegate Task<bool> WebHandler(IHttpContext context, string path, CancellationToken cancellationToken); Parameters Type Name Description IHttpContext context A IHttpContext interface representing the context of the request. String path The requested path, relative to the innermost containing module's BaseUrlPath . CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > A representing the ongoing operation, whose result will tell whether the request has been handled. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebApi.html": {
    "href": "api/EmbedIO.WebApi.html",
    "title": "Namespace EmbedIO.WebApi | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.WebApi Classes RouteParameterConverter Provides utility methods related to the conversion of route parameters to parameters of a WebApiController handler method. WebApiController Inherit from this class and define your own Web API methods You must RegisterController in the Web API Module to make it active. WebApiModule WebApiModuleBase A very simple module to register class methods as handlers. Public instance methods that match the WebServerModule.ResponseHandler signature, and have the WebApi handler attribute will be used to respond to web server requests. WebApiModuleExtensions Provides extension methods for WebApiModule . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebApi.WebApiModuleExtensions.html": {
    "href": "api/EmbedIO.WebApi.WebApiModuleExtensions.html",
    "title": "Class WebApiModuleExtensions | Unosquare EmbedIO",
    "keywords": "Class WebApiModuleExtensions Provides extension methods for WebApiModule . Inheritance Object WebApiModuleExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.WebApi Syntax public static class WebApiModuleExtensions Methods WithController(WebApiModule, Type) Registers a controller type using a constructor. See RegisterControllerType(Type) for further information. Declaration public static WebApiModule WithController(this WebApiModule this, Type controllerType) Parameters Type Name Description WebApiModule this The WebApiModule on which this method is called. Type controllerType The type of the controller. Returns Type Description WebApiModule this with the controller type registered. See Also WithController(WebApiModule, Type, Func<IHttpContext, CancellationToken, WebApiController>) WithController<TController>(WebApiModule) RegisterControllerType ( Type ) WithController(WebApiModule, Type, Func<IHttpContext, CancellationToken, WebApiController>) Registers a controller type using a factory method. See RegisterControllerType(Type, Func<IHttpContext, CancellationToken, WebApiController>) for further information. Declaration public static WebApiModule WithController(this WebApiModule this, Type controllerType, Func<IHttpContext, CancellationToken, WebApiController> factory) Parameters Type Name Description WebApiModule this The WebApiModule on which this method is called. Type controllerType The type of the controller. Func < IHttpContext , CancellationToken , WebApiController > factory The factory method used to construct instances of controllerType . Returns Type Description WebApiModule this with the controller type registered. See Also WithController(WebApiModule, Type) WithController<TController>(WebApiModule, Func<IHttpContext, CancellationToken, TController>) RegisterControllerType ( Type , Func < IHttpContext , CancellationToken , WebApiController >) WithController<TController>(WebApiModule) Registers a controller type using a constructor. See RegisterControllerType<TController>() for further information. Declaration public static WebApiModule WithController<TController>(this WebApiModule this) where TController : WebApiController Parameters Type Name Description WebApiModule this The WebApiModule on which this method is called. Returns Type Description WebApiModule this with the controller type registered. Type Parameters Name Description TController The type of the controller. See Also WithController<TController>(WebApiModule, Func<IHttpContext, CancellationToken, TController>) WithController(WebApiModule, Type) RegisterControllerType<TController> () WithController<TController>(WebApiModule, Func<IHttpContext, CancellationToken, TController>) Registers a controller type using a factory method. See RegisterControllerType<TController>(Func<IHttpContext, CancellationToken, TController>) for further information. Declaration public static WebApiModule WithController<TController>(this WebApiModule this, Func<IHttpContext, CancellationToken, TController> factory) where TController : WebApiController Parameters Type Name Description WebApiModule this The WebApiModule on which this method is called. Func < IHttpContext , CancellationToken , TController> factory The factory method used to construct instances of TController . Returns Type Description WebApiModule this with the controller type registered. Type Parameters Name Description TController The type of the controller. See Also WithController<TController>(WebApiModule) WithController(WebApiModule, Type, Func<IHttpContext, CancellationToken, WebApiController>) RegisterControllerType<TController> ( Func < IHttpContext , CancellationToken , TController>) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebApi.WebApiModuleBase.html": {
    "href": "api/EmbedIO.WebApi.WebApiModuleBase.html",
    "title": "Class WebApiModuleBase | Unosquare EmbedIO",
    "keywords": "Class WebApiModuleBase A very simple module to register class methods as handlers. Public instance methods that match the WebServerModule.ResponseHandler signature, and have the WebApi handler attribute will be used to respond to web server requests. Inheritance Object WebApiModuleBase WebApiModule Namespace : EmbedIO.WebApi Syntax public abstract class WebApiModuleBase : RoutingModuleBase Constructors WebApiModuleBase(String) Initializes a new instance of the WebApiModuleBase class. Declaration protected WebApiModuleBase(string baseUrlPath) Parameters Type Name Description String baseUrlPath The base URL path served by this module. See Also BaseUrlPath Properties ControllerCount Gets the number of controller types registered in this module. Declaration public int ControllerCount { get; } Property Value Type Description Int32 Methods OnParameterConversionErrorAsync(IHttpContext, String, Exception, CancellationToken) Called when EmbedIO fails to convert a route parameter to a handler parameter type. The default behavior is to send an empty 400 Bad Request response. Declaration protected virtual Task<bool> OnParameterConversionErrorAsync(IHttpContext context, string name, Exception exception, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String name The name of the route parameter. Exception exception The exception that was thrown. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. RegisterControllerType(Type) Registers a controller type using a constructor. In order for registration to be successful, the specified controllerType : must be a subclass of WebApiController ; must not be an abstract class; must not be a generic type definition; must have a public constructor with two parameters of type IHttpContext and , in this order. Declaration protected void RegisterControllerType(Type controllerType) Parameters Type Name Description Type controllerType The type of the controller. Remarks A new instance of controllerType will be created for each request to handle, and dereferenced immediately afterwards, to be collected during next garbage collection cycle. controllerType is not required to be thread-safe, as it will be constructed and used in the same synchronization context. However, since request handling is asynchronous, the actual execution thread may vary during execution. Care must be exercised when using thread-sensitive resources or thread-static data. If controllerType implements , its Dispose method will be called when it has finished handling a request. See Also RegisterControllerType(Type, Func<IHttpContext, CancellationToken, WebApiController>) RegisterControllerType<TController>() RegisterControllerType(Type, Func<IHttpContext, CancellationToken, WebApiController>) Registers a controller type using a factory method. In order for registration to be successful: controllerType must be a subclass of WebApiController ; controllerType must not be an abstract class; controllerType must not be a generic type definition; factory 's return type must be either controllerType or a subclass of controllerType . Declaration protected void RegisterControllerType(Type controllerType, Func<IHttpContext, CancellationToken, WebApiController> factory) Parameters Type Name Description Type controllerType The type of the controller. Func < IHttpContext , CancellationToken , WebApiController > factory The factory method used to construct instances of controllerType . Remarks factory will be called once for each request to handle in order to obtain an instance of controllerType . The returned instance will be dereferenced immediately after handling the request. controllerType is not required to be thread-safe, as it will be constructed and used in the same synchronization context. However, since request handling is asynchronous, the actual execution thread may vary during execution. Care must be exercised when using thread-sensitive resources or thread-static data. If controllerType implements , its Dispose method will be called when it has finished handling a request. In this case it is recommended that factory return a newly-constructed instance of controllerType at each invocation. If controllerType does not implement , factory may employ techniques such as instance pooling to avoid the overhead of constructing a new instance of controllerType at each invocation. If so, resources such as file handles, database connections, etc. should be freed before returning from each handler method to avoid starvation . See Also RegisterControllerType(Type) RegisterControllerType<TController>(Func<IHttpContext, CancellationToken, TController>) RegisterControllerType<TController>() Registers a controller type using a constructor. In order for registration to be successful, the specified controller type: must be a subclass of WebApiController ; must not be an abstract class; must not be a generic type definition; must have a public constructor with two parameters of type IHttpContext and , in this order. Declaration protected void RegisterControllerType<TController>() where TController : WebApiController Type Parameters Name Description TController The type of the controller. Remarks A new instance of TController will be created for each request to handle, and dereferenced immediately afterwards, to be collected during next garbage collection cycle. TController is not required to be thread-safe, as it will be constructed and used in the same synchronization context. However, since request handling is asynchronous, the actual execution thread may vary during execution. Care must be exercised when using thread-sensitive resources or thread-static data. If TController implements , its Dispose method will be called when it has finished handling a request. See Also RegisterControllerType<TController>(Func<IHttpContext, CancellationToken, TController>) RegisterControllerType(Type) RegisterControllerType<TController>(Func<IHttpContext, CancellationToken, TController>) Registers a controller type using a factory method. In order for registration to be successful: TController must be a subclass of WebApiController ; TController must not be an abstract class; TController must not be a generic type definition; factory 's return type must be either TController or a subclass of TController . Declaration protected void RegisterControllerType<TController>(Func<IHttpContext, CancellationToken, TController> factory) where TController : WebApiController Parameters Type Name Description Func < IHttpContext , CancellationToken , TController> factory The factory method used to construct instances of TController . Type Parameters Name Description TController The type of the controller. Remarks factory will be called once for each request to handle in order to obtain an instance of TController . The returned instance will be dereferenced immediately after handling the request. TController is not required to be thread-safe, as it will be constructed and used in the same synchronization context. However, since request handling is asynchronous, the actual execution thread may vary during execution. Care must be exercised when using thread-sensitive resources or thread-static data. If TController implements , its Dispose method will be called when it has finished handling a request. In this case it is recommended that factory return a newly-constructed instance of TController at each invocation. If TController does not implement , factory may employ techniques such as instance pooling to avoid the overhead of constructing a new instance of TController at each invocation. If so, resources such as file handles, database connections, etc. should be freed before returning from each handler method to avoid starvation . See Also RegisterControllerType<TController>() RegisterControllerType(Type, Func<IHttpContext, CancellationToken, WebApiController>) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.WebApi.WebApiModule.html": {
    "href": "api/EmbedIO.WebApi.WebApiModule.html",
    "title": "Class WebApiModule | Unosquare EmbedIO",
    "keywords": "Class WebApiModule Inheritance Object WebApiModuleBase WebApiModule Inherited Members WebApiModuleBase.ControllerCount WebApiModuleBase.RegisterControllerType<TController>() WebApiModuleBase.RegisterControllerType<TController>(Func<IHttpContext, CancellationToken, TController>) WebApiModuleBase.RegisterControllerType(Type) WebApiModuleBase.RegisterControllerType(Type, Func<IHttpContext, CancellationToken, WebApiController>) WebApiModuleBase.OnParameterConversionErrorAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.WebApi Syntax public class WebApiModule : WebApiModuleBase Constructors WebApiModule(String) Initializes a new instance of the WebApiModule class. Declaration public WebApiModule(string baseUrlPath) Parameters Type Name Description String baseUrlPath The base URL path served by this module. See Also BaseUrlPath Methods RegisterController(Type) Registers a controller type using a constructor. See RegisterControllerType(Type) for further information. Declaration public void RegisterController(Type controllerType) Parameters Type Name Description Type controllerType The type of the controller. See Also RegisterController(Type, Func<IHttpContext, CancellationToken, WebApiController>) RegisterController<TController>() RegisterControllerType ( Type ) RegisterController(Type, Func<IHttpContext, CancellationToken, WebApiController>) Registers a controller type using a factory method. See RegisterControllerType(Type, Func<IHttpContext, CancellationToken, WebApiController>) for further information. Declaration public void RegisterController(Type controllerType, Func<IHttpContext, CancellationToken, WebApiController> factory) Parameters Type Name Description Type controllerType The type of the controller. Func < IHttpContext , CancellationToken , WebApiController > factory The factory method used to construct instances of controllerType . See Also RegisterController(Type) RegisterController<TController>(Func<IHttpContext, CancellationToken, TController>) RegisterControllerType ( Type , Func < IHttpContext , CancellationToken , WebApiController >) RegisterController<TController>() Registers a controller type using a constructor. See RegisterControllerType<TController>() for further information. Declaration public void RegisterController<TController>() where TController : WebApiController Type Parameters Name Description TController The type of the controller. See Also RegisterController<TController>(Func<IHttpContext, CancellationToken, TController>) RegisterController(Type) RegisterControllerType<TController> () RegisterController<TController>(Func<IHttpContext, CancellationToken, TController>) Registers a controller type using a factory method. See RegisterControllerType<TController>(Func<IHttpContext, CancellationToken, TController>) for further information. Declaration public void RegisterController<TController>(Func<IHttpContext, CancellationToken, TController> factory) where TController : WebApiController Parameters Type Name Description Func < IHttpContext , CancellationToken , TController> factory The factory method used to construct instances of TController . Type Parameters Name Description TController The type of the controller. See Also RegisterController<TController>() RegisterController(Type, Func<IHttpContext, CancellationToken, WebApiController>) RegisterControllerType<TController> ( Func < IHttpContext , CancellationToken , TController>) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.ConcurrentDataDictionary-2.html": {
    "href": "api/EmbedIO.Utilities.ConcurrentDataDictionary-2.html",
    "title": "Class ConcurrentDataDictionary<TKey, TValue> | Unosquare EmbedIO",
    "keywords": "Class ConcurrentDataDictionary<TKey, TValue> Represents a thread-safe collection of key/value pairs that does not store null values and can be accessed by multiple threads concurrently. Inheritance Object ConcurrentDataDictionary<TKey, TValue> Implements IDataDictionary <TKey, TValue> IDictionary <TKey, TValue> IReadOnlyDictionary <TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public sealed class ConcurrentDataDictionary<TKey, TValue> : IDataDictionary<TKey, TValue>, IDictionary<TKey, TValue>, IReadOnlyDictionary<TKey, TValue> where TKey : class where TValue : class Type Parameters Name Description TKey The type of keys in the dictionary. This must be a reference type. TValue The type of values in the dictionary. This must be a reference type. Constructors ConcurrentDataDictionary() Initializes a new instance of the ConcurrentDataDictionary<TKey, TValue> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for TKey . Declaration public ConcurrentDataDictionary() ConcurrentDataDictionary(IEnumerable<KeyValuePair<TKey, TValue>>) Initializes a new instance of the ConcurrentDataDictionary<TKey, TValue> class that contains elements copied from the specified , has the default concurrency level, has the default initial capacity, and uses the default comparer for TKey . Declaration public ConcurrentDataDictionary(IEnumerable<KeyValuePair<TKey, TValue>> collection) Parameters Type Name Description IEnumerable < KeyValuePair <TKey, TValue>> collection The whose elements are copied to the new ConcurrentDataDictionary<TKey, TValue> . Remarks Since ConcurrentDataDictionary<TKey, TValue> does not store null values, key/value pairs whose value is null will not be copied from collection . ConcurrentDataDictionary(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>) Initializes a new instance of the ConcurrentDataDictionary<TKey, TValue> class that contains elements copied from the specified , has the default concurrency level, has the default initial capacity, and uses the specified . Declaration public ConcurrentDataDictionary(IEnumerable<KeyValuePair<TKey, TValue>> collection, IEqualityComparer<TKey> comparer) Parameters Type Name Description IEnumerable < KeyValuePair <TKey, TValue>> collection The whose elements are copied to the new ConcurrentDataDictionary<TKey, TValue> . IEqualityComparer <TKey> comparer The equality comparison implementation to use when comparing keys. Remarks Since ConcurrentDataDictionary<TKey, TValue> does not store null values, key/value pairs whose value is null will not be copied from collection . ConcurrentDataDictionary(IEqualityComparer<TKey>) Initializes a new instance of the ConcurrentDataDictionary<TKey, TValue> class that is empty, has the default concurrency level and capacity, and uses the specified . Declaration public ConcurrentDataDictionary(IEqualityComparer<TKey> comparer) Parameters Type Name Description IEqualityComparer <TKey> comparer The equality comparison implementation to use when comparing keys. ConcurrentDataDictionary(Int32, IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>) Initializes a new instance of the ConcurrentDataDictionary<TKey, TValue> class that contains elements copied from the specified , has the specified concurrency level, has the default initial capacity, and uses the specified . Declaration public ConcurrentDataDictionary(int concurrencyLevel, IEnumerable<KeyValuePair<TKey, TValue>> collection, IEqualityComparer<TKey> comparer) Parameters Type Name Description Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentDataDictionary<TKey, TValue> concurrently. IEnumerable < KeyValuePair <TKey, TValue>> collection The whose elements are copied to the new ConcurrentDataDictionary<TKey, TValue> . IEqualityComparer <TKey> comparer The equality comparison implementation to use when comparing keys. Remarks Since ConcurrentDataDictionary<TKey, TValue> does not store null values, key/value pairs whose value is null will not be copied from collection . ConcurrentDataDictionary(Int32, Int32) Initializes a new instance of the ConcurrentDataDictionary<TKey, TValue> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the key type. Declaration public ConcurrentDataDictionary(int concurrencyLevel, int capacity) Parameters Type Name Description Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentDataDictionary<TKey, TValue> concurrently. Int32 capacity The initial number of elements that the ConcurrentDataDictionary<TKey, TValue> can contain. Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Item[TKey] Declaration public TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TValue Keys Declaration public ICollection<TKey> Keys { get; } Property Value Type Description ICollection <TKey> Values Declaration public ICollection<TValue> Values { get; } Property Value Type Description ICollection <TValue> Methods Clear() Declaration public void Clear() ContainsKey(TKey) Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description Boolean GetOrAdd(TKey, TValue) Declaration public TValue GetOrAdd(TKey key, TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description TValue Remove(TKey) Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description Boolean TryAdd(TKey, TValue) Declaration public bool TryAdd(TKey key, TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description Boolean TryGetValue(TKey, out TValue) Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description Boolean TryRemove(TKey, out TValue) Declaration public bool TryRemove(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description Boolean TryUpdate(TKey, TValue, TValue) Declaration public bool TryUpdate(TKey key, TValue newValue, TValue comparisonValue) Parameters Type Name Description TKey key TValue newValue TValue comparisonValue Returns Type Description Boolean Implements IDataDictionary<TKey, TValue> IDictionary<, > IReadOnlyDictionary<, > See Also IDataDictionary <TKey, TValue> Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Utilities.ComponentCollectionExtensions.html": {
    "href": "api/EmbedIO.Utilities.ComponentCollectionExtensions.html",
    "title": "Class ComponentCollectionExtensions | Unosquare EmbedIO",
    "keywords": "Class ComponentCollectionExtensions Provides extension methods for types implementing IComponentCollection<T> . Inheritance Object ComponentCollectionExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Utilities Syntax public static class ComponentCollectionExtensions Methods Add<T>(IComponentCollection<T>, T) Adds the specified component to a collection, without giving it a name. Declaration public static void Add<T>(this IComponentCollection<T> this, T component) Parameters Type Name Description IComponentCollection <T> this The IComponentCollection<T> on which this method is called. T component The component to add. Type Parameters Name Description T See Also Add ( String , T) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Tests.TestHttpRequest.html": {
    "href": "api/EmbedIO.Tests.TestHttpRequest.html",
    "title": "Class TestHttpRequest | Unosquare EmbedIO",
    "keywords": "Class TestHttpRequest Represents an IHttpRequest implementation for unit testing. Inheritance Object TestHttpRequest Implements IHttpRequest IHttpMessage Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Tests Syntax public class TestHttpRequest : IHttpRequest, IHttpMessage Constructors TestHttpRequest(HttpVerbs) Initializes a new instance of the TestHttpRequest class. Declaration public TestHttpRequest(HttpVerbs httpVerb = HttpVerbs.Get) Parameters Type Name Description HttpVerbs httpVerb The HTTP method. TestHttpRequest(String, HttpVerbs) Initializes a new instance of the TestHttpRequest class. Declaration public TestHttpRequest(string url, HttpVerbs httpVerb = HttpVerbs.Get) Parameters Type Name Description String url The URL. HttpVerbs httpVerb The HTTP method. Properties ContentEncoding Gets the content encoding. Declaration public Encoding ContentEncoding { get; } Property Value Type Description Encoding ContentLength64 Gets the content length. Declaration public long ContentLength64 { get; } Property Value Type Description Int64 ContentType Gets the type of the content. Declaration public string ContentType { get; } Property Value Type Description String Cookies Gets the cookies. Declaration public ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. HasEntityBody Gets a value indicating whether this instance has entity body. Declaration public bool HasEntityBody { get; } Property Value Type Description Boolean Headers Gets the request headers. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection HttpMethod Gets the HTTP method. Declaration public string HttpMethod { get; } Property Value Type Description String HttpVerb Gets a HttpVerbs constant representing the HTTP method of the request. Declaration public HttpVerbs HttpVerb { get; } Property Value Type Description HttpVerbs InputStream Gets the input stream. Declaration public Stream InputStream { get; } Property Value Type Description Stream IsAuthenticated Gets a value indicating whether this instance is authenticated. Declaration public bool IsAuthenticated { get; } Property Value Type Description Boolean IsLocal Gets a value indicating whether this instance is local. Declaration public bool IsLocal { get; } Property Value Type Description Boolean IsSecureConnection Gets a value indicating whether this request has been received over a SSL connection. Declaration public bool IsSecureConnection { get; } Property Value Type Description Boolean IsWebSocketRequest Gets a value indicating whether this instance is web socket request. Declaration public bool IsWebSocketRequest { get; } Property Value Type Description Boolean KeepAlive Gets a value indicating whether [keep alive]. Declaration public bool KeepAlive { get; } Property Value Type Description Boolean LocalEndPoint Gets the local end point. Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint ProtocolVersion Gets or sets the protocol version. Declaration public Version ProtocolVersion { get; } Property Value Type Description Version The protocol version. QueryString Gets the query string. Declaration public NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection RawUrl Gets the raw URL. Declaration public string RawUrl { get; } Property Value Type Description String RemoteEndPoint Gets the remote end point. Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint RequestTraceIdentifier Gets the request identifier of the incoming HTTP request. Declaration public Guid RequestTraceIdentifier { get; } Property Value Type Description Guid Url Gets the URL. Declaration public Uri Url { get; } Property Value Type Description Uri UrlReferrer Gets the URL referrer. Declaration public Uri UrlReferrer { get; } Property Value Type Description Uri UserAgent Gets the user agent. Declaration public string UserAgent { get; } Property Value Type Description String Implements IHttpRequest IHttpMessage See Also IHttpRequest Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Tests.TestHttpClient.html": {
    "href": "api/EmbedIO.Tests.TestHttpClient.html",
    "title": "Class TestHttpClient | Unosquare EmbedIO",
    "keywords": "Class TestHttpClient Represents a HTTP Client for unit testing. Inheritance Object TestHttpClient Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Tests Syntax public class TestHttpClient Constructors TestHttpClient(TestWebServer, Encoding) Initializes a new instance of the TestHttpClient class. Declaration public TestHttpClient(TestWebServer server, Encoding encoding = null) Parameters Type Name Description TestWebServer server The server. Encoding encoding The encoding. Properties Encoding Gets or sets the encoding. Declaration public Encoding Encoding { get; } Property Value Type Description Encoding The encoding. Methods GetAsync(String) Gets the asynchronous. Declaration public Task<string> GetAsync(string url = \"\") Parameters Type Name Description String url The URL. Returns Type Description Task < String > A task representing the GET call. SendAsync(TestHttpRequest) Sends the HTTP request asynchronous. Declaration public Task<TestHttpResponse> SendAsync(TestHttpRequest request) Parameters Type Name Description TestHttpRequest request The request. Returns Type Description Task < TestHttpResponse > A task representing the HTTP response. See Also IHttpContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Sessions.html": {
    "href": "api/EmbedIO.Sessions.html",
    "title": "Namespace EmbedIO.Sessions | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Sessions Classes LocalSessionManager A simple session manager to handle in-memory sessions. Not for intensive use or for distributed applications. Session SessionExtensions Provides extension methods for types implementing ISession . SessionProxy Provides the same interface as a session object, plus a basic interface to a session manager. Interfaces ISession Represents a session. ISessionManager Represents a session manager, which is in charge of managing session objects and their association to HTTP contexts. ISessionProxy Represents a session proxy, i.e. an object that provides the same interface as a session object, plus a basic interface to a session manager. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Sessions.SessionProxy.html": {
    "href": "api/EmbedIO.Sessions.SessionProxy.html",
    "title": "Class SessionProxy | Unosquare EmbedIO",
    "keywords": "Class SessionProxy Provides the same interface as a session object, plus a basic interface to a session manager. Inheritance Object SessionProxy Implements ISessionProxy ISession IDataDictionary < String , Object > Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Sessions Syntax public sealed class SessionProxy : ISessionProxy, ISession, IDataDictionary<string, object> Remarks A session proxy can be used just as if it were a session object. A session is automatically created wherever its data are accessed. Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Duration Gets the time interval, starting from LastActivity , after which the session expires. Declaration public TimeSpan Duration { get; } Property Value Type Description TimeSpan The expiration time. Exists Gets a value indicating whether a session exists for the current context. Declaration public bool Exists { get; } Property Value Type Description Boolean true if a session exists; otherwise, false . Id A unique identifier for the session. Declaration public string Id { get; } Property Value Type Description String The unique identifier for this session. See Also IdComparison IdComparer IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Item[String] Declaration public object this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description Object LastActivity Gets the UTC date and time of last activity on the session. Declaration public DateTime LastActivity { get; } Property Value Type Description DateTime The UTC date and time of last activity on the session. Methods Clear() Declaration public void Clear() ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean Delete() Deletes the session for the current context. Declaration public void Delete() Regenerate() Deletes the session for the current context and creates a new one. Declaration public void Regenerate() TryGetValue(String, out Object) Declaration public bool TryGetValue(string key, out object value) Parameters Type Name Description String key Object value Returns Type Description Boolean TryRemove(String, out Object) Declaration public bool TryRemove(string key, out object value) Parameters Type Name Description String key Object value Returns Type Description Boolean Implements ISessionProxy ISession IDataDictionary<, > See Also ISessionProxy Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Sessions.ISessionManager.html": {
    "href": "api/EmbedIO.Sessions.ISessionManager.html",
    "title": "Interface ISessionManager | Unosquare EmbedIO",
    "keywords": "Interface ISessionManager Represents a session manager, which is in charge of managing session objects and their association to HTTP contexts. Namespace : EmbedIO.Sessions Syntax public interface ISessionManager Methods Create(IHttpContext) Returns the session associated with a IHttpContext . If a session ID can be retrieved for the context and stored session data are available, the returned ISession will contain those data; otherwise, a new session is created and its ID is stored in the response to be retrieved by subsequent requests. Declaration ISession Create(IHttpContext context) Parameters Type Name Description IHttpContext context The HTTP context. Returns Type Description ISession A ISession interface. Delete(IHttpContext, String) Deletes the session (if any) associated with the specified context and removes the session's ID from the context. Declaration void Delete(IHttpContext context, string id) Parameters Type Name Description IHttpContext context The HTTP context. String id The unique ID of the session. See Also Id OnContextClose(IHttpContext) Called by a session proxy when a session has been obtained for a IHttpContext and the context is closed, even if the session was subsequently deleted. This method can be used to save session data to a storage medium. Declaration void OnContextClose(IHttpContext context) Parameters Type Name Description IHttpContext context The IHttpContext for which a session was obtained. Start(CancellationToken) Signals a session manager that the web server is starting. Declaration void Start(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token used to stop the web server. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Sessions.ISession.html": {
    "href": "api/EmbedIO.Sessions.ISession.html",
    "title": "Interface ISession | Unosquare EmbedIO",
    "keywords": "Interface ISession Represents a session. Namespace : EmbedIO.Sessions Syntax public interface ISession : IDataDictionary<string, object> Properties Duration Gets the time interval, starting from LastActivity , after which the session expires. Declaration TimeSpan Duration { get; } Property Value Type Description TimeSpan The expiration time. Id A unique identifier for the session. Declaration string Id { get; } Property Value Type Description String The unique identifier for this session. See Also IdComparison IdComparer LastActivity Gets the UTC date and time of last activity on the session. Declaration DateTime LastActivity { get; } Property Value Type Description DateTime The UTC date and time of last activity on the session. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Net.Internal.html": {
    "href": "api/EmbedIO.Net.Internal.html",
    "title": "Namespace EmbedIO.Net.Internal | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Net.Internal Classes SystemHttpRequest Represents a wrapper for HttpListenerContext.Request. SystemHttpResponse Represents a wrapper for HttpListenerContext.Response. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Net.Internal.SystemHttpResponse.html": {
    "href": "api/EmbedIO.Net.Internal.SystemHttpResponse.html",
    "title": "Class SystemHttpResponse | Unosquare EmbedIO",
    "keywords": "Class SystemHttpResponse Represents a wrapper for HttpListenerContext.Response. Inheritance Object SystemHttpResponse Implements IHttpResponse IHttpMessage Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Net.Internal Syntax public class SystemHttpResponse : IHttpResponse, IHttpMessage Constructors SystemHttpResponse(Net.HttpListenerContext) Initializes a new instance of the SystemHttpResponse class. Declaration public SystemHttpResponse(Net.HttpListenerContext context) Parameters Type Name Description Net.HttpListenerContext context The context. Properties ContentEncoding Gets or sets the content encoding. Declaration public Encoding ContentEncoding { get; set; } Property Value Type Description Encoding The content encoding. ContentLength64 Gets or sets the content length. Declaration public long ContentLength64 { get; set; } Property Value Type Description Int64 The content length. ContentType Gets or sets the type of the content. Declaration public string ContentType { get; set; } Property Value Type Description String The type of the content. Cookies Gets the cookies. Declaration public ICookieCollection Cookies { get; } Property Value Type Description ICookieCollection The cookies. Headers Gets the response headers. Declaration public WebHeaderCollection Headers { get; } Property Value Type Description WebHeaderCollection The headers. KeepAlive Gets or sets a value indicating whether [keep alive]. Declaration public bool KeepAlive { get; set; } Property Value Type Description Boolean true if [keep alive]; otherwise, false . OutputStream Gets the output stream. Declaration public Stream OutputStream { get; } Property Value Type Description Stream The output stream. ProtocolVersion Gets or sets the protocol version. Declaration public Version ProtocolVersion { get; set; } Property Value Type Description Version The protocol version. StatusCode Gets or sets the status code. Declaration public int StatusCode { get; set; } Property Value Type Description Int32 The status code. StatusDescription Gets or sets a text description of the HTTP status code. Declaration public string StatusDescription { get; set; } Property Value Type Description String The status description. Methods AddHeader(String, String) Adds a response header. Declaration public void AddHeader(string headerName, string value) Parameters Type Name Description String headerName String value The value. Close() Closes this instance and dispose the resources. Declaration public void Close() SetCookie(Cookie) Sets the cookie. Declaration public void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie The session cookie. Implements IHttpResponse IHttpMessage See Also IHttpResponse Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Net.EndPointManager.html": {
    "href": "api/EmbedIO.Net.EndPointManager.html",
    "title": "Class EndPointManager | Unosquare EmbedIO",
    "keywords": "Class EndPointManager Represents the EndPoint Manager. Inheritance Object EndPointManager Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO.Net Syntax public static class EndPointManager Properties UseIpv6 Gets or sets a value indicating whether [use IPv6]. Declaration public static bool UseIpv6 { get; set; } Property Value Type Description Boolean true if [use IPv6]; otherwise, false . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.ModuleGroup.html": {
    "href": "api/EmbedIO.ModuleGroup.html",
    "title": "Class ModuleGroup | Unosquare EmbedIO",
    "keywords": "Class ModuleGroup Groups modules under a common base URL path. The BaseUrlPath property of modules contained in a ModuleGroup is relative to the ModuleGroup 's BaseUrlPath property. For example, given the following code: new ModuleGroup(\"/download\") .WithStaticFilesAt(\"/docs\", \"/var/my/documents\"); files contained in the /var/my/documents folder will be available to clients under the /download/docs/ URL. Inheritance Object WebModuleBase ModuleGroup Implements IWebModule IWebModuleContainer IDisposable Inherited Members WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO Syntax public class ModuleGroup : WebModuleBase, IWebModule, IWebModuleContainer, IDisposable Constructors ModuleGroup(String) Initializes a new instance of the ModuleGroup class. Declaration public ModuleGroup(string baseUrlPath) Parameters Type Name Description String baseUrlPath The base URL path served by this module. See Also BaseUrlPath Properties Modules Gets the modules. Declaration public IComponentCollection<IWebModule> Modules { get; } Property Value Type Description IComponentCollection < IWebModule > The modules. Methods Dispose() Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Finalize() Finalizes an instance of the ModuleGroup class. Declaration protected void Finalize() OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected override Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Overrides WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. OnStart(CancellationToken) Called when a module is started, immediately before locking the module's configuration. Declaration protected override void OnStart(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A used to stop the web server. Overrides WebModuleBase.OnStart(CancellationToken) Implements IWebModule IWebModuleContainer IDisposable See Also WebModuleBase IWebModuleContainer Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.IHttpContextImpl.html": {
    "href": "api/EmbedIO.IHttpContextImpl.html",
    "title": "Interface IHttpContextImpl | Unosquare EmbedIO",
    "keywords": "Interface IHttpContextImpl Represents a HTTP context implementation, i.e. a HTTP context as seen internally by EmbedIO. This interface is only meant to be consumed internally by EmbedIO. Inherited Members IHttpContext.Id IHttpContext.LocalEndPoint IHttpContext.RemoteEndPoint IHttpContext.Request IHttpContext.Response IHttpContext.User IHttpContext.Items IHttpContext.OnClose(Action<IHttpContext>) Namespace : EmbedIO Syntax public interface IHttpContextImpl : IHttpContext Properties Session Gets or sets the session proxy associated with this context. Declaration ISessionProxy Session { get; set; } Property Value Type Description ISessionProxy A interface. Methods AcceptWebSocketAsync(IEnumerable<String>, String, Int32, TimeSpan, CancellationToken) Asynchronously handles the HTTP part of a SystemWebSocket request and returns a newly-created interface. Declaration Task<IWebSocketContext> AcceptWebSocketAsync(IEnumerable<string> requestedProtocols, string acceptedProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, CancellationToken cancellationToken) Parameters Type Name Description IEnumerable < String > requestedProtocols The requested SystemWebSocket sub-protocols. String acceptedProtocol The accepted SystemWebSocket sub-protocol. Int32 receiveBufferSize Size of the receive buffer. TimeSpan keepAliveInterval The keep-alive interval. CancellationToken cancellationToken A used to stop the server. Returns Type Description Task < IWebSocketContext > A interface. Close() Flushes and closes the response stream, then calls any registered close callbacks. Declaration void Close() See Also OnClose ( Action < IHttpContext >) See Also IHttpContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.IHttpContext.html": {
    "href": "api/EmbedIO.IHttpContext.html",
    "title": "Interface IHttpContext | Unosquare EmbedIO",
    "keywords": "Interface IHttpContext Represents the context of a HTTP(s) request being handled by a web server. Namespace : EmbedIO Syntax public interface IHttpContext Properties Id Gets a unique identifier for a HTTP context. Declaration string Id { get; } Property Value Type Description String Items Gets the dictionary of data to pass trough the EmbedIO pipeline. Declaration IDictionary<object, object> Items { get; } Property Value Type Description IDictionary < Object , Object > LocalEndPoint Gets the server IP address and port number to which the request is directed. Declaration IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint RemoteEndPoint Gets the client IP address and port number from which the request originated. Declaration IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint Request Gets the HTTP request. Declaration IHttpRequest Request { get; } Property Value Type Description IHttpRequest Response Gets the HTTP response object. Declaration IHttpResponse Response { get; } Property Value Type Description IHttpResponse Session Gets the session proxy associated with this context. Declaration ISessionProxy Session { get; } Property Value Type Description ISessionProxy User Gets the user. Declaration IPrincipal User { get; } Property Value Type Description IPrincipal Methods OnClose(Action<IHttpContext>) Registers a callback to be called when processing is finished on a context. Declaration void OnClose(Action<IHttpContext> callback) Parameters Type Name Description Action < IHttpContext > callback The callback. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Files.html": {
    "href": "api/EmbedIO.Files.html",
    "title": "Namespace EmbedIO.Files | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Files Classes FileModuleBase Represents a files module base. FileModuleBaseExtensions Provides extension methods for classes derived from FileModuleBase . ResourceFilesModule Represents a simple module to server resource files from the .NET assembly. StaticFilesModule Represents a simple module to serve files and directories from the file system. Enums FileCachingMode Specifies the file caching modes for StaticFilesModule . Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Files.StaticFilesModule.html": {
    "href": "api/EmbedIO.Files.StaticFilesModule.html",
    "title": "Class StaticFilesModule | Unosquare EmbedIO",
    "keywords": "Class StaticFilesModule Represents a simple module to serve files and directories from the file system. Inheritance Object WebModuleBase FileModuleBase StaticFilesModule Implements IWebModule Inherited Members FileModuleBase.DefaultHeaders FileModuleBase.UseGzip FileModuleBase.WriteFileAsync(String, IHttpResponse, Stream, Boolean, CancellationToken) FileModuleBase.SetDefaultCacheHeaders(IHttpResponse) FileModuleBase.SetGeneralHeaders(IHttpResponse, String, String) WebModuleBase.BaseUrlPath WebModuleBase.Start(CancellationToken) WebModuleBase.HandleRequestAsync(IHttpContext, String, CancellationToken) WebModuleBase.OnStart(CancellationToken) WebModuleBase.OnExceptionAsync(IHttpContext, String, Exception, CancellationToken) Namespace : EmbedIO.Files Syntax public class StaticFilesModule : FileModuleBase, IWebModule Constructors StaticFilesModule(String, String, FileCachingMode, String, String, Boolean, Boolean) Initializes a new instance of the StaticFilesModule class. Declaration public StaticFilesModule(string baseUrlPath, string fileSystemPath, FileCachingMode fileCachingMode = FileCachingMode.MappingOnly, string defaultDocument = \"index.html\", string defaultExtension = null, bool useDirectoryBrowser = false, bool useGzip = true) Parameters Type Name Description String baseUrlPath The URL path under which files are mapped. String fileSystemPath The file system path from which files are retrieved. FileCachingMode fileCachingMode The file caching mode. String defaultDocument The default document name. String defaultExtension The default document extension. Boolean useDirectoryBrowser If set to true , enable directory browsing. Boolean useGzip If set to true , enable GZip compression. Fields DefaultDocumentName Default document constant to \"index.html\". Declaration public const string DefaultDocumentName = \"index.html\" Field Value Type Description String Properties DefaultDocument Gets or sets the default document. Defaults to \"index.html\" . Example: \"root.xml\" . Declaration public string DefaultDocument { get; } Property Value Type Description String DefaultExtension Gets or sets the default extension. Defaults to null . Example: \".html\" . Declaration public string DefaultExtension { get; } Property Value Type Description String FileCachingMode Gets the file caching mode used by this module. Declaration public FileCachingMode FileCachingMode { get; } Property Value Type Description FileCachingMode See Also FileCachingMode FileSystemPath Gets the file system path from which files are retrieved. Declaration public string FileSystemPath { get; } Property Value Type Description String MaxRamCacheFileSize Gets or sets the maximum size, in bytes, of files stored in the RAM cache. The default value is 250kb. Declaration public int MaxRamCacheFileSize { get; set; } Property Value Type Description Int32 UseDirectoryBrowser Gets a value indicating whether directory browsing is enabled. Declaration public bool UseDirectoryBrowser { get; } Property Value Type Description Boolean Methods ClearRamCache() Clears the RAM cache. Declaration public void ClearRamCache() OnRequestAsync(IHttpContext, String, CancellationToken) Called to handle a request from a client. Declaration protected override Task<bool> OnRequestAsync(IHttpContext context, string path, CancellationToken cancellationToken) Parameters Type Name Description IHttpContext context The context of the request being handled. String path The requested path, relative to BaseUrlPath . See the Remarks section for more information. CancellationToken cancellationToken A used to cancel the operation. Returns Type Description Task < Boolean > true if the request has been handled; false if the request should be passed down the module chain. Overrides WebModuleBase.OnRequestAsync(IHttpContext, String, CancellationToken) Remarks The path specified in the requested URL is stripped of the BaseUrlPath and passed in the path parameter. The path parameter is in itself a valid URL path, including an initial slash ( / ) character. Implements IWebModule Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Files.FileCachingMode.html": {
    "href": "api/EmbedIO.Files.FileCachingMode.html",
    "title": "Enum FileCachingMode | Unosquare EmbedIO",
    "keywords": "Enum FileCachingMode Specifies the file caching modes for StaticFilesModule . Namespace : EmbedIO.Files Syntax public enum FileCachingMode Fields Name Description Complete A StaticFilesModule caches URL paths with corresponding file system entries, and stores the contents of requested files in RAM cache. MappingOnly A StaticFilesModule caches URL paths with corresponding file system entries, but stores no contents in RAM cache. None A StaticFilesModule uses no caching. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.Cors.html": {
    "href": "api/EmbedIO.Cors.html",
    "title": "Namespace EmbedIO.Cors | Unosquare EmbedIO",
    "keywords": "Namespace EmbedIO.Cors Classes CorsModule Cross-origin resource sharing (CORS) control Module. CORS is a mechanism that allows restricted resources (e.g. fonts) on a web page to be requested from another domain outside the domain from which the resource originated. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/EmbedIO.CompressionMethods.html": {
    "href": "api/EmbedIO.CompressionMethods.html",
    "title": "Class CompressionMethods | Unosquare EmbedIO",
    "keywords": "Class CompressionMethods Exposes constants for possible values of the Compression HTTP header. Inheritance Object CompressionMethods Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : EmbedIO Syntax public static class CompressionMethods Fields Deflate Specifies the \"Deflate\" compression method. Declaration public const string Deflate = \"deflate\" Field Value Type Description String Gzip Specifies the GZip compression method. Declaration public const string Gzip = \"gzip\" Field Value Type Description String None Specifies no compression. Declaration public const string None = \"none\" Field Value Type Description String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  }
}